
bug4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000036c  00800200  00004486  0000451a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00004486  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000a92  0080056c  0080056c  00004886  2**0
                  ALLOC
  3 .debug_aranges 000005c0  00000000  00000000  00004886  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 0000103d  00000000  00000000  00004e46  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00012f2f  00000000  00000000  00005e83  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00004e9b  00000000  00000000  00018db2  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00004e67  00000000  00000000  0001dc4d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000ad0  00000000  00000000  00022ab4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00002538  00000000  00000000  00023584  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00002984  00000000  00000000  00025abc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000098  00000000  00000000  00028440  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 a0 02 	jmp	0x540	; 0x540 <__ctors_end>
       4:	0c 94 c8 02 	jmp	0x590	; 0x590 <__bad_interrupt>
       8:	0c 94 c8 02 	jmp	0x590	; 0x590 <__bad_interrupt>
       c:	0c 94 c8 02 	jmp	0x590	; 0x590 <__bad_interrupt>
      10:	0c 94 c8 02 	jmp	0x590	; 0x590 <__bad_interrupt>
      14:	0c 94 c8 02 	jmp	0x590	; 0x590 <__bad_interrupt>
      18:	0c 94 c8 02 	jmp	0x590	; 0x590 <__bad_interrupt>
      1c:	0c 94 c8 02 	jmp	0x590	; 0x590 <__bad_interrupt>
      20:	0c 94 c8 02 	jmp	0x590	; 0x590 <__bad_interrupt>
      24:	0c 94 c8 02 	jmp	0x590	; 0x590 <__bad_interrupt>
      28:	0c 94 c8 02 	jmp	0x590	; 0x590 <__bad_interrupt>
      2c:	0c 94 c8 02 	jmp	0x590	; 0x590 <__bad_interrupt>
      30:	0c 94 c8 02 	jmp	0x590	; 0x590 <__bad_interrupt>
      34:	0c 94 c8 02 	jmp	0x590	; 0x590 <__bad_interrupt>
      38:	0c 94 c8 02 	jmp	0x590	; 0x590 <__bad_interrupt>
      3c:	0c 94 c8 02 	jmp	0x590	; 0x590 <__bad_interrupt>
      40:	0c 94 c8 02 	jmp	0x590	; 0x590 <__bad_interrupt>
      44:	0c 94 c8 02 	jmp	0x590	; 0x590 <__bad_interrupt>
      48:	0c 94 c8 02 	jmp	0x590	; 0x590 <__bad_interrupt>
      4c:	0c 94 c8 02 	jmp	0x590	; 0x590 <__bad_interrupt>
      50:	0c 94 c8 02 	jmp	0x590	; 0x590 <__bad_interrupt>
      54:	0c 94 f5 0a 	jmp	0x15ea	; 0x15ea <__vector_21>
      58:	0c 94 aa 19 	jmp	0x3354	; 0x3354 <__vector_22>
      5c:	0c 94 c8 02 	jmp	0x590	; 0x590 <__bad_interrupt>
      60:	0c 94 c8 02 	jmp	0x590	; 0x590 <__bad_interrupt>
      64:	0c 94 c8 02 	jmp	0x590	; 0x590 <__bad_interrupt>
      68:	0c 94 c8 02 	jmp	0x590	; 0x590 <__bad_interrupt>
      6c:	0c 94 c8 02 	jmp	0x590	; 0x590 <__bad_interrupt>
      70:	0c 94 c8 02 	jmp	0x590	; 0x590 <__bad_interrupt>
      74:	0c 94 c8 02 	jmp	0x590	; 0x590 <__bad_interrupt>
      78:	0c 94 c8 02 	jmp	0x590	; 0x590 <__bad_interrupt>
      7c:	0c 94 c8 02 	jmp	0x590	; 0x590 <__bad_interrupt>
      80:	0c 94 c8 02 	jmp	0x590	; 0x590 <__bad_interrupt>
      84:	0c 94 c8 02 	jmp	0x590	; 0x590 <__bad_interrupt>
      88:	0c 94 c8 02 	jmp	0x590	; 0x590 <__bad_interrupt>
      8c:	0c 94 c8 02 	jmp	0x590	; 0x590 <__bad_interrupt>
      90:	0c 94 9a 0b 	jmp	0x1734	; 0x1734 <__vector_36>
      94:	0c 94 c8 02 	jmp	0x590	; 0x590 <__bad_interrupt>
      98:	0c 94 c5 0b 	jmp	0x178a	; 0x178a <__vector_38>
      9c:	0c 94 c8 02 	jmp	0x590	; 0x590 <__bad_interrupt>
      a0:	0c 94 c8 02 	jmp	0x590	; 0x590 <__bad_interrupt>
      a4:	0c 94 c8 02 	jmp	0x590	; 0x590 <__bad_interrupt>
      a8:	0c 94 c8 02 	jmp	0x590	; 0x590 <__bad_interrupt>
      ac:	0c 94 c8 02 	jmp	0x590	; 0x590 <__bad_interrupt>
      b0:	0c 94 c8 02 	jmp	0x590	; 0x590 <__bad_interrupt>
      b4:	0c 94 c8 02 	jmp	0x590	; 0x590 <__bad_interrupt>
      b8:	0c 94 c8 02 	jmp	0x590	; 0x590 <__bad_interrupt>
      bc:	0c 94 c8 02 	jmp	0x590	; 0x590 <__bad_interrupt>
      c0:	0c 94 c8 02 	jmp	0x590	; 0x590 <__bad_interrupt>
      c4:	0c 94 c8 02 	jmp	0x590	; 0x590 <__bad_interrupt>
      c8:	0c 94 c8 02 	jmp	0x590	; 0x590 <__bad_interrupt>
      cc:	0c 94 c8 02 	jmp	0x590	; 0x590 <__bad_interrupt>
      d0:	0c 94 c8 02 	jmp	0x590	; 0x590 <__bad_interrupt>
      d4:	0c 94 c8 02 	jmp	0x590	; 0x590 <__bad_interrupt>
      d8:	0c 94 c8 02 	jmp	0x590	; 0x590 <__bad_interrupt>
      dc:	0c 94 c8 02 	jmp	0x590	; 0x590 <__bad_interrupt>
      e0:	0c 94 c8 02 	jmp	0x590	; 0x590 <__bad_interrupt>

000000e4 <__c.1776>:
      e4:	45 46 47 65 66 67 00                                EFGefg.

000000eb <__c.1770>:
      eb:	20 2b 2d 2e 30 31 32 33 34 35 36 37 38 39 68 00      +-.0123456789h.

000000fb <__timer0Compare>:
      fb:	08 07 00 6e 00 02 47 00 35 00 02 44 00 06 78 03     ...n..G.5..D..x.
     10b:	0c 07 00 6e 00 04 48 00 35 00 04 44 00 04 a8 03     ...n..H.5..D....

0000011b <__timer1Compare>:
     11b:	10 07 01 6f 00 02 88 00 36 00 02 80 00 06 72 03     ...o....6.....r.
     12b:	14 07 01 6f 00 04 8a 00 36 00 04 80 00 04 75 03     ...o....6.....u.
     13b:	18 07 01 6f 00 08 8c 00 36 00 08 80 00 02 78 03     ...o....6.....x.

0000014b <__timer2Compare>:
     14b:	1c 07 02 70 00 02 b3 00 37 00 02 b0 00 06 6f 03     ...p....7.....o.
     15b:	20 07 02 70 00 04 b4 00 37 00 04 b0 00 04 b4 03      ..p....7.......

0000016b <__timer3Compare>:
     16b:	24 07 03 71 00 02 98 00 38 00 02 90 00 06 9c 03     $..q....8.......
     17b:	28 07 03 71 00 04 9a 00 38 00 04 90 00 04 9f 03     (..q....8.......
     18b:	2c 07 03 71 00 08 9c 00 38 00 08 90 00 02 a2 03     ,..q....8.......

0000019b <__timer4Compare>:
     19b:	30 07 04 72 00 02 a8 00 39 00 02 a0 00 06 ab 03     0..r....9.......
     1ab:	34 07 04 72 00 04 aa 00 39 00 04 a0 00 04 ae 03     4..r....9.......
     1bb:	38 07 04 72 00 08 ac 00 39 00 08 a0 00 02 b1 03     8..r....9.......

000001cb <__timer5Compare>:
     1cb:	3c 07 05 73 00 02 28 01 3a 00 02 20 01 06 bd 03     <..s..(.:.. ....
     1db:	40 07 05 73 00 04 2a 01 3a 00 04 20 01 04 c0 03     @..s..*.:.. ....
     1eb:	44 07 05 73 00 08 2c 01 3a 00 08 20 01 02 c3 03     D..s..,.:.. ....

000001fb <pgm_Timers>:
     1fb:	48 07 46 00 45 00 07 00 02 10 15 03 44 00 01 44     H.F.E.......D..D
     20b:	00 02 45 00 08 00 00 01 fb 00 6e 00 01 35 00 01     ..E.......n..5..
     21b:	00 00 00 00 01 00 00 01 00 00 01 00 00 25 03 53     .............%.S
     22b:	07 84 00 81 00 07 ff 03 10 33 03 80 00 01 80 00     .........3......
     23b:	02 81 00 08 81 00 10 1b 01 6f 00 01 36 00 01 86     .........o..6...
     24b:	00 6f 00 20 36 00 20 81 00 40 00 00 25 03 5e 07     .o. 6. ..@..%.^.
     25b:	b2 00 b1 00 07 00 02 10 15 03 b0 00 01 b0 00 02     ................
     26b:	b1 00 08 00 00 01 4b 01 70 00 01 37 00 01 00 00     ......K.p..7....
     27b:	00 00 01 00 00 01 00 00 01 00 00 43 03 69 07 94     ...........C.i..
     28b:	00 91 00 07 ff 03 10 33 03 90 00 01 90 00 02 91     .......3........
     29b:	00 08 91 00 10 6b 01 71 00 01 38 00 01 96 00 71     .....k.q..8....q
     2ab:	00 20 38 00 20 91 00 40 a5 03 25 03 74 07 a4 00     . 8. ..@..%.t...
     2bb:	a1 00 07 ff 03 10 33 03 a0 00 01 a0 00 02 a1 00     ......3.........
     2cb:	08 a1 00 10 9b 01 72 00 01 39 00 01 a6 00 72 00     ......r..9....r.
     2db:	20 39 00 20 a1 00 40 b7 03 25 03 7f 07 24 01 21      9. ..@..%...$.!
     2eb:	01 07 ff 03 10 33 03 20 01 01 20 01 02 21 01 08     .....3. .. ..!..
     2fb:	21 01 10 cb 01 73 00 01 3a 00 01 26 01 73 00 20     !....s..:..&.s. 
     30b:	3a 00 20 21 01 40 ba 03 25 03                       :. !.@..%.

00000315 <mode2WGM_a>:
     315:	00 01 ff ff 02 03 ff ff ff ff ff 05 ff ff ff 07     ................

00000325 <prescale_a>:
     325:	06 00 00 00 01 00 08 00 40 00 00 01 00 04           ........@.....

00000333 <mode2WGM_b>:
     333:	00 01 02 03 04 05 06 07 08 09 0a 0b 0c ff 0e 0f     ................

00000343 <prescale_b>:
     343:	08 00 00 00 01 00 08 00 20 00 40 00 80 00 00 01     ........ .@.....
     353:	00 04                                               ..

00000355 <marquee_list>:
     355:	ce 03                                               ..

00000357 <Servos1_list>:
     357:	f6 03 0c 04 22 04 38 04 4e 04 64 04                 ....".8.N.d.

00000363 <servos2_list>:
     363:	86 04 9c 04 b2 04 c8 04 de 04 f4 04                 ............

0000036f <_B4>:
     36f:	c8 03 10                                            ...

00000372 <_B5>:
     372:	c8 03 20                                            .. 

00000375 <_B6>:
     375:	c8 03 40                                            ..@

00000378 <_B7>:
     378:	c8 03 80                                            ...

0000037b <_C0>:
     37b:	ce 03 01                                            ...

0000037e <_C1>:
     37e:	ce 03 02                                            ...

00000381 <_C2>:
     381:	ce 03 04                                            ...

00000384 <_C3>:
     384:	ce 03 08                                            ...

00000387 <_C4>:
     387:	ce 03 10                                            ...

0000038a <_C5>:
     38a:	ce 03 20                                            .. 

0000038d <_D2>:
     38d:	d4 03 04                                            ...

00000390 <_D3>:
     390:	d4 03 08                                            ...

00000393 <_D5>:
     393:	d4 03 20                                            .. 

00000396 <_D6>:
     396:	d4 03 40                                            ..@

00000399 <_D7>:
     399:	d4 03 80                                            ...

0000039c <_E3>:
     39c:	da 03 08                                            ...

0000039f <_E4>:
     39f:	da 03 10                                            ...

000003a2 <_E5>:
     3a2:	da 03 20                                            .. 

000003a5 <_E7>:
     3a5:	da 03 80                                            ...

000003a8 <_G5>:
     3a8:	e0 03 20                                            .. 

000003ab <_H3>:
     3ab:	e6 03 08                                            ...

000003ae <_H4>:
     3ae:	e6 03 10                                            ...

000003b1 <_H5>:
     3b1:	e6 03 20                                            .. 

000003b4 <_H6>:
     3b4:	e6 03 40                                            ..@

000003b7 <_L0>:
     3b7:	ec 03 01                                            ...

000003ba <_L1>:
     3ba:	ec 03 02                                            ...

000003bd <_L3>:
     3bd:	ec 03 08                                            ...

000003c0 <_L4>:
     3c0:	ec 03 10                                            ...

000003c3 <_L5>:
     3c3:	ec 03 20                                            .. 

000003c6 <AVcc_MV>:
     3c6:	88 13                                               ..

000003c8 <_PORTB>:
     3c8:	25 00 24 00 23 00                                   %.$.#.

000003ce <_PORTC>:
     3ce:	28 00 27 00 26 00                                   (.'.&.

000003d4 <_PORTD>:
     3d4:	2b 00 2a 00 29 00                                   +.*.).

000003da <_PORTE>:
     3da:	2e 00 2d 00 2c 00                                   ..-.,.

000003e0 <_PORTG>:
     3e0:	34 00 33 00 32 00                                   4.3.2.

000003e6 <_PORTH>:
     3e6:	02 01 01 01 00 01                                   ......

000003ec <_PORTL>:
     3ec:	0b 01 0a 01 09 01                                   ......

000003f2 <c_servoPWM>:
     3f2:	68 0e 60 0e                                         h.`.

000003f6 <__c.1912>:
     3f6:	20 45 72 72 6f 72 3a 25 64 0d 0a 00                  Error:%d...

00000402 <__c.1910>:
     402:	55 73 65 72 00                                      User.

00000407 <__c.1908>:
     407:	57 65 62 62 6f 74 4c 69 62 00                       WebbotLib.

00000411 <atoz>:
     411:	ee 3e 9c 7a 9e 8e f6 2e 0c 78 ae 1c aa 2a 3a ce     .>.z.....x...*:.
     421:	e6 0a b6 1e 38 7c b8 6e 76 da                       ....8|.nv.

0000042b <digits>:
     42b:	fc 60 da f2 66 b6 3e e0 fe e6                       .`..f.>...

00000435 <c_hw_uart>:
     435:	64 15 1a 16 36 16 ef 15 21 16 05 16 00 40 7a 10     d...6...!....@z.
     445:	f3 5a 00 a0 72 4e 18 09 00 10 a5 d4 e8 00 00 e8     .Z..rN..........
     455:	76 48 17 00 00 e4 0b 54 02 00 00 ca 9a 3b 00 00     vH.....T.....;..
     465:	00 e1 f5 05 00 00 80 96 98 00 00 00 40 42 0f 00     ............@B..
     475:	00 00 a0 86 01 00 00 00 10 27 00 00 00 00 e8 03     .........'......
     485:	00 00 00 00 64 00 00 00 00 00 0a 00 00 00 00 00     ....d...........
     495:	01 00 00 00 00 00 2c 76 d8 88 dc 67 4f 08 23 df     ......,v...gO.#.
     4a5:	c1 df ae 59 e1 b1 b7 96 e5 e3 e4 53 c6 3a e6 51     ...Y.......S.:.Q
     4b5:	99 76 96 e8 e6 c2 84 26 eb 89 8c 9b 62 ed 40 7c     .v.....&....b.@|
     4c5:	6f fc ef bc 9c 9f 40 f2 ba a5 6f a5 f4 90 05 5a     o.....@...o....Z
     4d5:	2a f7 5c 93 6b 6c f9 67 6d c1 1b fc e0 e4 0d 47     *.\.kl.gm......G
     4e5:	fe f5 20 e6 b5 00 d0 ed 90 2e 03 00 94 35 77 05     .. ..........5w.
     4f5:	00 80 84 1e 08 00 00 20 4e 0a 00 00 00 c8 0c 33     ....... N......3
     505:	33 33 33 0f 98 6e 12 83 11 41 ef 8d 21 14 89 3b     333..n...A..!..;
     515:	e6 55 16 cf fe e6 db 18 d1 84 4b 38 1b f7 7c 1d     .U........K8..|.
     525:	90 1d a4 bb e4 24 20 32 84 72 5e 22 81 00 c9 f1     .....$ 2.r^"....
     535:	24 ec a1 e5 3d 27 00                                $...='.

0000053c <__ctors_start>:
     53c:	23 0c       	add	r2, r3
     53e:	33 0c       	add	r3, r3

00000540 <__ctors_end>:
     540:	11 24       	eor	r1, r1
     542:	1f be       	out	0x3f, r1	; 63
     544:	cf ef       	ldi	r28, 0xFF	; 255
     546:	d1 e2       	ldi	r29, 0x21	; 33
     548:	de bf       	out	0x3e, r29	; 62
     54a:	cd bf       	out	0x3d, r28	; 61

0000054c <__do_copy_data>:
     54c:	15 e0       	ldi	r17, 0x05	; 5
     54e:	a0 e0       	ldi	r26, 0x00	; 0
     550:	b2 e0       	ldi	r27, 0x02	; 2
     552:	e6 e8       	ldi	r30, 0x86	; 134
     554:	f4 e4       	ldi	r31, 0x44	; 68
     556:	02 c0       	rjmp	.+4      	; 0x55c <.do_copy_data_start>

00000558 <.do_copy_data_loop>:
     558:	05 90       	lpm	r0, Z+
     55a:	0d 92       	st	X+, r0

0000055c <.do_copy_data_start>:
     55c:	ac 36       	cpi	r26, 0x6C	; 108
     55e:	b1 07       	cpc	r27, r17
     560:	d9 f7       	brne	.-10     	; 0x558 <.do_copy_data_loop>

00000562 <__do_clear_bss>:
     562:	1f e0       	ldi	r17, 0x0F	; 15
     564:	ac e6       	ldi	r26, 0x6C	; 108
     566:	b5 e0       	ldi	r27, 0x05	; 5
     568:	01 c0       	rjmp	.+2      	; 0x56c <.do_clear_bss_start>

0000056a <.do_clear_bss_loop>:
     56a:	1d 92       	st	X+, r1

0000056c <.do_clear_bss_start>:
     56c:	ae 3f       	cpi	r26, 0xFE	; 254
     56e:	b1 07       	cpc	r27, r17
     570:	e1 f7       	brne	.-8      	; 0x56a <.do_clear_bss_loop>

00000572 <__do_global_ctors>:
     572:	15 e0       	ldi	r17, 0x05	; 5
     574:	c0 e4       	ldi	r28, 0x40	; 64
     576:	d5 e0       	ldi	r29, 0x05	; 5
     578:	04 c0       	rjmp	.+8      	; 0x582 <.do_global_ctors_start>

0000057a <.do_global_ctors_loop>:
     57a:	22 97       	sbiw	r28, 0x02	; 2
     57c:	fe 01       	movw	r30, r28
     57e:	0e 94 3d 22 	call	0x447a	; 0x447a <__tablejump__>

00000582 <.do_global_ctors_start>:
     582:	cc 33       	cpi	r28, 0x3C	; 60
     584:	d1 07       	cpc	r29, r17
     586:	c9 f7       	brne	.-14     	; 0x57a <.do_global_ctors_loop>
     588:	0e 94 c3 11 	call	0x2386	; 0x2386 <main>
     58c:	0c 94 33 1e 	jmp	0x3c66	; 0x3c66 <exit>

00000590 <__bad_interrupt>:
     590:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000594 <__iCliRetVal>:
#endif  /* C++ */
#endif


#ifndef _WINDOWS_
static __inline__ uint8_t __iCliRetVal(void){ cli(); return 1; }
     594:	df 93       	push	r29
     596:	cf 93       	push	r28
     598:	cd b7       	in	r28, 0x3d	; 61
     59a:	de b7       	in	r29, 0x3e	; 62
     59c:	f8 94       	cli
     59e:	81 e0       	ldi	r24, 0x01	; 1
     5a0:	cf 91       	pop	r28
     5a2:	df 91       	pop	r29
     5a4:	08 95       	ret

000005a6 <__iRestore>:
static __inline__ uint8_t __iSeiRetVal(void){ sei(); return 1; }
static __inline__ void __iRestore(const  uint8_t *__s){ SREG = *__s; __asm__ volatile ("" ::: "memory");}
     5a6:	df 93       	push	r29
     5a8:	cf 93       	push	r28
     5aa:	00 d0       	rcall	.+0      	; 0x5ac <__iRestore+0x6>
     5ac:	cd b7       	in	r28, 0x3d	; 61
     5ae:	de b7       	in	r29, 0x3e	; 62
     5b0:	9a 83       	std	Y+2, r25	; 0x02
     5b2:	89 83       	std	Y+1, r24	; 0x01
     5b4:	ef e5       	ldi	r30, 0x5F	; 95
     5b6:	f0 e0       	ldi	r31, 0x00	; 0
     5b8:	a9 81       	ldd	r26, Y+1	; 0x01
     5ba:	ba 81       	ldd	r27, Y+2	; 0x02
     5bc:	8c 91       	ld	r24, X
     5be:	80 83       	st	Z, r24
     5c0:	0f 90       	pop	r0
     5c2:	0f 90       	pop	r0
     5c4:	cf 91       	pop	r28
     5c6:	df 91       	pop	r29
     5c8:	08 95       	ret

000005ca <__act_getSpeed>:
* Define methods common to all actuators
-----------------------------------------------------------------------------------------*/

void __act_setSpeed(__ACTUATOR* act, DRIVE_SPEED speed);

static __inline__ DRIVE_SPEED __act_getSpeed(const __ACTUATOR* act){
     5ca:	df 93       	push	r29
     5cc:	cf 93       	push	r28
     5ce:	00 d0       	rcall	.+0      	; 0x5d0 <__act_getSpeed+0x6>
     5d0:	cd b7       	in	r28, 0x3d	; 61
     5d2:	de b7       	in	r29, 0x3e	; 62
     5d4:	9a 83       	std	Y+2, r25	; 0x02
     5d6:	89 83       	std	Y+1, r24	; 0x01
	return act->required_speed;
     5d8:	e9 81       	ldd	r30, Y+1	; 0x01
     5da:	fa 81       	ldd	r31, Y+2	; 0x02
     5dc:	82 81       	ldd	r24, Z+2	; 0x02
}
     5de:	0f 90       	pop	r0
     5e0:	0f 90       	pop	r0
     5e2:	cf 91       	pop	r28
     5e4:	df 91       	pop	r29
     5e6:	08 95       	ret

000005e8 <_ZNK8Actuator8getSpeedEv>:
		m_cstr = cstr;
	}
	void setSpeed(DRIVE_SPEED speed){
		__act_setSpeed(m_cstr,speed);
	}
	DRIVE_SPEED getSpeed(void) const{
     5e8:	df 93       	push	r29
     5ea:	cf 93       	push	r28
     5ec:	00 d0       	rcall	.+0      	; 0x5ee <_ZNK8Actuator8getSpeedEv+0x6>
     5ee:	cd b7       	in	r28, 0x3d	; 61
     5f0:	de b7       	in	r29, 0x3e	; 62
     5f2:	9a 83       	std	Y+2, r25	; 0x02
     5f4:	89 83       	std	Y+1, r24	; 0x01
		return __act_getSpeed(m_cstr);
     5f6:	e9 81       	ldd	r30, Y+1	; 0x01
     5f8:	fa 81       	ldd	r31, Y+2	; 0x02
     5fa:	80 81       	ld	r24, Z
     5fc:	91 81       	ldd	r25, Z+1	; 0x01
     5fe:	0e 94 e5 02 	call	0x5ca	; 0x5ca <__act_getSpeed>
	}
     602:	0f 90       	pop	r0
     604:	0f 90       	pop	r0
     606:	cf 91       	pop	r28
     608:	df 91       	pop	r29
     60a:	08 95       	ret

0000060c <_Z18initialize_commandP7command>:
char r_curr_subcommand;
int8_t r_curr_servo;

TICK_COUNT last_loop_time;

void initialize_command (struct command* command) {
     60c:	df 93       	push	r29
     60e:	cf 93       	push	r28
     610:	00 d0       	rcall	.+0      	; 0x612 <_Z18initialize_commandP7command+0x6>
     612:	00 d0       	rcall	.+0      	; 0x614 <_Z18initialize_commandP7command+0x8>
     614:	cd b7       	in	r28, 0x3d	; 61
     616:	de b7       	in	r29, 0x3e	; 62
     618:	9c 83       	std	Y+4, r25	; 0x04
     61a:	8b 83       	std	Y+3, r24	; 0x03
	(*command).time = 1;
     61c:	8b 81       	ldd	r24, Y+3	; 0x03
     61e:	9c 81       	ldd	r25, Y+4	; 0x04
     620:	fc 01       	movw	r30, r24
     622:	e5 54       	subi	r30, 0x45	; 69
     624:	ff 4f       	sbci	r31, 0xFF	; 255
     626:	81 e0       	ldi	r24, 0x01	; 1
     628:	90 e0       	ldi	r25, 0x00	; 0
     62a:	91 83       	std	Z+1, r25	; 0x01
     62c:	80 83       	st	Z, r24
	for(int16_t i=0;i<=SERVOS_NUMBER;i++) {
     62e:	1a 82       	std	Y+2, r1	; 0x02
     630:	19 82       	std	Y+1, r1	; 0x01
     632:	5f c0       	rjmp	.+190    	; 0x6f2 <_Z18initialize_commandP7command+0xe6>
		(*command).has_changed[i]=0;
     634:	29 81       	ldd	r18, Y+1	; 0x01
     636:	3a 81       	ldd	r19, Y+2	; 0x02
     638:	8b 81       	ldd	r24, Y+3	; 0x03
     63a:	9c 81       	ldd	r25, Y+4	; 0x04
     63c:	fc 01       	movw	r30, r24
     63e:	e2 0f       	add	r30, r18
     640:	f3 1f       	adc	r31, r19
     642:	10 82       	st	Z, r1
		(*command).servo_target_positions[i]=MY_DRIVE_SPEED_AVERAGE;
     644:	89 81       	ldd	r24, Y+1	; 0x01
     646:	9a 81       	ldd	r25, Y+2	; 0x02
     648:	2b 81       	ldd	r18, Y+3	; 0x03
     64a:	3c 81       	ldd	r19, Y+4	; 0x04
     64c:	88 0f       	add	r24, r24
     64e:	99 1f       	adc	r25, r25
     650:	88 0f       	add	r24, r24
     652:	99 1f       	adc	r25, r25
     654:	82 0f       	add	r24, r18
     656:	93 1f       	adc	r25, r19
     658:	fc 01       	movw	r30, r24
     65a:	3b 96       	adiw	r30, 0x0b	; 11
     65c:	80 e0       	ldi	r24, 0x00	; 0
     65e:	90 e8       	ldi	r25, 0x80	; 128
     660:	ab eb       	ldi	r26, 0xBB	; 187
     662:	b4 e4       	ldi	r27, 0x44	; 68
     664:	80 83       	st	Z, r24
     666:	91 83       	std	Z+1, r25	; 0x01
     668:	a2 83       	std	Z+2, r26	; 0x02
     66a:	b3 83       	std	Z+3, r27	; 0x03
		(*command).servo_current_positions[i]=MY_DRIVE_SPEED_AVERAGE;
     66c:	89 81       	ldd	r24, Y+1	; 0x01
     66e:	9a 81       	ldd	r25, Y+2	; 0x02
     670:	2b 81       	ldd	r18, Y+3	; 0x03
     672:	3c 81       	ldd	r19, Y+4	; 0x04
     674:	88 0f       	add	r24, r24
     676:	99 1f       	adc	r25, r25
     678:	88 0f       	add	r24, r24
     67a:	99 1f       	adc	r25, r25
     67c:	82 0f       	add	r24, r18
     67e:	93 1f       	adc	r25, r19
     680:	fc 01       	movw	r30, r24
     682:	f7 96       	adiw	r30, 0x37	; 55
     684:	80 e0       	ldi	r24, 0x00	; 0
     686:	90 e8       	ldi	r25, 0x80	; 128
     688:	ab eb       	ldi	r26, 0xBB	; 187
     68a:	b4 e4       	ldi	r27, 0x44	; 68
     68c:	80 83       	st	Z, r24
     68e:	91 83       	std	Z+1, r25	; 0x01
     690:	a2 83       	std	Z+2, r26	; 0x02
     692:	b3 83       	std	Z+3, r27	; 0x03
		(*command).servo_speeds[i]=10;
     694:	89 81       	ldd	r24, Y+1	; 0x01
     696:	9a 81       	ldd	r25, Y+2	; 0x02
     698:	2b 81       	ldd	r18, Y+3	; 0x03
     69a:	3c 81       	ldd	r19, Y+4	; 0x04
     69c:	88 0f       	add	r24, r24
     69e:	99 1f       	adc	r25, r25
     6a0:	88 0f       	add	r24, r24
     6a2:	99 1f       	adc	r25, r25
     6a4:	82 0f       	add	r24, r18
     6a6:	93 1f       	adc	r25, r19
     6a8:	fc 01       	movw	r30, r24
     6aa:	ed 59       	subi	r30, 0x9D	; 157
     6ac:	ff 4f       	sbci	r31, 0xFF	; 255
     6ae:	80 e0       	ldi	r24, 0x00	; 0
     6b0:	90 e0       	ldi	r25, 0x00	; 0
     6b2:	a0 e2       	ldi	r26, 0x20	; 32
     6b4:	b1 e4       	ldi	r27, 0x41	; 65
     6b6:	80 83       	st	Z, r24
     6b8:	91 83       	std	Z+1, r25	; 0x01
     6ba:	a2 83       	std	Z+2, r26	; 0x02
     6bc:	b3 83       	std	Z+3, r27	; 0x03
		(*command).servo_speed_per_tick[i]=100;
     6be:	89 81       	ldd	r24, Y+1	; 0x01
     6c0:	9a 81       	ldd	r25, Y+2	; 0x02
     6c2:	2b 81       	ldd	r18, Y+3	; 0x03
     6c4:	3c 81       	ldd	r19, Y+4	; 0x04
     6c6:	88 0f       	add	r24, r24
     6c8:	99 1f       	adc	r25, r25
     6ca:	88 0f       	add	r24, r24
     6cc:	99 1f       	adc	r25, r25
     6ce:	82 0f       	add	r24, r18
     6d0:	93 1f       	adc	r25, r19
     6d2:	fc 01       	movw	r30, r24
     6d4:	e1 57       	subi	r30, 0x71	; 113
     6d6:	ff 4f       	sbci	r31, 0xFF	; 255
     6d8:	80 e0       	ldi	r24, 0x00	; 0
     6da:	90 e0       	ldi	r25, 0x00	; 0
     6dc:	a8 ec       	ldi	r26, 0xC8	; 200
     6de:	b2 e4       	ldi	r27, 0x42	; 66
     6e0:	80 83       	st	Z, r24
     6e2:	91 83       	std	Z+1, r25	; 0x01
     6e4:	a2 83       	std	Z+2, r26	; 0x02
     6e6:	b3 83       	std	Z+3, r27	; 0x03

TICK_COUNT last_loop_time;

void initialize_command (struct command* command) {
	(*command).time = 1;
	for(int16_t i=0;i<=SERVOS_NUMBER;i++) {
     6e8:	89 81       	ldd	r24, Y+1	; 0x01
     6ea:	9a 81       	ldd	r25, Y+2	; 0x02
     6ec:	01 96       	adiw	r24, 0x01	; 1
     6ee:	9a 83       	std	Y+2, r25	; 0x02
     6f0:	89 83       	std	Y+1, r24	; 0x01
     6f2:	89 81       	ldd	r24, Y+1	; 0x01
     6f4:	9a 81       	ldd	r25, Y+2	; 0x02
     6f6:	8c 30       	cpi	r24, 0x0C	; 12
     6f8:	91 05       	cpc	r25, r1
     6fa:	0c f4       	brge	.+2      	; 0x6fe <_Z18initialize_commandP7command+0xf2>
     6fc:	9b cf       	rjmp	.-202    	; 0x634 <_Z18initialize_commandP7command+0x28>
		(*command).servo_target_positions[i]=MY_DRIVE_SPEED_AVERAGE;
		(*command).servo_current_positions[i]=MY_DRIVE_SPEED_AVERAGE;
		(*command).servo_speeds[i]=10;
		(*command).servo_speed_per_tick[i]=100;
	}
}
     6fe:	0f 90       	pop	r0
     700:	0f 90       	pop	r0
     702:	0f 90       	pop	r0
     704:	0f 90       	pop	r0
     706:	cf 91       	pop	r28
     708:	df 91       	pop	r29
     70a:	08 95       	ret

0000070c <appInitSoftware>:
	servos[11] = &servo12;
	initialize_command(&command_receiving);
	initialize_command(&command_in_process);
}
// Initialise the software
TICK_COUNT appInitSoftware(TICK_COUNT loopStart){
     70c:	df 93       	push	r29
     70e:	cf 93       	push	r28
     710:	00 d0       	rcall	.+0      	; 0x712 <appInitSoftware+0x6>
     712:	00 d0       	rcall	.+0      	; 0x714 <appInitSoftware+0x8>
     714:	cd b7       	in	r28, 0x3d	; 61
     716:	de b7       	in	r29, 0x3e	; 62
     718:	69 83       	std	Y+1, r22	; 0x01
     71a:	7a 83       	std	Y+2, r23	; 0x02
     71c:	8b 83       	std	Y+3, r24	; 0x03
     71e:	9c 83       	std	Y+4, r25	; 0x04
	//uart1.attach(&reader, NULL);
	return 0;
     720:	80 e0       	ldi	r24, 0x00	; 0
     722:	90 e0       	ldi	r25, 0x00	; 0
     724:	a0 e0       	ldi	r26, 0x00	; 0
     726:	b0 e0       	ldi	r27, 0x00	; 0
}
     728:	bc 01       	movw	r22, r24
     72a:	cd 01       	movw	r24, r26
     72c:	0f 90       	pop	r0
     72e:	0f 90       	pop	r0
     730:	0f 90       	pop	r0
     732:	0f 90       	pop	r0
     734:	cf 91       	pop	r28
     736:	df 91       	pop	r29
     738:	08 95       	ret

0000073a <_ZN6UartHW4readEv>:
	UartHW(HW_UART* uart) : Uart(&uart->_uart_){
		m_hw = uart;
		m_polling = FALSE;
	};

	virtual int read(void){
     73a:	df 93       	push	r29
     73c:	cf 93       	push	r28
     73e:	00 d0       	rcall	.+0      	; 0x740 <_ZN6UartHW4readEv+0x6>
     740:	00 d0       	rcall	.+0      	; 0x742 <_ZN6UartHW4readEv+0x8>
     742:	cd b7       	in	r28, 0x3d	; 61
     744:	de b7       	in	r29, 0x3e	; 62
     746:	9c 83       	std	Y+4, r25	; 0x04
     748:	8b 83       	std	Y+3, r24	; 0x03
		int ch;

		if(m_polling){
     74a:	eb 81       	ldd	r30, Y+3	; 0x03
     74c:	fc 81       	ldd	r31, Y+4	; 0x04
     74e:	80 8d       	ldd	r24, Z+24	; 0x18
     750:	88 23       	and	r24, r24
     752:	49 f0       	breq	.+18     	; 0x766 <_ZN6UartHW4readEv+0x2c>
			ch = uartPollByte(m_hw);
     754:	eb 81       	ldd	r30, Y+3	; 0x03
     756:	fc 81       	ldd	r31, Y+4	; 0x04
     758:	86 89       	ldd	r24, Z+22	; 0x16
     75a:	97 89       	ldd	r25, Z+23	; 0x17
     75c:	0e 94 72 17 	call	0x2ee4	; 0x2ee4 <uartPollByte>
     760:	9a 83       	std	Y+2, r25	; 0x02
     762:	89 83       	std	Y+1, r24	; 0x01
     764:	08 c0       	rjmp	.+16     	; 0x776 <_ZN6UartHW4readEv+0x3c>
		}else{
			ch = __uartGetByte(m_cstr);
     766:	eb 81       	ldd	r30, Y+3	; 0x03
     768:	fc 81       	ldd	r31, Y+4	; 0x04
     76a:	80 89       	ldd	r24, Z+16	; 0x10
     76c:	91 89       	ldd	r25, Z+17	; 0x11
     76e:	0e 94 6c 16 	call	0x2cd8	; 0x2cd8 <__uartGetByte>
     772:	9a 83       	std	Y+2, r25	; 0x02
     774:	89 83       	std	Y+1, r24	; 0x01
		}

		return ch;
     776:	89 81       	ldd	r24, Y+1	; 0x01
     778:	9a 81       	ldd	r25, Y+2	; 0x02
	}
     77a:	0f 90       	pop	r0
     77c:	0f 90       	pop	r0
     77e:	0f 90       	pop	r0
     780:	0f 90       	pop	r0
     782:	cf 91       	pop	r28
     784:	df 91       	pop	r29
     786:	08 95       	ret

00000788 <_ZN6StreamlsEc>:
	}

	Stream& operator<< (const char str[] ){
		return print(str);
	}
	Stream& operator<< (char c ){
     788:	df 93       	push	r29
     78a:	cf 93       	push	r28
     78c:	00 d0       	rcall	.+0      	; 0x78e <_ZN6StreamlsEc+0x6>
     78e:	0f 92       	push	r0
     790:	cd b7       	in	r28, 0x3d	; 61
     792:	de b7       	in	r29, 0x3e	; 62
     794:	9a 83       	std	Y+2, r25	; 0x02
     796:	89 83       	std	Y+1, r24	; 0x01
     798:	6b 83       	std	Y+3, r22	; 0x03
		return print(c);
     79a:	89 81       	ldd	r24, Y+1	; 0x01
     79c:	9a 81       	ldd	r25, Y+2	; 0x02
     79e:	6b 81       	ldd	r22, Y+3	; 0x03
     7a0:	0e 94 07 0f 	call	0x1e0e	; 0x1e0e <_ZN6Stream5printEc>
	}
     7a4:	0f 90       	pop	r0
     7a6:	0f 90       	pop	r0
     7a8:	0f 90       	pop	r0
     7aa:	cf 91       	pop	r28
     7ac:	df 91       	pop	r29
     7ae:	08 95       	ret

000007b0 <_ZN6StreamlsEd>:
		return print(num);
	}
	Stream& operator<< (int32_t num ){
		return print(num);
	}
	Stream& operator<< (double num ){
     7b0:	df 93       	push	r29
     7b2:	cf 93       	push	r28
     7b4:	00 d0       	rcall	.+0      	; 0x7b6 <_ZN6StreamlsEd+0x6>
     7b6:	00 d0       	rcall	.+0      	; 0x7b8 <_ZN6StreamlsEd+0x8>
     7b8:	00 d0       	rcall	.+0      	; 0x7ba <_ZN6StreamlsEd+0xa>
     7ba:	cd b7       	in	r28, 0x3d	; 61
     7bc:	de b7       	in	r29, 0x3e	; 62
     7be:	9a 83       	std	Y+2, r25	; 0x02
     7c0:	89 83       	std	Y+1, r24	; 0x01
     7c2:	4b 83       	std	Y+3, r20	; 0x03
     7c4:	5c 83       	std	Y+4, r21	; 0x04
     7c6:	6d 83       	std	Y+5, r22	; 0x05
     7c8:	7e 83       	std	Y+6, r23	; 0x06
		return print(num);
     7ca:	89 81       	ldd	r24, Y+1	; 0x01
     7cc:	9a 81       	ldd	r25, Y+2	; 0x02
     7ce:	2b 81       	ldd	r18, Y+3	; 0x03
     7d0:	3c 81       	ldd	r19, Y+4	; 0x04
     7d2:	4d 81       	ldd	r20, Y+5	; 0x05
     7d4:	5e 81       	ldd	r21, Y+6	; 0x06
     7d6:	ba 01       	movw	r22, r20
     7d8:	a9 01       	movw	r20, r18
     7da:	22 e0       	ldi	r18, 0x02	; 2
     7dc:	0e 94 22 0f 	call	0x1e44	; 0x1e44 <_ZN6Stream5printEdh>
	}
     7e0:	26 96       	adiw	r28, 0x06	; 6
     7e2:	0f b6       	in	r0, 0x3f	; 63
     7e4:	f8 94       	cli
     7e6:	de bf       	out	0x3e, r29	; 62
     7e8:	0f be       	out	0x3f, r0	; 63
     7ea:	cd bf       	out	0x3d, r28	; 61
     7ec:	cf 91       	pop	r28
     7ee:	df 91       	pop	r29
     7f0:	08 95       	ret

000007f2 <_ZN6StreamlsEi>:
		return print(num);
	}
	Stream& operator<< (int8_t num ){
		return print(num);
	}
	Stream& operator<< (int16_t num ){
     7f2:	df 93       	push	r29
     7f4:	cf 93       	push	r28
     7f6:	00 d0       	rcall	.+0      	; 0x7f8 <_ZN6StreamlsEi+0x6>
     7f8:	00 d0       	rcall	.+0      	; 0x7fa <_ZN6StreamlsEi+0x8>
     7fa:	cd b7       	in	r28, 0x3d	; 61
     7fc:	de b7       	in	r29, 0x3e	; 62
     7fe:	9a 83       	std	Y+2, r25	; 0x02
     800:	89 83       	std	Y+1, r24	; 0x01
     802:	7c 83       	std	Y+4, r23	; 0x04
     804:	6b 83       	std	Y+3, r22	; 0x03
		return print(num);
     806:	89 81       	ldd	r24, Y+1	; 0x01
     808:	9a 81       	ldd	r25, Y+2	; 0x02
     80a:	2b 81       	ldd	r18, Y+3	; 0x03
     80c:	3c 81       	ldd	r19, Y+4	; 0x04
     80e:	b9 01       	movw	r22, r18
     810:	0e 94 81 0f 	call	0x1f02	; 0x1f02 <_ZN6Stream5printEi>
	}
     814:	0f 90       	pop	r0
     816:	0f 90       	pop	r0
     818:	0f 90       	pop	r0
     81a:	0f 90       	pop	r0
     81c:	cf 91       	pop	r28
     81e:	df 91       	pop	r29
     820:	08 95       	ret

00000822 <_ZNK4Uart15isRxBufferEmptyEv>:
	}
	void flushTx(void) const{
		__uartFlushTransmitBuffer(m_cstr);
	}

	boolean isRxBufferEmpty(void) const{
     822:	df 93       	push	r29
     824:	cf 93       	push	r28
     826:	00 d0       	rcall	.+0      	; 0x828 <_ZNK4Uart15isRxBufferEmptyEv+0x6>
     828:	cd b7       	in	r28, 0x3d	; 61
     82a:	de b7       	in	r29, 0x3e	; 62
     82c:	9a 83       	std	Y+2, r25	; 0x02
     82e:	89 83       	std	Y+1, r24	; 0x01
		return __uartReceiveBufferIsEmpty(m_cstr);
     830:	e9 81       	ldd	r30, Y+1	; 0x01
     832:	fa 81       	ldd	r31, Y+2	; 0x02
     834:	80 89       	ldd	r24, Z+16	; 0x10
     836:	91 89       	ldd	r25, Z+17	; 0x11
     838:	0e 94 86 17 	call	0x2f0c	; 0x2f0c <__uartReceiveBufferIsEmpty>
	}
     83c:	0f 90       	pop	r0
     83e:	0f 90       	pop	r0
     840:	cf 91       	pop	r28
     842:	df 91       	pop	r29
     844:	08 95       	ret

00000846 <_ZN8Actuator8setSpeedEa>:
class Actuator{
public:
	Actuator(__ACTUATOR* cstr){
		m_cstr = cstr;
	}
	void setSpeed(DRIVE_SPEED speed){
     846:	df 93       	push	r29
     848:	cf 93       	push	r28
     84a:	00 d0       	rcall	.+0      	; 0x84c <_ZN8Actuator8setSpeedEa+0x6>
     84c:	0f 92       	push	r0
     84e:	cd b7       	in	r28, 0x3d	; 61
     850:	de b7       	in	r29, 0x3e	; 62
     852:	9a 83       	std	Y+2, r25	; 0x02
     854:	89 83       	std	Y+1, r24	; 0x01
     856:	6b 83       	std	Y+3, r22	; 0x03
		__act_setSpeed(m_cstr,speed);
     858:	e9 81       	ldd	r30, Y+1	; 0x01
     85a:	fa 81       	ldd	r31, Y+2	; 0x02
     85c:	80 81       	ld	r24, Z
     85e:	91 81       	ldd	r25, Z+1	; 0x01
     860:	6b 81       	ldd	r22, Y+3	; 0x03
     862:	0e 94 10 10 	call	0x2020	; 0x2020 <__act_setSpeed>
	}
     866:	0f 90       	pop	r0
     868:	0f 90       	pop	r0
     86a:	0f 90       	pop	r0
     86c:	cf 91       	pop	r28
     86e:	df 91       	pop	r29
     870:	08 95       	ret

00000872 <_ZN6StreamlsEh>:
		return print(str);
	}
	Stream& operator<< (char c ){
		return print(c);
	}
	Stream& operator<< (uint8_t num ){
     872:	df 93       	push	r29
     874:	cf 93       	push	r28
     876:	00 d0       	rcall	.+0      	; 0x878 <_ZN6StreamlsEh+0x6>
     878:	0f 92       	push	r0
     87a:	cd b7       	in	r28, 0x3d	; 61
     87c:	de b7       	in	r29, 0x3e	; 62
     87e:	9a 83       	std	Y+2, r25	; 0x02
     880:	89 83       	std	Y+1, r24	; 0x01
     882:	6b 83       	std	Y+3, r22	; 0x03
		return print(num);
     884:	89 81       	ldd	r24, Y+1	; 0x01
     886:	9a 81       	ldd	r25, Y+2	; 0x02
     888:	6b 81       	ldd	r22, Y+3	; 0x03
     88a:	0e 94 f6 0f 	call	0x1fec	; 0x1fec <_ZN6Stream5printEh>
	}
     88e:	0f 90       	pop	r0
     890:	0f 90       	pop	r0
     892:	0f 90       	pop	r0
     894:	cf 91       	pop	r28
     896:	df 91       	pop	r29
     898:	08 95       	ret

0000089a <_ZN6StreamlsEa>:
		return print(num);
	}
	Stream& operator<< (uint32_t num ){
		return print(num);
	}
	Stream& operator<< (int8_t num ){
     89a:	df 93       	push	r29
     89c:	cf 93       	push	r28
     89e:	00 d0       	rcall	.+0      	; 0x8a0 <_ZN6StreamlsEa+0x6>
     8a0:	0f 92       	push	r0
     8a2:	cd b7       	in	r28, 0x3d	; 61
     8a4:	de b7       	in	r29, 0x3e	; 62
     8a6:	9a 83       	std	Y+2, r25	; 0x02
     8a8:	89 83       	std	Y+1, r24	; 0x01
     8aa:	6b 83       	std	Y+3, r22	; 0x03
		return print(num);
     8ac:	89 81       	ldd	r24, Y+1	; 0x01
     8ae:	9a 81       	ldd	r25, Y+2	; 0x02
     8b0:	6b 81       	ldd	r22, Y+3	; 0x03
     8b2:	0e 94 8a 0f 	call	0x1f14	; 0x1f14 <_ZN6Stream5printEa>
	}
     8b6:	0f 90       	pop	r0
     8b8:	0f 90       	pop	r0
     8ba:	0f 90       	pop	r0
     8bc:	cf 91       	pop	r28
     8be:	df 91       	pop	r29
     8c0:	08 95       	ret

000008c2 <_ZN6StreamlsEPKc>:
	// Dump the value of a sensor
	Stream& operator<< (Sensor& sensor ){
		return print(sensor);
	}

	Stream& operator<< (const char str[] ){
     8c2:	df 93       	push	r29
     8c4:	cf 93       	push	r28
     8c6:	00 d0       	rcall	.+0      	; 0x8c8 <_ZN6StreamlsEPKc+0x6>
     8c8:	00 d0       	rcall	.+0      	; 0x8ca <_ZN6StreamlsEPKc+0x8>
     8ca:	cd b7       	in	r28, 0x3d	; 61
     8cc:	de b7       	in	r29, 0x3e	; 62
     8ce:	9a 83       	std	Y+2, r25	; 0x02
     8d0:	89 83       	std	Y+1, r24	; 0x01
     8d2:	7c 83       	std	Y+4, r23	; 0x04
     8d4:	6b 83       	std	Y+3, r22	; 0x03
		return print(str);
     8d6:	89 81       	ldd	r24, Y+1	; 0x01
     8d8:	9a 81       	ldd	r25, Y+2	; 0x02
     8da:	2b 81       	ldd	r18, Y+3	; 0x03
     8dc:	3c 81       	ldd	r19, Y+4	; 0x04
     8de:	b9 01       	movw	r22, r18
     8e0:	0e 94 a8 0f 	call	0x1f50	; 0x1f50 <_ZN6Stream5printEPKc>
	}
     8e4:	0f 90       	pop	r0
     8e6:	0f 90       	pop	r0
     8e8:	0f 90       	pop	r0
     8ea:	0f 90       	pop	r0
     8ec:	cf 91       	pop	r28
     8ee:	df 91       	pop	r29
     8f0:	08 95       	ret

000008f2 <_Z6to_intc>:
		cout << "#" << ia << " Changed?:" << (*command).has_changed[ia] << " Trgt: " << (*command).servo_target_positions[ia] << "\n";    //: Current pos: " << (*command).servo_current_positions[ia] << " Speed: " << (*command).servo_speeds[ia] << " Spt: " << (*command).servo_speed_per_tick[ia] << "\n";
	}
}


int to_int (char chr) {
     8f2:	df 93       	push	r29
     8f4:	cf 93       	push	r28
     8f6:	00 d0       	rcall	.+0      	; 0x8f8 <_Z6to_intc+0x6>
     8f8:	00 d0       	rcall	.+0      	; 0x8fa <_Z6to_intc+0x8>
     8fa:	0f 92       	push	r0
     8fc:	cd b7       	in	r28, 0x3d	; 61
     8fe:	de b7       	in	r29, 0x3e	; 62
     900:	8b 83       	std	Y+3, r24	; 0x03
	int i = chr - '0';
     902:	8b 81       	ldd	r24, Y+3	; 0x03
     904:	88 2f       	mov	r24, r24
     906:	90 e0       	ldi	r25, 0x00	; 0
     908:	c0 97       	sbiw	r24, 0x30	; 48
     90a:	9a 83       	std	Y+2, r25	; 0x02
     90c:	89 83       	std	Y+1, r24	; 0x01
	if (VERBOSE==1) {
     90e:	80 91 82 05 	lds	r24, 0x0582
     912:	81 30       	cpi	r24, 0x01	; 1
     914:	19 f5       	brne	.+70     	; 0x95c <_Z6to_intc+0x6a>
		cout << "\n To_int'd number:" << i << "\n";
     916:	80 91 fa 0f 	lds	r24, 0x0FFA
     91a:	90 91 fb 0f 	lds	r25, 0x0FFB
     91e:	00 97       	sbiw	r24, 0x00	; 0
     920:	51 f0       	breq	.+20     	; 0x936 <_Z6to_intc+0x44>
     922:	80 91 fa 0f 	lds	r24, 0x0FFA
     926:	90 91 fb 0f 	lds	r25, 0x0FFB
     92a:	9c 01       	movw	r18, r24
     92c:	22 50       	subi	r18, 0x02	; 2
     92e:	30 40       	sbci	r19, 0x00	; 0
     930:	3d 83       	std	Y+5, r19	; 0x05
     932:	2c 83       	std	Y+4, r18	; 0x04
     934:	02 c0       	rjmp	.+4      	; 0x93a <_Z6to_intc+0x48>
     936:	1d 82       	std	Y+5, r1	; 0x05
     938:	1c 82       	std	Y+4, r1	; 0x04
     93a:	20 e0       	ldi	r18, 0x00	; 0
     93c:	32 e0       	ldi	r19, 0x02	; 2
     93e:	8c 81       	ldd	r24, Y+4	; 0x04
     940:	9d 81       	ldd	r25, Y+5	; 0x05
     942:	b9 01       	movw	r22, r18
     944:	0e 94 61 04 	call	0x8c2	; 0x8c2 <_ZN6StreamlsEPKc>
     948:	29 81       	ldd	r18, Y+1	; 0x01
     94a:	3a 81       	ldd	r19, Y+2	; 0x02
     94c:	b9 01       	movw	r22, r18
     94e:	0e 94 f9 03 	call	0x7f2	; 0x7f2 <_ZN6StreamlsEi>
     952:	23 e1       	ldi	r18, 0x13	; 19
     954:	32 e0       	ldi	r19, 0x02	; 2
     956:	b9 01       	movw	r22, r18
     958:	0e 94 61 04 	call	0x8c2	; 0x8c2 <_ZN6StreamlsEPKc>
	}
	return i;
     95c:	89 81       	ldd	r24, Y+1	; 0x01
     95e:	9a 81       	ldd	r25, Y+2	; 0x02
}
     960:	0f 90       	pop	r0
     962:	0f 90       	pop	r0
     964:	0f 90       	pop	r0
     966:	0f 90       	pop	r0
     968:	0f 90       	pop	r0
     96a:	cf 91       	pop	r28
     96c:	df 91       	pop	r29
     96e:	08 95       	ret

00000970 <appInitHardware>:




// Initialise the hardware
void appInitHardware(void) {
     970:	df 93       	push	r29
     972:	cf 93       	push	r28
     974:	cd b7       	in	r28, 0x3d	; 61
     976:	de b7       	in	r29, 0x3e	; 62
	initHardware();
     978:	0e 94 70 0b 	call	0x16e0	; 0x16e0 <initHardware>
	servos[0] = &servo;
     97c:	82 e7       	ldi	r24, 0x72	; 114
     97e:	9f e0       	ldi	r25, 0x0F	; 15
     980:	90 93 6d 05 	sts	0x056D, r25
     984:	80 93 6c 05 	sts	0x056C, r24
	servos[1] = &servo2;
     988:	86 e7       	ldi	r24, 0x76	; 118
     98a:	9f e0       	ldi	r25, 0x0F	; 15
     98c:	90 93 6f 05 	sts	0x056F, r25
     990:	80 93 6e 05 	sts	0x056E, r24
	servos[2] = &servo3;
     994:	8a e7       	ldi	r24, 0x7A	; 122
     996:	9f e0       	ldi	r25, 0x0F	; 15
     998:	90 93 71 05 	sts	0x0571, r25
     99c:	80 93 70 05 	sts	0x0570, r24
	servos[3] = &servo4;
     9a0:	8e e7       	ldi	r24, 0x7E	; 126
     9a2:	9f e0       	ldi	r25, 0x0F	; 15
     9a4:	90 93 73 05 	sts	0x0573, r25
     9a8:	80 93 72 05 	sts	0x0572, r24
	servos[4] = &servo5;
     9ac:	82 e8       	ldi	r24, 0x82	; 130
     9ae:	9f e0       	ldi	r25, 0x0F	; 15
     9b0:	90 93 75 05 	sts	0x0575, r25
     9b4:	80 93 74 05 	sts	0x0574, r24
	servos[5] = &servo6;
     9b8:	86 e8       	ldi	r24, 0x86	; 134
     9ba:	9f e0       	ldi	r25, 0x0F	; 15
     9bc:	90 93 77 05 	sts	0x0577, r25
     9c0:	80 93 76 05 	sts	0x0576, r24
	servos[6] = &servo7;
     9c4:	8c e8       	ldi	r24, 0x8C	; 140
     9c6:	9f e0       	ldi	r25, 0x0F	; 15
     9c8:	90 93 79 05 	sts	0x0579, r25
     9cc:	80 93 78 05 	sts	0x0578, r24
	servos[7] = &servo8;
     9d0:	80 e9       	ldi	r24, 0x90	; 144
     9d2:	9f e0       	ldi	r25, 0x0F	; 15
     9d4:	90 93 7b 05 	sts	0x057B, r25
     9d8:	80 93 7a 05 	sts	0x057A, r24
	servos[8] = &servo9;
     9dc:	84 e9       	ldi	r24, 0x94	; 148
     9de:	9f e0       	ldi	r25, 0x0F	; 15
     9e0:	90 93 7d 05 	sts	0x057D, r25
     9e4:	80 93 7c 05 	sts	0x057C, r24
	servos[9] = &servo10;
     9e8:	88 e9       	ldi	r24, 0x98	; 152
     9ea:	9f e0       	ldi	r25, 0x0F	; 15
     9ec:	90 93 7f 05 	sts	0x057F, r25
     9f0:	80 93 7e 05 	sts	0x057E, r24
	servos[10] = &servo11;
     9f4:	8c e9       	ldi	r24, 0x9C	; 156
     9f6:	9f e0       	ldi	r25, 0x0F	; 15
     9f8:	90 93 81 05 	sts	0x0581, r25
     9fc:	80 93 80 05 	sts	0x0580, r24
	servos[11] = &servo12;
     a00:	80 ea       	ldi	r24, 0xA0	; 160
     a02:	9f e0       	ldi	r25, 0x0F	; 15
     a04:	90 93 83 05 	sts	0x0583, r25
     a08:	80 93 82 05 	sts	0x0582, r24
	initialize_command(&command_receiving);
     a0c:	83 e8       	ldi	r24, 0x83	; 131
     a0e:	95 e0       	ldi	r25, 0x05	; 5
     a10:	0e 94 06 03 	call	0x60c	; 0x60c <_Z18initialize_commandP7command>
	initialize_command(&command_in_process);
     a14:	80 e4       	ldi	r24, 0x40	; 64
     a16:	96 e0       	ldi	r25, 0x06	; 6
     a18:	0e 94 06 03 	call	0x60c	; 0x60c <_Z18initialize_commandP7command>
}
     a1c:	cf 91       	pop	r28
     a1e:	df 91       	pop	r29
     a20:	08 95       	ret

00000a22 <_ZN6StreamlsEm>:
		return print(num);
	}
	Stream& operator<< (uint16_t num ){
		return print(num);
	}
	Stream& operator<< (uint32_t num ){
     a22:	df 93       	push	r29
     a24:	cf 93       	push	r28
     a26:	00 d0       	rcall	.+0      	; 0xa28 <_ZN6StreamlsEm+0x6>
     a28:	00 d0       	rcall	.+0      	; 0xa2a <_ZN6StreamlsEm+0x8>
     a2a:	00 d0       	rcall	.+0      	; 0xa2c <_ZN6StreamlsEm+0xa>
     a2c:	cd b7       	in	r28, 0x3d	; 61
     a2e:	de b7       	in	r29, 0x3e	; 62
     a30:	9a 83       	std	Y+2, r25	; 0x02
     a32:	89 83       	std	Y+1, r24	; 0x01
     a34:	4b 83       	std	Y+3, r20	; 0x03
     a36:	5c 83       	std	Y+4, r21	; 0x04
     a38:	6d 83       	std	Y+5, r22	; 0x05
     a3a:	7e 83       	std	Y+6, r23	; 0x06
		return print(num);
     a3c:	89 81       	ldd	r24, Y+1	; 0x01
     a3e:	9a 81       	ldd	r25, Y+2	; 0x02
     a40:	2b 81       	ldd	r18, Y+3	; 0x03
     a42:	3c 81       	ldd	r19, Y+4	; 0x04
     a44:	4d 81       	ldd	r20, Y+5	; 0x05
     a46:	5e 81       	ldd	r21, Y+6	; 0x06
     a48:	ba 01       	movw	r22, r20
     a4a:	a9 01       	movw	r20, r18
     a4c:	0e 94 e5 0f 	call	0x1fca	; 0x1fca <_ZN6Stream5printEm>
	}
     a50:	26 96       	adiw	r28, 0x06	; 6
     a52:	0f b6       	in	r0, 0x3f	; 63
     a54:	f8 94       	cli
     a56:	de bf       	out	0x3e, r29	; 62
     a58:	0f be       	out	0x3f, r0	; 63
     a5a:	cd bf       	out	0x3d, r28	; 61
     a5c:	cf 91       	pop	r28
     a5e:	df 91       	pop	r29
     a60:	08 95       	ret

00000a62 <_Z13print_commandP7commandm>:
		(*command).servo_speed_per_tick[i]=100;
	}
}


void print_command (struct command* command, TICK_COUNT loop_number) {
     a62:	df 93       	push	r29
     a64:	cf 93       	push	r28
     a66:	cd b7       	in	r28, 0x3d	; 61
     a68:	de b7       	in	r29, 0x3e	; 62
     a6a:	2d 97       	sbiw	r28, 0x0d	; 13
     a6c:	0f b6       	in	r0, 0x3f	; 63
     a6e:	f8 94       	cli
     a70:	de bf       	out	0x3e, r29	; 62
     a72:	0f be       	out	0x3f, r0	; 63
     a74:	cd bf       	out	0x3d, r28	; 61
     a76:	9b 83       	std	Y+3, r25	; 0x03
     a78:	8a 83       	std	Y+2, r24	; 0x02
     a7a:	4c 83       	std	Y+4, r20	; 0x04
     a7c:	5d 83       	std	Y+5, r21	; 0x05
     a7e:	6e 83       	std	Y+6, r22	; 0x06
     a80:	7f 83       	std	Y+7, r23	; 0x07
	if (loop_number) {
     a82:	8c 81       	ldd	r24, Y+4	; 0x04
     a84:	9d 81       	ldd	r25, Y+5	; 0x05
     a86:	ae 81       	ldd	r26, Y+6	; 0x06
     a88:	bf 81       	ldd	r27, Y+7	; 0x07
     a8a:	00 97       	sbiw	r24, 0x00	; 0
     a8c:	a1 05       	cpc	r26, r1
     a8e:	b1 05       	cpc	r27, r1
     a90:	31 f1       	breq	.+76     	; 0xade <_Z13print_commandP7commandm+0x7c>
		cout << "Loop " << loop_number << "\n";
     a92:	80 91 fa 0f 	lds	r24, 0x0FFA
     a96:	90 91 fb 0f 	lds	r25, 0x0FFB
     a9a:	00 97       	sbiw	r24, 0x00	; 0
     a9c:	51 f0       	breq	.+20     	; 0xab2 <_Z13print_commandP7commandm+0x50>
     a9e:	80 91 fa 0f 	lds	r24, 0x0FFA
     aa2:	90 91 fb 0f 	lds	r25, 0x0FFB
     aa6:	9c 01       	movw	r18, r24
     aa8:	22 50       	subi	r18, 0x02	; 2
     aaa:	30 40       	sbci	r19, 0x00	; 0
     aac:	3d 87       	std	Y+13, r19	; 0x0d
     aae:	2c 87       	std	Y+12, r18	; 0x0c
     ab0:	02 c0       	rjmp	.+4      	; 0xab6 <_Z13print_commandP7commandm+0x54>
     ab2:	1d 86       	std	Y+13, r1	; 0x0d
     ab4:	1c 86       	std	Y+12, r1	; 0x0c
     ab6:	25 e1       	ldi	r18, 0x15	; 21
     ab8:	32 e0       	ldi	r19, 0x02	; 2
     aba:	8c 85       	ldd	r24, Y+12	; 0x0c
     abc:	9d 85       	ldd	r25, Y+13	; 0x0d
     abe:	b9 01       	movw	r22, r18
     ac0:	0e 94 61 04 	call	0x8c2	; 0x8c2 <_ZN6StreamlsEPKc>
     ac4:	2c 81       	ldd	r18, Y+4	; 0x04
     ac6:	3d 81       	ldd	r19, Y+5	; 0x05
     ac8:	4e 81       	ldd	r20, Y+6	; 0x06
     aca:	5f 81       	ldd	r21, Y+7	; 0x07
     acc:	ba 01       	movw	r22, r20
     ace:	a9 01       	movw	r20, r18
     ad0:	0e 94 11 05 	call	0xa22	; 0xa22 <_ZN6StreamlsEm>
     ad4:	23 e1       	ldi	r18, 0x13	; 19
     ad6:	32 e0       	ldi	r19, 0x02	; 2
     ad8:	b9 01       	movw	r22, r18
     ada:	0e 94 61 04 	call	0x8c2	; 0x8c2 <_ZN6StreamlsEPKc>
	}
	cout << "command:\nTime to execute: " << (*command).time << "\r\n";
     ade:	80 91 fa 0f 	lds	r24, 0x0FFA
     ae2:	90 91 fb 0f 	lds	r25, 0x0FFB
     ae6:	00 97       	sbiw	r24, 0x00	; 0
     ae8:	51 f0       	breq	.+20     	; 0xafe <_Z13print_commandP7commandm+0x9c>
     aea:	80 91 fa 0f 	lds	r24, 0x0FFA
     aee:	90 91 fb 0f 	lds	r25, 0x0FFB
     af2:	9c 01       	movw	r18, r24
     af4:	22 50       	subi	r18, 0x02	; 2
     af6:	30 40       	sbci	r19, 0x00	; 0
     af8:	3b 87       	std	Y+11, r19	; 0x0b
     afa:	2a 87       	std	Y+10, r18	; 0x0a
     afc:	02 c0       	rjmp	.+4      	; 0xb02 <_Z13print_commandP7commandm+0xa0>
     afe:	1b 86       	std	Y+11, r1	; 0x0b
     b00:	1a 86       	std	Y+10, r1	; 0x0a
     b02:	2b e1       	ldi	r18, 0x1B	; 27
     b04:	32 e0       	ldi	r19, 0x02	; 2
     b06:	8a 85       	ldd	r24, Y+10	; 0x0a
     b08:	9b 85       	ldd	r25, Y+11	; 0x0b
     b0a:	b9 01       	movw	r22, r18
     b0c:	0e 94 61 04 	call	0x8c2	; 0x8c2 <_ZN6StreamlsEPKc>
     b10:	ac 01       	movw	r20, r24
     b12:	8a 81       	ldd	r24, Y+2	; 0x02
     b14:	9b 81       	ldd	r25, Y+3	; 0x03
     b16:	fc 01       	movw	r30, r24
     b18:	e5 54       	subi	r30, 0x45	; 69
     b1a:	ff 4f       	sbci	r31, 0xFF	; 255
     b1c:	20 81       	ld	r18, Z
     b1e:	31 81       	ldd	r19, Z+1	; 0x01
     b20:	ca 01       	movw	r24, r20
     b22:	b9 01       	movw	r22, r18
     b24:	0e 94 f9 03 	call	0x7f2	; 0x7f2 <_ZN6StreamlsEi>
     b28:	26 e3       	ldi	r18, 0x36	; 54
     b2a:	32 e0       	ldi	r19, 0x02	; 2
     b2c:	b9 01       	movw	r22, r18
     b2e:	0e 94 61 04 	call	0x8c2	; 0x8c2 <_ZN6StreamlsEPKc>
	int8_t ia;
	for (ia=0; ia <= SERVOS_NUMBER; ia++) {
     b32:	19 82       	std	Y+1, r1	; 0x01
     b34:	56 c0       	rjmp	.+172    	; 0xbe2 <_Z13print_commandP7commandm+0x180>
		cout << "#" << ia << " Changed?:" << (*command).has_changed[ia] << " Trgt: " << (*command).servo_target_positions[ia] << "\n";    //: Current pos: " << (*command).servo_current_positions[ia] << " Speed: " << (*command).servo_speeds[ia] << " Spt: " << (*command).servo_speed_per_tick[ia] << "\n";
     b36:	80 91 fa 0f 	lds	r24, 0x0FFA
     b3a:	90 91 fb 0f 	lds	r25, 0x0FFB
     b3e:	00 97       	sbiw	r24, 0x00	; 0
     b40:	51 f0       	breq	.+20     	; 0xb56 <_Z13print_commandP7commandm+0xf4>
     b42:	80 91 fa 0f 	lds	r24, 0x0FFA
     b46:	90 91 fb 0f 	lds	r25, 0x0FFB
     b4a:	9c 01       	movw	r18, r24
     b4c:	22 50       	subi	r18, 0x02	; 2
     b4e:	30 40       	sbci	r19, 0x00	; 0
     b50:	39 87       	std	Y+9, r19	; 0x09
     b52:	28 87       	std	Y+8, r18	; 0x08
     b54:	02 c0       	rjmp	.+4      	; 0xb5a <_Z13print_commandP7commandm+0xf8>
     b56:	19 86       	std	Y+9, r1	; 0x09
     b58:	18 86       	std	Y+8, r1	; 0x08
     b5a:	29 e3       	ldi	r18, 0x39	; 57
     b5c:	32 e0       	ldi	r19, 0x02	; 2
     b5e:	88 85       	ldd	r24, Y+8	; 0x08
     b60:	99 85       	ldd	r25, Y+9	; 0x09
     b62:	b9 01       	movw	r22, r18
     b64:	0e 94 61 04 	call	0x8c2	; 0x8c2 <_ZN6StreamlsEPKc>
     b68:	69 81       	ldd	r22, Y+1	; 0x01
     b6a:	0e 94 4d 04 	call	0x89a	; 0x89a <_ZN6StreamlsEa>
     b6e:	2b e3       	ldi	r18, 0x3B	; 59
     b70:	32 e0       	ldi	r19, 0x02	; 2
     b72:	b9 01       	movw	r22, r18
     b74:	0e 94 61 04 	call	0x8c2	; 0x8c2 <_ZN6StreamlsEPKc>
     b78:	ac 01       	movw	r20, r24
     b7a:	89 81       	ldd	r24, Y+1	; 0x01
     b7c:	28 2f       	mov	r18, r24
     b7e:	33 27       	eor	r19, r19
     b80:	27 fd       	sbrc	r18, 7
     b82:	30 95       	com	r19
     b84:	8a 81       	ldd	r24, Y+2	; 0x02
     b86:	9b 81       	ldd	r25, Y+3	; 0x03
     b88:	fc 01       	movw	r30, r24
     b8a:	e2 0f       	add	r30, r18
     b8c:	f3 1f       	adc	r31, r19
     b8e:	20 81       	ld	r18, Z
     b90:	ca 01       	movw	r24, r20
     b92:	62 2f       	mov	r22, r18
     b94:	0e 94 39 04 	call	0x872	; 0x872 <_ZN6StreamlsEh>
     b98:	26 e4       	ldi	r18, 0x46	; 70
     b9a:	32 e0       	ldi	r19, 0x02	; 2
     b9c:	b9 01       	movw	r22, r18
     b9e:	0e 94 61 04 	call	0x8c2	; 0x8c2 <_ZN6StreamlsEPKc>
     ba2:	bc 01       	movw	r22, r24
     ba4:	89 81       	ldd	r24, Y+1	; 0x01
     ba6:	99 27       	eor	r25, r25
     ba8:	87 fd       	sbrc	r24, 7
     baa:	90 95       	com	r25
     bac:	2a 81       	ldd	r18, Y+2	; 0x02
     bae:	3b 81       	ldd	r19, Y+3	; 0x03
     bb0:	88 0f       	add	r24, r24
     bb2:	99 1f       	adc	r25, r25
     bb4:	88 0f       	add	r24, r24
     bb6:	99 1f       	adc	r25, r25
     bb8:	82 0f       	add	r24, r18
     bba:	93 1f       	adc	r25, r19
     bbc:	fc 01       	movw	r30, r24
     bbe:	3b 96       	adiw	r30, 0x0b	; 11
     bc0:	20 81       	ld	r18, Z
     bc2:	31 81       	ldd	r19, Z+1	; 0x01
     bc4:	42 81       	ldd	r20, Z+2	; 0x02
     bc6:	53 81       	ldd	r21, Z+3	; 0x03
     bc8:	cb 01       	movw	r24, r22
     bca:	ba 01       	movw	r22, r20
     bcc:	a9 01       	movw	r20, r18
     bce:	0e 94 d8 03 	call	0x7b0	; 0x7b0 <_ZN6StreamlsEd>
     bd2:	23 e1       	ldi	r18, 0x13	; 19
     bd4:	32 e0       	ldi	r19, 0x02	; 2
     bd6:	b9 01       	movw	r22, r18
     bd8:	0e 94 61 04 	call	0x8c2	; 0x8c2 <_ZN6StreamlsEPKc>
	if (loop_number) {
		cout << "Loop " << loop_number << "\n";
	}
	cout << "command:\nTime to execute: " << (*command).time << "\r\n";
	int8_t ia;
	for (ia=0; ia <= SERVOS_NUMBER; ia++) {
     bdc:	89 81       	ldd	r24, Y+1	; 0x01
     bde:	8f 5f       	subi	r24, 0xFF	; 255
     be0:	89 83       	std	Y+1, r24	; 0x01
     be2:	89 81       	ldd	r24, Y+1	; 0x01
     be4:	8c 30       	cpi	r24, 0x0C	; 12
     be6:	0c f4       	brge	.+2      	; 0xbea <_Z13print_commandP7commandm+0x188>
     be8:	a6 cf       	rjmp	.-180    	; 0xb36 <_Z13print_commandP7commandm+0xd4>
		cout << "#" << ia << " Changed?:" << (*command).has_changed[ia] << " Trgt: " << (*command).servo_target_positions[ia] << "\n";    //: Current pos: " << (*command).servo_current_positions[ia] << " Speed: " << (*command).servo_speeds[ia] << " Spt: " << (*command).servo_speed_per_tick[ia] << "\n";
	}
}
     bea:	2d 96       	adiw	r28, 0x0d	; 13
     bec:	0f b6       	in	r0, 0x3f	; 63
     bee:	f8 94       	cli
     bf0:	de bf       	out	0x3e, r29	; 62
     bf2:	0f be       	out	0x3f, r0	; 63
     bf4:	cd bf       	out	0x3d, r28	; 61
     bf6:	cf 91       	pop	r28
     bf8:	df 91       	pop	r29
     bfa:	08 95       	ret

00000bfc <appControl>:
TICK_COUNT appInitSoftware(TICK_COUNT loopStart){
	//uart1.attach(&reader, NULL);
	return 0;
}
// This is the main loop
TICK_COUNT appControl(LOOP_COUNT loopCount, TICK_COUNT loopStart) {
     bfc:	cf 92       	push	r12
     bfe:	df 92       	push	r13
     c00:	ef 92       	push	r14
     c02:	ff 92       	push	r15
     c04:	0f 93       	push	r16
     c06:	1f 93       	push	r17
     c08:	df 93       	push	r29
     c0a:	cf 93       	push	r28
     c0c:	cd b7       	in	r28, 0x3d	; 61
     c0e:	de b7       	in	r29, 0x3e	; 62
     c10:	af 97       	sbiw	r28, 0x2f	; 47
     c12:	0f b6       	in	r0, 0x3f	; 63
     c14:	f8 94       	cli
     c16:	de bf       	out	0x3e, r29	; 62
     c18:	0f be       	out	0x3f, r0	; 63
     c1a:	cd bf       	out	0x3d, r28	; 61
     c1c:	6f 83       	std	Y+7, r22	; 0x07
     c1e:	78 87       	std	Y+8, r23	; 0x08
     c20:	89 87       	std	Y+9, r24	; 0x09
     c22:	9a 87       	std	Y+10, r25	; 0x0a
     c24:	2b 87       	std	Y+11, r18	; 0x0b
     c26:	3c 87       	std	Y+12, r19	; 0x0c
     c28:	4d 87       	std	Y+13, r20	; 0x0d
     c2a:	5e 87       	std	Y+14, r21	; 0x0e
     c2c:	9f c3       	rjmp	.+1854   	; 0x136c <appControl+0x770>

	while (uart1.isRxBufferEmpty()==FALSE) {
		char data = uart1.read();
     c2e:	86 ea       	ldi	r24, 0xA6	; 166
     c30:	9f e0       	ldi	r25, 0x0F	; 15
     c32:	0e 94 9d 03 	call	0x73a	; 0x73a <_ZN6UartHW4readEv>
     c36:	8d 83       	std	Y+5, r24	; 0x05
		if (data != EOF) {
			cout << data;
     c38:	80 91 fa 0f 	lds	r24, 0x0FFA
     c3c:	90 91 fb 0f 	lds	r25, 0x0FFB
     c40:	00 97       	sbiw	r24, 0x00	; 0
     c42:	51 f0       	breq	.+20     	; 0xc58 <appControl+0x5c>
     c44:	80 91 fa 0f 	lds	r24, 0x0FFA
     c48:	90 91 fb 0f 	lds	r25, 0x0FFB
     c4c:	9c 01       	movw	r18, r24
     c4e:	22 50       	subi	r18, 0x02	; 2
     c50:	30 40       	sbci	r19, 0x00	; 0
     c52:	3e a7       	std	Y+46, r19	; 0x2e
     c54:	2d a7       	std	Y+45, r18	; 0x2d
     c56:	02 c0       	rjmp	.+4      	; 0xc5c <appControl+0x60>
     c58:	1e a6       	std	Y+46, r1	; 0x2e
     c5a:	1d a6       	std	Y+45, r1	; 0x2d
     c5c:	8d a5       	ldd	r24, Y+45	; 0x2d
     c5e:	9e a5       	ldd	r25, Y+46	; 0x2e
     c60:	6d 81       	ldd	r22, Y+5	; 0x05
     c62:	0e 94 c4 03 	call	0x788	; 0x788 <_ZN6StreamlsEc>
		}
		switch (data) {
     c66:	8d 81       	ldd	r24, Y+5	; 0x05
     c68:	28 2f       	mov	r18, r24
     c6a:	30 e0       	ldi	r19, 0x00	; 0
     c6c:	3c a7       	std	Y+44, r19	; 0x2c
     c6e:	2b a7       	std	Y+43, r18	; 0x2b
     c70:	8b a5       	ldd	r24, Y+43	; 0x2b
     c72:	9c a5       	ldd	r25, Y+44	; 0x2c
     c74:	8a 33       	cpi	r24, 0x3A	; 58
     c76:	91 05       	cpc	r25, r1
     c78:	2c f5       	brge	.+74     	; 0xcc4 <appControl+0xc8>
     c7a:	2b a5       	ldd	r18, Y+43	; 0x2b
     c7c:	3c a5       	ldd	r19, Y+44	; 0x2c
     c7e:	20 33       	cpi	r18, 0x30	; 48
     c80:	31 05       	cpc	r19, r1
     c82:	0c f0       	brlt	.+2      	; 0xc86 <appControl+0x8a>
     c84:	37 c1       	rjmp	.+622    	; 0xef4 <appControl+0x2f8>
     c86:	8b a5       	ldd	r24, Y+43	; 0x2b
     c88:	9c a5       	ldd	r25, Y+44	; 0x2c
     c8a:	8d 30       	cpi	r24, 0x0D	; 13
     c8c:	91 05       	cpc	r25, r1
     c8e:	09 f4       	brne	.+2      	; 0xc92 <appControl+0x96>
     c90:	06 c3       	rjmp	.+1548   	; 0x129e <appControl+0x6a2>
     c92:	2b a5       	ldd	r18, Y+43	; 0x2b
     c94:	3c a5       	ldd	r19, Y+44	; 0x2c
     c96:	2e 30       	cpi	r18, 0x0E	; 14
     c98:	31 05       	cpc	r19, r1
     c9a:	3c f4       	brge	.+14     	; 0xcaa <appControl+0xae>
     c9c:	8b a5       	ldd	r24, Y+43	; 0x2b
     c9e:	9c a5       	ldd	r25, Y+44	; 0x2c
     ca0:	8a 30       	cpi	r24, 0x0A	; 10
     ca2:	91 05       	cpc	r25, r1
     ca4:	09 f4       	brne	.+2      	; 0xca8 <appControl+0xac>
     ca6:	fb c2       	rjmp	.+1526   	; 0x129e <appControl+0x6a2>
     ca8:	61 c3       	rjmp	.+1730   	; 0x136c <appControl+0x770>
     caa:	2b a5       	ldd	r18, Y+43	; 0x2b
     cac:	3c a5       	ldd	r19, Y+44	; 0x2c
     cae:	20 32       	cpi	r18, 0x20	; 32
     cb0:	31 05       	cpc	r19, r1
     cb2:	09 f4       	brne	.+2      	; 0xcb6 <appControl+0xba>
     cb4:	f0 c2       	rjmp	.+1504   	; 0x1296 <appControl+0x69a>
     cb6:	8b a5       	ldd	r24, Y+43	; 0x2b
     cb8:	9c a5       	ldd	r25, Y+44	; 0x2c
     cba:	83 32       	cpi	r24, 0x23	; 35
     cbc:	91 05       	cpc	r25, r1
     cbe:	09 f4       	brne	.+2      	; 0xcc2 <appControl+0xc6>
     cc0:	63 c0       	rjmp	.+198    	; 0xd88 <appControl+0x18c>
     cc2:	54 c3       	rjmp	.+1704   	; 0x136c <appControl+0x770>
     cc4:	2b a5       	ldd	r18, Y+43	; 0x2b
     cc6:	3c a5       	ldd	r19, Y+44	; 0x2c
     cc8:	20 35       	cpi	r18, 0x50	; 80
     cca:	31 05       	cpc	r19, r1
     ccc:	09 f4       	brne	.+2      	; 0xcd0 <appControl+0xd4>
     cce:	80 c0       	rjmp	.+256    	; 0xdd0 <appControl+0x1d4>
     cd0:	8b a5       	ldd	r24, Y+43	; 0x2b
     cd2:	9c a5       	ldd	r25, Y+44	; 0x2c
     cd4:	81 35       	cpi	r24, 0x51	; 81
     cd6:	91 05       	cpc	r25, r1
     cd8:	34 f4       	brge	.+12     	; 0xce6 <appControl+0xea>
     cda:	2b a5       	ldd	r18, Y+43	; 0x2b
     cdc:	3c a5       	ldd	r19, Y+44	; 0x2c
     cde:	2f 33       	cpi	r18, 0x3F	; 63
     ce0:	31 05       	cpc	r19, r1
     ce2:	71 f0       	breq	.+28     	; 0xd00 <appControl+0x104>
     ce4:	43 c3       	rjmp	.+1670   	; 0x136c <appControl+0x770>
     ce6:	8b a5       	ldd	r24, Y+43	; 0x2b
     ce8:	9c a5       	ldd	r25, Y+44	; 0x2c
     cea:	83 35       	cpi	r24, 0x53	; 83
     cec:	91 05       	cpc	r25, r1
     cee:	09 f4       	brne	.+2      	; 0xcf2 <appControl+0xf6>
     cf0:	a5 c0       	rjmp	.+330    	; 0xe3c <appControl+0x240>
     cf2:	2b a5       	ldd	r18, Y+43	; 0x2b
     cf4:	3c a5       	ldd	r19, Y+44	; 0x2c
     cf6:	24 35       	cpi	r18, 0x54	; 84
     cf8:	31 05       	cpc	r19, r1
     cfa:	09 f4       	brne	.+2      	; 0xcfe <appControl+0x102>
     cfc:	d5 c0       	rjmp	.+426    	; 0xea8 <appControl+0x2ac>
     cfe:	36 c3       	rjmp	.+1644   	; 0x136c <appControl+0x770>
			case '?':
			{
				
				//subcommand "Toggle verbose TRUE/FALSE" 
				if (VERBOSE==0) {
     d00:	80 91 82 05 	lds	r24, 0x0582
     d04:	88 23       	and	r24, r24
     d06:	e9 f5       	brne	.+122    	; 0xd82 <appControl+0x186>
					VERBOSE = 1;
     d08:	81 e0       	ldi	r24, 0x01	; 1
     d0a:	80 93 82 05 	sts	0x0582, r24
					int8_t i;
					for (i=0; i <= SERVOS_NUMBER; i++) {
     d0e:	1c 82       	std	Y+4, r1	; 0x04
     d10:	34 c0       	rjmp	.+104    	; 0xd7a <appControl+0x17e>
						cout << "Current speed:" << (*servos[i]).getSpeed() << "\n";
     d12:	80 91 fa 0f 	lds	r24, 0x0FFA
     d16:	90 91 fb 0f 	lds	r25, 0x0FFB
     d1a:	00 97       	sbiw	r24, 0x00	; 0
     d1c:	51 f0       	breq	.+20     	; 0xd32 <appControl+0x136>
     d1e:	80 91 fa 0f 	lds	r24, 0x0FFA
     d22:	90 91 fb 0f 	lds	r25, 0x0FFB
     d26:	9c 01       	movw	r18, r24
     d28:	22 50       	subi	r18, 0x02	; 2
     d2a:	30 40       	sbci	r19, 0x00	; 0
     d2c:	3a a7       	std	Y+42, r19	; 0x2a
     d2e:	29 a7       	std	Y+41, r18	; 0x29
     d30:	02 c0       	rjmp	.+4      	; 0xd36 <appControl+0x13a>
     d32:	1a a6       	std	Y+42, r1	; 0x2a
     d34:	19 a6       	std	Y+41, r1	; 0x29
     d36:	2e e4       	ldi	r18, 0x4E	; 78
     d38:	32 e0       	ldi	r19, 0x02	; 2
     d3a:	89 a5       	ldd	r24, Y+41	; 0x29
     d3c:	9a a5       	ldd	r25, Y+42	; 0x2a
     d3e:	b9 01       	movw	r22, r18
     d40:	0e 94 61 04 	call	0x8c2	; 0x8c2 <_ZN6StreamlsEPKc>
     d44:	8c 01       	movw	r16, r24
     d46:	8c 81       	ldd	r24, Y+4	; 0x04
     d48:	99 27       	eor	r25, r25
     d4a:	87 fd       	sbrc	r24, 7
     d4c:	90 95       	com	r25
     d4e:	88 0f       	add	r24, r24
     d50:	99 1f       	adc	r25, r25
     d52:	fc 01       	movw	r30, r24
     d54:	e4 59       	subi	r30, 0x94	; 148
     d56:	fa 4f       	sbci	r31, 0xFA	; 250
     d58:	80 81       	ld	r24, Z
     d5a:	91 81       	ldd	r25, Z+1	; 0x01
     d5c:	0e 94 f4 02 	call	0x5e8	; 0x5e8 <_ZNK8Actuator8getSpeedEv>
     d60:	28 2f       	mov	r18, r24
     d62:	c8 01       	movw	r24, r16
     d64:	62 2f       	mov	r22, r18
     d66:	0e 94 4d 04 	call	0x89a	; 0x89a <_ZN6StreamlsEa>
     d6a:	23 e1       	ldi	r18, 0x13	; 19
     d6c:	32 e0       	ldi	r19, 0x02	; 2
     d6e:	b9 01       	movw	r22, r18
     d70:	0e 94 61 04 	call	0x8c2	; 0x8c2 <_ZN6StreamlsEPKc>
				
				//subcommand "Toggle verbose TRUE/FALSE" 
				if (VERBOSE==0) {
					VERBOSE = 1;
					int8_t i;
					for (i=0; i <= SERVOS_NUMBER; i++) {
     d74:	8c 81       	ldd	r24, Y+4	; 0x04
     d76:	8f 5f       	subi	r24, 0xFF	; 255
     d78:	8c 83       	std	Y+4, r24	; 0x04
     d7a:	8c 81       	ldd	r24, Y+4	; 0x04
     d7c:	8c 30       	cpi	r24, 0x0C	; 12
     d7e:	4c f2       	brlt	.-110    	; 0xd12 <appControl+0x116>
     d80:	f5 c2       	rjmp	.+1514   	; 0x136c <appControl+0x770>
						cout << "Current speed:" << (*servos[i]).getSpeed() << "\n";
					}
				} else {
					VERBOSE = 0;
     d82:	10 92 82 05 	sts	0x0582, r1
     d86:	f2 c2       	rjmp	.+1508   	; 0x136c <appControl+0x770>
				break;
			}
			case '#':
			{
				//subcommand "Servo number"
				r_curr_servo = 0;
     d88:	10 92 fe 06 	sts	0x06FE, r1
				r_curr_subcommand = data;
     d8c:	8d 81       	ldd	r24, Y+5	; 0x05
     d8e:	80 93 fd 06 	sts	0x06FD, r24
				if (VERBOSE==1) {
     d92:	80 91 82 05 	lds	r24, 0x0582
     d96:	81 30       	cpi	r24, 0x01	; 1
     d98:	09 f0       	breq	.+2      	; 0xd9c <appControl+0x1a0>
     d9a:	e8 c2       	rjmp	.+1488   	; 0x136c <appControl+0x770>
					cout << "Received servo number command \n";
     d9c:	80 91 fa 0f 	lds	r24, 0x0FFA
     da0:	90 91 fb 0f 	lds	r25, 0x0FFB
     da4:	00 97       	sbiw	r24, 0x00	; 0
     da6:	51 f0       	breq	.+20     	; 0xdbc <appControl+0x1c0>
     da8:	80 91 fa 0f 	lds	r24, 0x0FFA
     dac:	90 91 fb 0f 	lds	r25, 0x0FFB
     db0:	9c 01       	movw	r18, r24
     db2:	22 50       	subi	r18, 0x02	; 2
     db4:	30 40       	sbci	r19, 0x00	; 0
     db6:	38 a7       	std	Y+40, r19	; 0x28
     db8:	2f a3       	std	Y+39, r18	; 0x27
     dba:	02 c0       	rjmp	.+4      	; 0xdc0 <appControl+0x1c4>
     dbc:	18 a6       	std	Y+40, r1	; 0x28
     dbe:	1f a2       	std	Y+39, r1	; 0x27
     dc0:	2d e5       	ldi	r18, 0x5D	; 93
     dc2:	32 e0       	ldi	r19, 0x02	; 2
     dc4:	8f a1       	ldd	r24, Y+39	; 0x27
     dc6:	98 a5       	ldd	r25, Y+40	; 0x28
     dc8:	b9 01       	movw	r22, r18
     dca:	0e 94 61 04 	call	0x8c2	; 0x8c2 <_ZN6StreamlsEPKc>
     dce:	ce c2       	rjmp	.+1436   	; 0x136c <appControl+0x770>
				break;
			}
			case 'P':
			{
				//subcommand "Position"
				command_receiving.servo_target_positions[r_curr_servo] = 0;
     dd0:	80 91 fe 06 	lds	r24, 0x06FE
     dd4:	99 27       	eor	r25, r25
     dd6:	87 fd       	sbrc	r24, 7
     dd8:	90 95       	com	r25
     dda:	88 0f       	add	r24, r24
     ddc:	99 1f       	adc	r25, r25
     dde:	88 0f       	add	r24, r24
     de0:	99 1f       	adc	r25, r25
     de2:	fc 01       	movw	r30, r24
     de4:	e2 57       	subi	r30, 0x72	; 114
     de6:	fa 4f       	sbci	r31, 0xFA	; 250
     de8:	80 e0       	ldi	r24, 0x00	; 0
     dea:	90 e0       	ldi	r25, 0x00	; 0
     dec:	a0 e0       	ldi	r26, 0x00	; 0
     dee:	b0 e0       	ldi	r27, 0x00	; 0
     df0:	80 83       	st	Z, r24
     df2:	91 83       	std	Z+1, r25	; 0x01
     df4:	a2 83       	std	Z+2, r26	; 0x02
     df6:	b3 83       	std	Z+3, r27	; 0x03
				r_curr_subcommand = data;
     df8:	8d 81       	ldd	r24, Y+5	; 0x05
     dfa:	80 93 fd 06 	sts	0x06FD, r24
				if (VERBOSE==1) {
     dfe:	80 91 82 05 	lds	r24, 0x0582
     e02:	81 30       	cpi	r24, 0x01	; 1
     e04:	09 f0       	breq	.+2      	; 0xe08 <appControl+0x20c>
     e06:	b2 c2       	rjmp	.+1380   	; 0x136c <appControl+0x770>
					cout << "Received position command \n";
     e08:	80 91 fa 0f 	lds	r24, 0x0FFA
     e0c:	90 91 fb 0f 	lds	r25, 0x0FFB
     e10:	00 97       	sbiw	r24, 0x00	; 0
     e12:	51 f0       	breq	.+20     	; 0xe28 <appControl+0x22c>
     e14:	80 91 fa 0f 	lds	r24, 0x0FFA
     e18:	90 91 fb 0f 	lds	r25, 0x0FFB
     e1c:	9c 01       	movw	r18, r24
     e1e:	22 50       	subi	r18, 0x02	; 2
     e20:	30 40       	sbci	r19, 0x00	; 0
     e22:	3e a3       	std	Y+38, r19	; 0x26
     e24:	2d a3       	std	Y+37, r18	; 0x25
     e26:	02 c0       	rjmp	.+4      	; 0xe2c <appControl+0x230>
     e28:	1e a2       	std	Y+38, r1	; 0x26
     e2a:	1d a2       	std	Y+37, r1	; 0x25
     e2c:	2d e7       	ldi	r18, 0x7D	; 125
     e2e:	32 e0       	ldi	r19, 0x02	; 2
     e30:	8d a1       	ldd	r24, Y+37	; 0x25
     e32:	9e a1       	ldd	r25, Y+38	; 0x26
     e34:	b9 01       	movw	r22, r18
     e36:	0e 94 61 04 	call	0x8c2	; 0x8c2 <_ZN6StreamlsEPKc>
     e3a:	98 c2       	rjmp	.+1328   	; 0x136c <appControl+0x770>
				break;
			}
			case 'S':
			{
				//subcommand "Speed"
				command_receiving.servo_speeds[r_curr_servo] = 0;
     e3c:	80 91 fe 06 	lds	r24, 0x06FE
     e40:	99 27       	eor	r25, r25
     e42:	87 fd       	sbrc	r24, 7
     e44:	90 95       	com	r25
     e46:	88 0f       	add	r24, r24
     e48:	99 1f       	adc	r25, r25
     e4a:	88 0f       	add	r24, r24
     e4c:	99 1f       	adc	r25, r25
     e4e:	fc 01       	movw	r30, r24
     e50:	ea 51       	subi	r30, 0x1A	; 26
     e52:	fa 4f       	sbci	r31, 0xFA	; 250
     e54:	80 e0       	ldi	r24, 0x00	; 0
     e56:	90 e0       	ldi	r25, 0x00	; 0
     e58:	a0 e0       	ldi	r26, 0x00	; 0
     e5a:	b0 e0       	ldi	r27, 0x00	; 0
     e5c:	80 83       	st	Z, r24
     e5e:	91 83       	std	Z+1, r25	; 0x01
     e60:	a2 83       	std	Z+2, r26	; 0x02
     e62:	b3 83       	std	Z+3, r27	; 0x03
				r_curr_subcommand = data;
     e64:	8d 81       	ldd	r24, Y+5	; 0x05
     e66:	80 93 fd 06 	sts	0x06FD, r24
				if (VERBOSE==1) {
     e6a:	80 91 82 05 	lds	r24, 0x0582
     e6e:	81 30       	cpi	r24, 0x01	; 1
     e70:	09 f0       	breq	.+2      	; 0xe74 <appControl+0x278>
     e72:	7c c2       	rjmp	.+1272   	; 0x136c <appControl+0x770>
					cout << "Received speed command \n";
     e74:	80 91 fa 0f 	lds	r24, 0x0FFA
     e78:	90 91 fb 0f 	lds	r25, 0x0FFB
     e7c:	00 97       	sbiw	r24, 0x00	; 0
     e7e:	51 f0       	breq	.+20     	; 0xe94 <appControl+0x298>
     e80:	80 91 fa 0f 	lds	r24, 0x0FFA
     e84:	90 91 fb 0f 	lds	r25, 0x0FFB
     e88:	9c 01       	movw	r18, r24
     e8a:	22 50       	subi	r18, 0x02	; 2
     e8c:	30 40       	sbci	r19, 0x00	; 0
     e8e:	3c a3       	std	Y+36, r19	; 0x24
     e90:	2b a3       	std	Y+35, r18	; 0x23
     e92:	02 c0       	rjmp	.+4      	; 0xe98 <appControl+0x29c>
     e94:	1c a2       	std	Y+36, r1	; 0x24
     e96:	1b a2       	std	Y+35, r1	; 0x23
     e98:	29 e9       	ldi	r18, 0x99	; 153
     e9a:	32 e0       	ldi	r19, 0x02	; 2
     e9c:	8b a1       	ldd	r24, Y+35	; 0x23
     e9e:	9c a1       	ldd	r25, Y+36	; 0x24
     ea0:	b9 01       	movw	r22, r18
     ea2:	0e 94 61 04 	call	0x8c2	; 0x8c2 <_ZN6StreamlsEPKc>
     ea6:	62 c2       	rjmp	.+1220   	; 0x136c <appControl+0x770>
				break;
			}
			case 'T':
			{
				//subcommand "Time"
				command_receiving.time = 0;
     ea8:	10 92 3f 06 	sts	0x063F, r1
     eac:	10 92 3e 06 	sts	0x063E, r1
				r_curr_subcommand = data;
     eb0:	8d 81       	ldd	r24, Y+5	; 0x05
     eb2:	80 93 fd 06 	sts	0x06FD, r24
				if (VERBOSE==1) {
     eb6:	80 91 82 05 	lds	r24, 0x0582
     eba:	81 30       	cpi	r24, 0x01	; 1
     ebc:	09 f0       	breq	.+2      	; 0xec0 <appControl+0x2c4>
     ebe:	56 c2       	rjmp	.+1196   	; 0x136c <appControl+0x770>
					cout << "Received time command \n";
     ec0:	80 91 fa 0f 	lds	r24, 0x0FFA
     ec4:	90 91 fb 0f 	lds	r25, 0x0FFB
     ec8:	00 97       	sbiw	r24, 0x00	; 0
     eca:	51 f0       	breq	.+20     	; 0xee0 <appControl+0x2e4>
     ecc:	80 91 fa 0f 	lds	r24, 0x0FFA
     ed0:	90 91 fb 0f 	lds	r25, 0x0FFB
     ed4:	9c 01       	movw	r18, r24
     ed6:	22 50       	subi	r18, 0x02	; 2
     ed8:	30 40       	sbci	r19, 0x00	; 0
     eda:	3a a3       	std	Y+34, r19	; 0x22
     edc:	29 a3       	std	Y+33, r18	; 0x21
     ede:	02 c0       	rjmp	.+4      	; 0xee4 <appControl+0x2e8>
     ee0:	1a a2       	std	Y+34, r1	; 0x22
     ee2:	19 a2       	std	Y+33, r1	; 0x21
     ee4:	22 eb       	ldi	r18, 0xB2	; 178
     ee6:	32 e0       	ldi	r19, 0x02	; 2
     ee8:	89 a1       	ldd	r24, Y+33	; 0x21
     eea:	9a a1       	ldd	r25, Y+34	; 0x22
     eec:	b9 01       	movw	r22, r18
     eee:	0e 94 61 04 	call	0x8c2	; 0x8c2 <_ZN6StreamlsEPKc>
     ef2:	3c c2       	rjmp	.+1144   	; 0x136c <appControl+0x770>
			case '7':
			case '8':
			case '9':
			case '0':
			{
				if (VERBOSE==1) {
     ef4:	80 91 82 05 	lds	r24, 0x0582
     ef8:	81 30       	cpi	r24, 0x01	; 1
     efa:	19 f5       	brne	.+70     	; 0xf42 <appControl+0x346>
					cout << "Received digit \n Current subcommand is " << r_curr_subcommand << "\n";
     efc:	80 91 fa 0f 	lds	r24, 0x0FFA
     f00:	90 91 fb 0f 	lds	r25, 0x0FFB
     f04:	00 97       	sbiw	r24, 0x00	; 0
     f06:	51 f0       	breq	.+20     	; 0xf1c <appControl+0x320>
     f08:	80 91 fa 0f 	lds	r24, 0x0FFA
     f0c:	90 91 fb 0f 	lds	r25, 0x0FFB
     f10:	9c 01       	movw	r18, r24
     f12:	22 50       	subi	r18, 0x02	; 2
     f14:	30 40       	sbci	r19, 0x00	; 0
     f16:	38 a3       	std	Y+32, r19	; 0x20
     f18:	2f 8f       	std	Y+31, r18	; 0x1f
     f1a:	02 c0       	rjmp	.+4      	; 0xf20 <appControl+0x324>
     f1c:	18 a2       	std	Y+32, r1	; 0x20
     f1e:	1f 8e       	std	Y+31, r1	; 0x1f
     f20:	2a ec       	ldi	r18, 0xCA	; 202
     f22:	32 e0       	ldi	r19, 0x02	; 2
     f24:	8f 8d       	ldd	r24, Y+31	; 0x1f
     f26:	98 a1       	ldd	r25, Y+32	; 0x20
     f28:	b9 01       	movw	r22, r18
     f2a:	0e 94 61 04 	call	0x8c2	; 0x8c2 <_ZN6StreamlsEPKc>
     f2e:	20 91 fd 06 	lds	r18, 0x06FD
     f32:	62 2f       	mov	r22, r18
     f34:	0e 94 c4 03 	call	0x788	; 0x788 <_ZN6StreamlsEc>
     f38:	23 e1       	ldi	r18, 0x13	; 19
     f3a:	32 e0       	ldi	r19, 0x02	; 2
     f3c:	b9 01       	movw	r22, r18
     f3e:	0e 94 61 04 	call	0x8c2	; 0x8c2 <_ZN6StreamlsEPKc>
				}
				switch (r_curr_subcommand) {
     f42:	80 91 fd 06 	lds	r24, 0x06FD
     f46:	28 2f       	mov	r18, r24
     f48:	30 e0       	ldi	r19, 0x00	; 0
     f4a:	3e 8f       	std	Y+30, r19	; 0x1e
     f4c:	2d 8f       	std	Y+29, r18	; 0x1d
     f4e:	8d 8d       	ldd	r24, Y+29	; 0x1d
     f50:	9e 8d       	ldd	r25, Y+30	; 0x1e
     f52:	83 35       	cpi	r24, 0x53	; 83
     f54:	91 05       	cpc	r25, r1
     f56:	09 f4       	brne	.+2      	; 0xf5a <appControl+0x35e>
     f58:	de c0       	rjmp	.+444    	; 0x1116 <appControl+0x51a>
     f5a:	2d 8d       	ldd	r18, Y+29	; 0x1d
     f5c:	3e 8d       	ldd	r19, Y+30	; 0x1e
     f5e:	24 35       	cpi	r18, 0x54	; 84
     f60:	31 05       	cpc	r19, r1
     f62:	64 f4       	brge	.+24     	; 0xf7c <appControl+0x380>
     f64:	8d 8d       	ldd	r24, Y+29	; 0x1d
     f66:	9e 8d       	ldd	r25, Y+30	; 0x1e
     f68:	83 32       	cpi	r24, 0x23	; 35
     f6a:	91 05       	cpc	r25, r1
     f6c:	71 f0       	breq	.+28     	; 0xf8a <appControl+0x38e>
     f6e:	2d 8d       	ldd	r18, Y+29	; 0x1d
     f70:	3e 8d       	ldd	r19, Y+30	; 0x1e
     f72:	20 35       	cpi	r18, 0x50	; 80
     f74:	31 05       	cpc	r19, r1
     f76:	09 f4       	brne	.+2      	; 0xf7a <appControl+0x37e>
     f78:	47 c0       	rjmp	.+142    	; 0x1008 <appControl+0x40c>
     f7a:	f8 c1       	rjmp	.+1008   	; 0x136c <appControl+0x770>
     f7c:	8d 8d       	ldd	r24, Y+29	; 0x1d
     f7e:	9e 8d       	ldd	r25, Y+30	; 0x1e
     f80:	84 35       	cpi	r24, 0x54	; 84
     f82:	91 05       	cpc	r25, r1
     f84:	09 f4       	brne	.+2      	; 0xf88 <appControl+0x38c>
     f86:	44 c1       	rjmp	.+648    	; 0x1210 <appControl+0x614>
     f88:	f1 c1       	rjmp	.+994    	; 0x136c <appControl+0x770>
					case '#':
					{
						r_curr_servo = r_curr_servo*10 + to_int(data);
     f8a:	80 91 fe 06 	lds	r24, 0x06FE
     f8e:	99 27       	eor	r25, r25
     f90:	87 fd       	sbrc	r24, 7
     f92:	90 95       	com	r25
     f94:	9c 01       	movw	r18, r24
     f96:	22 0f       	add	r18, r18
     f98:	33 1f       	adc	r19, r19
     f9a:	c9 01       	movw	r24, r18
     f9c:	88 0f       	add	r24, r24
     f9e:	99 1f       	adc	r25, r25
     fa0:	88 0f       	add	r24, r24
     fa2:	99 1f       	adc	r25, r25
     fa4:	82 0f       	add	r24, r18
     fa6:	93 1f       	adc	r25, r19
     fa8:	18 2f       	mov	r17, r24
     faa:	8d 81       	ldd	r24, Y+5	; 0x05
     fac:	0e 94 79 04 	call	0x8f2	; 0x8f2 <_Z6to_intc>
     fb0:	81 0f       	add	r24, r17
     fb2:	80 93 fe 06 	sts	0x06FE, r24
						if (VERBOSE==1) {
     fb6:	80 91 82 05 	lds	r24, 0x0582
     fba:	81 30       	cpi	r24, 0x01	; 1
     fbc:	09 f0       	breq	.+2      	; 0xfc0 <appControl+0x3c4>
     fbe:	d6 c1       	rjmp	.+940    	; 0x136c <appControl+0x770>
							cout << "Set current servo to:" << r_curr_servo << "\n";
     fc0:	80 91 fa 0f 	lds	r24, 0x0FFA
     fc4:	90 91 fb 0f 	lds	r25, 0x0FFB
     fc8:	00 97       	sbiw	r24, 0x00	; 0
     fca:	51 f0       	breq	.+20     	; 0xfe0 <appControl+0x3e4>
     fcc:	80 91 fa 0f 	lds	r24, 0x0FFA
     fd0:	90 91 fb 0f 	lds	r25, 0x0FFB
     fd4:	9c 01       	movw	r18, r24
     fd6:	22 50       	subi	r18, 0x02	; 2
     fd8:	30 40       	sbci	r19, 0x00	; 0
     fda:	3c 8f       	std	Y+28, r19	; 0x1c
     fdc:	2b 8f       	std	Y+27, r18	; 0x1b
     fde:	02 c0       	rjmp	.+4      	; 0xfe4 <appControl+0x3e8>
     fe0:	1c 8e       	std	Y+28, r1	; 0x1c
     fe2:	1b 8e       	std	Y+27, r1	; 0x1b
     fe4:	22 ef       	ldi	r18, 0xF2	; 242
     fe6:	32 e0       	ldi	r19, 0x02	; 2
     fe8:	8b 8d       	ldd	r24, Y+27	; 0x1b
     fea:	9c 8d       	ldd	r25, Y+28	; 0x1c
     fec:	b9 01       	movw	r22, r18
     fee:	0e 94 61 04 	call	0x8c2	; 0x8c2 <_ZN6StreamlsEPKc>
     ff2:	20 91 fe 06 	lds	r18, 0x06FE
     ff6:	62 2f       	mov	r22, r18
     ff8:	0e 94 4d 04 	call	0x89a	; 0x89a <_ZN6StreamlsEa>
     ffc:	23 e1       	ldi	r18, 0x13	; 19
     ffe:	32 e0       	ldi	r19, 0x02	; 2
    1000:	b9 01       	movw	r22, r18
    1002:	0e 94 61 04 	call	0x8c2	; 0x8c2 <_ZN6StreamlsEPKc>
    1006:	b2 c1       	rjmp	.+868    	; 0x136c <appControl+0x770>
						}
						break;
					}
					case 'P':
					{
						command_receiving.servo_target_positions[r_curr_servo] = command_receiving.servo_target_positions[r_curr_servo]*10 + to_int(data);
    1008:	80 91 fe 06 	lds	r24, 0x06FE
    100c:	c8 2e       	mov	r12, r24
    100e:	dd 24       	eor	r13, r13
    1010:	c7 fc       	sbrc	r12, 7
    1012:	d0 94       	com	r13
    1014:	80 91 fe 06 	lds	r24, 0x06FE
    1018:	99 27       	eor	r25, r25
    101a:	87 fd       	sbrc	r24, 7
    101c:	90 95       	com	r25
    101e:	88 0f       	add	r24, r24
    1020:	99 1f       	adc	r25, r25
    1022:	88 0f       	add	r24, r24
    1024:	99 1f       	adc	r25, r25
    1026:	fc 01       	movw	r30, r24
    1028:	e2 57       	subi	r30, 0x72	; 114
    102a:	fa 4f       	sbci	r31, 0xFA	; 250
    102c:	80 81       	ld	r24, Z
    102e:	91 81       	ldd	r25, Z+1	; 0x01
    1030:	a2 81       	ldd	r26, Z+2	; 0x02
    1032:	b3 81       	ldd	r27, Z+3	; 0x03
    1034:	bc 01       	movw	r22, r24
    1036:	cd 01       	movw	r24, r26
    1038:	20 e0       	ldi	r18, 0x00	; 0
    103a:	30 e0       	ldi	r19, 0x00	; 0
    103c:	40 e2       	ldi	r20, 0x20	; 32
    103e:	51 e4       	ldi	r21, 0x41	; 65
    1040:	0e 94 aa 1c 	call	0x3954	; 0x3954 <__mulsf3>
    1044:	dc 01       	movw	r26, r24
    1046:	cb 01       	movw	r24, r22
    1048:	7c 01       	movw	r14, r24
    104a:	8d 01       	movw	r16, r26
    104c:	8d 81       	ldd	r24, Y+5	; 0x05
    104e:	0e 94 79 04 	call	0x8f2	; 0x8f2 <_Z6to_intc>
    1052:	aa 27       	eor	r26, r26
    1054:	97 fd       	sbrc	r25, 7
    1056:	a0 95       	com	r26
    1058:	ba 2f       	mov	r27, r26
    105a:	bc 01       	movw	r22, r24
    105c:	cd 01       	movw	r24, r26
    105e:	0e 94 1e 1c 	call	0x383c	; 0x383c <__floatsisf>
    1062:	9b 01       	movw	r18, r22
    1064:	ac 01       	movw	r20, r24
    1066:	c8 01       	movw	r24, r16
    1068:	b7 01       	movw	r22, r14
    106a:	0e 94 87 1b 	call	0x370e	; 0x370e <__addsf3>
    106e:	dc 01       	movw	r26, r24
    1070:	cb 01       	movw	r24, r22
    1072:	9c 01       	movw	r18, r24
    1074:	ad 01       	movw	r20, r26
    1076:	c6 01       	movw	r24, r12
    1078:	88 0f       	add	r24, r24
    107a:	99 1f       	adc	r25, r25
    107c:	88 0f       	add	r24, r24
    107e:	99 1f       	adc	r25, r25
    1080:	fc 01       	movw	r30, r24
    1082:	e2 57       	subi	r30, 0x72	; 114
    1084:	fa 4f       	sbci	r31, 0xFA	; 250
    1086:	20 83       	st	Z, r18
    1088:	31 83       	std	Z+1, r19	; 0x01
    108a:	42 83       	std	Z+2, r20	; 0x02
    108c:	53 83       	std	Z+3, r21	; 0x03
						command_receiving.has_changed[r_curr_servo] = 1;
    108e:	80 91 fe 06 	lds	r24, 0x06FE
    1092:	99 27       	eor	r25, r25
    1094:	87 fd       	sbrc	r24, 7
    1096:	90 95       	com	r25
    1098:	fc 01       	movw	r30, r24
    109a:	ed 57       	subi	r30, 0x7D	; 125
    109c:	fa 4f       	sbci	r31, 0xFA	; 250
    109e:	81 e0       	ldi	r24, 0x01	; 1
    10a0:	80 83       	st	Z, r24
						if (VERBOSE==1) {
    10a2:	80 91 82 05 	lds	r24, 0x0582
    10a6:	81 30       	cpi	r24, 0x01	; 1
    10a8:	09 f0       	breq	.+2      	; 0x10ac <appControl+0x4b0>
    10aa:	60 c1       	rjmp	.+704    	; 0x136c <appControl+0x770>
							cout << "Set current servo target position to:" << command_receiving.servo_target_positions[r_curr_servo] << "\n";
    10ac:	80 91 fa 0f 	lds	r24, 0x0FFA
    10b0:	90 91 fb 0f 	lds	r25, 0x0FFB
    10b4:	00 97       	sbiw	r24, 0x00	; 0
    10b6:	51 f0       	breq	.+20     	; 0x10cc <appControl+0x4d0>
    10b8:	80 91 fa 0f 	lds	r24, 0x0FFA
    10bc:	90 91 fb 0f 	lds	r25, 0x0FFB
    10c0:	9c 01       	movw	r18, r24
    10c2:	22 50       	subi	r18, 0x02	; 2
    10c4:	30 40       	sbci	r19, 0x00	; 0
    10c6:	3a 8f       	std	Y+26, r19	; 0x1a
    10c8:	29 8f       	std	Y+25, r18	; 0x19
    10ca:	02 c0       	rjmp	.+4      	; 0x10d0 <appControl+0x4d4>
    10cc:	1a 8e       	std	Y+26, r1	; 0x1a
    10ce:	19 8e       	std	Y+25, r1	; 0x19
    10d0:	28 e0       	ldi	r18, 0x08	; 8
    10d2:	33 e0       	ldi	r19, 0x03	; 3
    10d4:	89 8d       	ldd	r24, Y+25	; 0x19
    10d6:	9a 8d       	ldd	r25, Y+26	; 0x1a
    10d8:	b9 01       	movw	r22, r18
    10da:	0e 94 61 04 	call	0x8c2	; 0x8c2 <_ZN6StreamlsEPKc>
    10de:	bc 01       	movw	r22, r24
    10e0:	80 91 fe 06 	lds	r24, 0x06FE
    10e4:	99 27       	eor	r25, r25
    10e6:	87 fd       	sbrc	r24, 7
    10e8:	90 95       	com	r25
    10ea:	88 0f       	add	r24, r24
    10ec:	99 1f       	adc	r25, r25
    10ee:	88 0f       	add	r24, r24
    10f0:	99 1f       	adc	r25, r25
    10f2:	fc 01       	movw	r30, r24
    10f4:	e2 57       	subi	r30, 0x72	; 114
    10f6:	fa 4f       	sbci	r31, 0xFA	; 250
    10f8:	20 81       	ld	r18, Z
    10fa:	31 81       	ldd	r19, Z+1	; 0x01
    10fc:	42 81       	ldd	r20, Z+2	; 0x02
    10fe:	53 81       	ldd	r21, Z+3	; 0x03
    1100:	cb 01       	movw	r24, r22
    1102:	ba 01       	movw	r22, r20
    1104:	a9 01       	movw	r20, r18
    1106:	0e 94 d8 03 	call	0x7b0	; 0x7b0 <_ZN6StreamlsEd>
    110a:	23 e1       	ldi	r18, 0x13	; 19
    110c:	32 e0       	ldi	r19, 0x02	; 2
    110e:	b9 01       	movw	r22, r18
    1110:	0e 94 61 04 	call	0x8c2	; 0x8c2 <_ZN6StreamlsEPKc>
    1114:	2b c1       	rjmp	.+598    	; 0x136c <appControl+0x770>
						}
						break;
					}
					case 'S':
					{
						command_receiving.servo_speeds[r_curr_servo] = command_receiving.servo_speeds[r_curr_servo]*10 + to_int(data);
    1116:	80 91 fe 06 	lds	r24, 0x06FE
    111a:	c8 2e       	mov	r12, r24
    111c:	dd 24       	eor	r13, r13
    111e:	c7 fc       	sbrc	r12, 7
    1120:	d0 94       	com	r13
    1122:	80 91 fe 06 	lds	r24, 0x06FE
    1126:	99 27       	eor	r25, r25
    1128:	87 fd       	sbrc	r24, 7
    112a:	90 95       	com	r25
    112c:	88 0f       	add	r24, r24
    112e:	99 1f       	adc	r25, r25
    1130:	88 0f       	add	r24, r24
    1132:	99 1f       	adc	r25, r25
    1134:	fc 01       	movw	r30, r24
    1136:	ea 51       	subi	r30, 0x1A	; 26
    1138:	fa 4f       	sbci	r31, 0xFA	; 250
    113a:	80 81       	ld	r24, Z
    113c:	91 81       	ldd	r25, Z+1	; 0x01
    113e:	a2 81       	ldd	r26, Z+2	; 0x02
    1140:	b3 81       	ldd	r27, Z+3	; 0x03
    1142:	bc 01       	movw	r22, r24
    1144:	cd 01       	movw	r24, r26
    1146:	20 e0       	ldi	r18, 0x00	; 0
    1148:	30 e0       	ldi	r19, 0x00	; 0
    114a:	40 e2       	ldi	r20, 0x20	; 32
    114c:	51 e4       	ldi	r21, 0x41	; 65
    114e:	0e 94 aa 1c 	call	0x3954	; 0x3954 <__mulsf3>
    1152:	dc 01       	movw	r26, r24
    1154:	cb 01       	movw	r24, r22
    1156:	7c 01       	movw	r14, r24
    1158:	8d 01       	movw	r16, r26
    115a:	8d 81       	ldd	r24, Y+5	; 0x05
    115c:	0e 94 79 04 	call	0x8f2	; 0x8f2 <_Z6to_intc>
    1160:	aa 27       	eor	r26, r26
    1162:	97 fd       	sbrc	r25, 7
    1164:	a0 95       	com	r26
    1166:	ba 2f       	mov	r27, r26
    1168:	bc 01       	movw	r22, r24
    116a:	cd 01       	movw	r24, r26
    116c:	0e 94 1e 1c 	call	0x383c	; 0x383c <__floatsisf>
    1170:	9b 01       	movw	r18, r22
    1172:	ac 01       	movw	r20, r24
    1174:	c8 01       	movw	r24, r16
    1176:	b7 01       	movw	r22, r14
    1178:	0e 94 87 1b 	call	0x370e	; 0x370e <__addsf3>
    117c:	dc 01       	movw	r26, r24
    117e:	cb 01       	movw	r24, r22
    1180:	9c 01       	movw	r18, r24
    1182:	ad 01       	movw	r20, r26
    1184:	c6 01       	movw	r24, r12
    1186:	88 0f       	add	r24, r24
    1188:	99 1f       	adc	r25, r25
    118a:	88 0f       	add	r24, r24
    118c:	99 1f       	adc	r25, r25
    118e:	fc 01       	movw	r30, r24
    1190:	ea 51       	subi	r30, 0x1A	; 26
    1192:	fa 4f       	sbci	r31, 0xFA	; 250
    1194:	20 83       	st	Z, r18
    1196:	31 83       	std	Z+1, r19	; 0x01
    1198:	42 83       	std	Z+2, r20	; 0x02
    119a:	53 83       	std	Z+3, r21	; 0x03
						if (VERBOSE==1) {
    119c:	80 91 82 05 	lds	r24, 0x0582
    11a0:	81 30       	cpi	r24, 0x01	; 1
    11a2:	09 f0       	breq	.+2      	; 0x11a6 <appControl+0x5aa>
    11a4:	e3 c0       	rjmp	.+454    	; 0x136c <appControl+0x770>
							cout << "Set current servo speed to:" << command_receiving.servo_speeds[r_curr_servo] << "\n";
    11a6:	80 91 fa 0f 	lds	r24, 0x0FFA
    11aa:	90 91 fb 0f 	lds	r25, 0x0FFB
    11ae:	00 97       	sbiw	r24, 0x00	; 0
    11b0:	51 f0       	breq	.+20     	; 0x11c6 <appControl+0x5ca>
    11b2:	80 91 fa 0f 	lds	r24, 0x0FFA
    11b6:	90 91 fb 0f 	lds	r25, 0x0FFB
    11ba:	9c 01       	movw	r18, r24
    11bc:	22 50       	subi	r18, 0x02	; 2
    11be:	30 40       	sbci	r19, 0x00	; 0
    11c0:	38 8f       	std	Y+24, r19	; 0x18
    11c2:	2f 8b       	std	Y+23, r18	; 0x17
    11c4:	02 c0       	rjmp	.+4      	; 0x11ca <appControl+0x5ce>
    11c6:	18 8e       	std	Y+24, r1	; 0x18
    11c8:	1f 8a       	std	Y+23, r1	; 0x17
    11ca:	2e e2       	ldi	r18, 0x2E	; 46
    11cc:	33 e0       	ldi	r19, 0x03	; 3
    11ce:	8f 89       	ldd	r24, Y+23	; 0x17
    11d0:	98 8d       	ldd	r25, Y+24	; 0x18
    11d2:	b9 01       	movw	r22, r18
    11d4:	0e 94 61 04 	call	0x8c2	; 0x8c2 <_ZN6StreamlsEPKc>
    11d8:	bc 01       	movw	r22, r24
    11da:	80 91 fe 06 	lds	r24, 0x06FE
    11de:	99 27       	eor	r25, r25
    11e0:	87 fd       	sbrc	r24, 7
    11e2:	90 95       	com	r25
    11e4:	88 0f       	add	r24, r24
    11e6:	99 1f       	adc	r25, r25
    11e8:	88 0f       	add	r24, r24
    11ea:	99 1f       	adc	r25, r25
    11ec:	fc 01       	movw	r30, r24
    11ee:	ea 51       	subi	r30, 0x1A	; 26
    11f0:	fa 4f       	sbci	r31, 0xFA	; 250
    11f2:	20 81       	ld	r18, Z
    11f4:	31 81       	ldd	r19, Z+1	; 0x01
    11f6:	42 81       	ldd	r20, Z+2	; 0x02
    11f8:	53 81       	ldd	r21, Z+3	; 0x03
    11fa:	cb 01       	movw	r24, r22
    11fc:	ba 01       	movw	r22, r20
    11fe:	a9 01       	movw	r20, r18
    1200:	0e 94 d8 03 	call	0x7b0	; 0x7b0 <_ZN6StreamlsEd>
    1204:	23 e1       	ldi	r18, 0x13	; 19
    1206:	32 e0       	ldi	r19, 0x02	; 2
    1208:	b9 01       	movw	r22, r18
    120a:	0e 94 61 04 	call	0x8c2	; 0x8c2 <_ZN6StreamlsEPKc>
    120e:	ae c0       	rjmp	.+348    	; 0x136c <appControl+0x770>
						}
						break;
					}
					case 'T':
					{
						command_receiving.time = command_receiving.time*10 + to_int(data);
    1210:	80 91 3e 06 	lds	r24, 0x063E
    1214:	90 91 3f 06 	lds	r25, 0x063F
    1218:	9c 01       	movw	r18, r24
    121a:	22 0f       	add	r18, r18
    121c:	33 1f       	adc	r19, r19
    121e:	c9 01       	movw	r24, r18
    1220:	88 0f       	add	r24, r24
    1222:	99 1f       	adc	r25, r25
    1224:	88 0f       	add	r24, r24
    1226:	99 1f       	adc	r25, r25
    1228:	89 01       	movw	r16, r18
    122a:	08 0f       	add	r16, r24
    122c:	19 1f       	adc	r17, r25
    122e:	8d 81       	ldd	r24, Y+5	; 0x05
    1230:	0e 94 79 04 	call	0x8f2	; 0x8f2 <_Z6to_intc>
    1234:	80 0f       	add	r24, r16
    1236:	91 1f       	adc	r25, r17
    1238:	90 93 3f 06 	sts	0x063F, r25
    123c:	80 93 3e 06 	sts	0x063E, r24
						if (VERBOSE==1) {
    1240:	80 91 82 05 	lds	r24, 0x0582
    1244:	81 30       	cpi	r24, 0x01	; 1
    1246:	09 f0       	breq	.+2      	; 0x124a <appControl+0x64e>
    1248:	91 c0       	rjmp	.+290    	; 0x136c <appControl+0x770>
							cout << "Set movement time to:" << command_receiving.time << "\n";
    124a:	80 91 fa 0f 	lds	r24, 0x0FFA
    124e:	90 91 fb 0f 	lds	r25, 0x0FFB
    1252:	00 97       	sbiw	r24, 0x00	; 0
    1254:	51 f0       	breq	.+20     	; 0x126a <appControl+0x66e>
    1256:	80 91 fa 0f 	lds	r24, 0x0FFA
    125a:	90 91 fb 0f 	lds	r25, 0x0FFB
    125e:	9c 01       	movw	r18, r24
    1260:	22 50       	subi	r18, 0x02	; 2
    1262:	30 40       	sbci	r19, 0x00	; 0
    1264:	3e 8b       	std	Y+22, r19	; 0x16
    1266:	2d 8b       	std	Y+21, r18	; 0x15
    1268:	02 c0       	rjmp	.+4      	; 0x126e <appControl+0x672>
    126a:	1e 8a       	std	Y+22, r1	; 0x16
    126c:	1d 8a       	std	Y+21, r1	; 0x15
    126e:	2a e4       	ldi	r18, 0x4A	; 74
    1270:	33 e0       	ldi	r19, 0x03	; 3
    1272:	8d 89       	ldd	r24, Y+21	; 0x15
    1274:	9e 89       	ldd	r25, Y+22	; 0x16
    1276:	b9 01       	movw	r22, r18
    1278:	0e 94 61 04 	call	0x8c2	; 0x8c2 <_ZN6StreamlsEPKc>
    127c:	20 91 3e 06 	lds	r18, 0x063E
    1280:	30 91 3f 06 	lds	r19, 0x063F
    1284:	b9 01       	movw	r22, r18
    1286:	0e 94 f9 03 	call	0x7f2	; 0x7f2 <_ZN6StreamlsEi>
    128a:	23 e1       	ldi	r18, 0x13	; 19
    128c:	32 e0       	ldi	r19, 0x02	; 2
    128e:	b9 01       	movw	r22, r18
    1290:	0e 94 61 04 	call	0x8c2	; 0x8c2 <_ZN6StreamlsEPKc>
    1294:	6b c0       	rjmp	.+214    	; 0x136c <appControl+0x770>
				}
				break;
			}
			case ' ':
			{
				r_curr_subcommand = ' ';
    1296:	80 e2       	ldi	r24, 0x20	; 32
    1298:	80 93 fd 06 	sts	0x06FD, r24
    129c:	67 c0       	rjmp	.+206    	; 0x136c <appControl+0x770>
			}
			case '\r':
			case '\n':
			{
				// execute command
				r_curr_subcommand = ' ';
    129e:	80 e2       	ldi	r24, 0x20	; 32
    12a0:	80 93 fd 06 	sts	0x06FD, r24
				//	print_command(&command_receiving, NULL);
				//	cout << "In process ";
				//	print_command(&command_in_process, NULL);
				//#endif

				CRITICAL_SECTION{
    12a4:	ef e5       	ldi	r30, 0x5F	; 95
    12a6:	f0 e0       	ldi	r31, 0x00	; 0
    12a8:	80 81       	ld	r24, Z
    12aa:	8e 83       	std	Y+6, r24	; 0x06
    12ac:	0e 94 ca 02 	call	0x594	; 0x594 <__iCliRetVal>
    12b0:	8b 83       	std	Y+3, r24	; 0x03
    12b2:	0a c0       	rjmp	.+20     	; 0x12c8 <appControl+0x6cc>
					memcpy(&command_in_process, &command_receiving, sizeof(command_receiving));
    12b4:	80 e4       	ldi	r24, 0x40	; 64
    12b6:	96 e0       	ldi	r25, 0x06	; 6
    12b8:	23 e8       	ldi	r18, 0x83	; 131
    12ba:	35 e0       	ldi	r19, 0x05	; 5
    12bc:	b9 01       	movw	r22, r18
    12be:	4d eb       	ldi	r20, 0xBD	; 189
    12c0:	50 e0       	ldi	r21, 0x00	; 0
    12c2:	0e 94 41 1e 	call	0x3c82	; 0x3c82 <memcpy>
				//	print_command(&command_receiving, NULL);
				//	cout << "In process ";
				//	print_command(&command_in_process, NULL);
				//#endif

				CRITICAL_SECTION{
    12c6:	1b 82       	std	Y+3, r1	; 0x03
    12c8:	8b 81       	ldd	r24, Y+3	; 0x03
    12ca:	88 23       	and	r24, r24
    12cc:	99 f7       	brne	.-26     	; 0x12b4 <appControl+0x6b8>
					memcpy(&command_in_process, &command_receiving, sizeof(command_receiving));
				}
    12ce:	ce 01       	movw	r24, r28
    12d0:	06 96       	adiw	r24, 0x06	; 6
    12d2:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <__iRestore>
				
				
				initialize_command(&command_receiving);
    12d6:	83 e8       	ldi	r24, 0x83	; 131
    12d8:	95 e0       	ldi	r25, 0x05	; 5
    12da:	0e 94 06 03 	call	0x60c	; 0x60c <_Z18initialize_commandP7command>
				
				if (VERBOSE==1) {
    12de:	80 91 82 05 	lds	r24, 0x0582
    12e2:	81 30       	cpi	r24, 0x01	; 1
    12e4:	09 f0       	breq	.+2      	; 0x12e8 <appControl+0x6ec>
    12e6:	42 c0       	rjmp	.+132    	; 0x136c <appControl+0x770>
					cout << "After copy.\nReceived ";
    12e8:	80 91 fa 0f 	lds	r24, 0x0FFA
    12ec:	90 91 fb 0f 	lds	r25, 0x0FFB
    12f0:	00 97       	sbiw	r24, 0x00	; 0
    12f2:	51 f0       	breq	.+20     	; 0x1308 <appControl+0x70c>
    12f4:	80 91 fa 0f 	lds	r24, 0x0FFA
    12f8:	90 91 fb 0f 	lds	r25, 0x0FFB
    12fc:	9c 01       	movw	r18, r24
    12fe:	22 50       	subi	r18, 0x02	; 2
    1300:	30 40       	sbci	r19, 0x00	; 0
    1302:	3c 8b       	std	Y+20, r19	; 0x14
    1304:	2b 8b       	std	Y+19, r18	; 0x13
    1306:	02 c0       	rjmp	.+4      	; 0x130c <appControl+0x710>
    1308:	1c 8a       	std	Y+20, r1	; 0x14
    130a:	1b 8a       	std	Y+19, r1	; 0x13
    130c:	20 e6       	ldi	r18, 0x60	; 96
    130e:	33 e0       	ldi	r19, 0x03	; 3
    1310:	8b 89       	ldd	r24, Y+19	; 0x13
    1312:	9c 89       	ldd	r25, Y+20	; 0x14
    1314:	b9 01       	movw	r22, r18
    1316:	0e 94 61 04 	call	0x8c2	; 0x8c2 <_ZN6StreamlsEPKc>
					print_command(&command_receiving, NULL);
    131a:	83 e8       	ldi	r24, 0x83	; 131
    131c:	95 e0       	ldi	r25, 0x05	; 5
    131e:	40 e0       	ldi	r20, 0x00	; 0
    1320:	50 e0       	ldi	r21, 0x00	; 0
    1322:	60 e0       	ldi	r22, 0x00	; 0
    1324:	70 e0       	ldi	r23, 0x00	; 0
    1326:	0e 94 31 05 	call	0xa62	; 0xa62 <_Z13print_commandP7commandm>
					cout << "In process ";
    132a:	80 91 fa 0f 	lds	r24, 0x0FFA
    132e:	90 91 fb 0f 	lds	r25, 0x0FFB
    1332:	00 97       	sbiw	r24, 0x00	; 0
    1334:	51 f0       	breq	.+20     	; 0x134a <appControl+0x74e>
    1336:	80 91 fa 0f 	lds	r24, 0x0FFA
    133a:	90 91 fb 0f 	lds	r25, 0x0FFB
    133e:	9c 01       	movw	r18, r24
    1340:	22 50       	subi	r18, 0x02	; 2
    1342:	30 40       	sbci	r19, 0x00	; 0
    1344:	3a 8b       	std	Y+18, r19	; 0x12
    1346:	29 8b       	std	Y+17, r18	; 0x11
    1348:	02 c0       	rjmp	.+4      	; 0x134e <appControl+0x752>
    134a:	1a 8a       	std	Y+18, r1	; 0x12
    134c:	19 8a       	std	Y+17, r1	; 0x11
    134e:	26 e7       	ldi	r18, 0x76	; 118
    1350:	33 e0       	ldi	r19, 0x03	; 3
    1352:	89 89       	ldd	r24, Y+17	; 0x11
    1354:	9a 89       	ldd	r25, Y+18	; 0x12
    1356:	b9 01       	movw	r22, r18
    1358:	0e 94 61 04 	call	0x8c2	; 0x8c2 <_ZN6StreamlsEPKc>
					print_command(&command_in_process, NULL);
    135c:	80 e4       	ldi	r24, 0x40	; 64
    135e:	96 e0       	ldi	r25, 0x06	; 6
    1360:	40 e0       	ldi	r20, 0x00	; 0
    1362:	50 e0       	ldi	r21, 0x00	; 0
    1364:	60 e0       	ldi	r22, 0x00	; 0
    1366:	70 e0       	ldi	r23, 0x00	; 0
    1368:	0e 94 31 05 	call	0xa62	; 0xa62 <_Z13print_commandP7commandm>
	return 0;
}
// This is the main loop
TICK_COUNT appControl(LOOP_COUNT loopCount, TICK_COUNT loopStart) {

	while (uart1.isRxBufferEmpty()==FALSE) {
    136c:	86 ea       	ldi	r24, 0xA6	; 166
    136e:	9f e0       	ldi	r25, 0x0F	; 15
    1370:	0e 94 11 04 	call	0x822	; 0x822 <_ZNK4Uart15isRxBufferEmptyEv>
    1374:	1f a6       	std	Y+47, r1	; 0x2f
    1376:	88 23       	and	r24, r24
    1378:	11 f4       	brne	.+4      	; 0x137e <appControl+0x782>
    137a:	31 e0       	ldi	r19, 0x01	; 1
    137c:	3f a7       	std	Y+47, r19	; 0x2f
    137e:	8f a5       	ldd	r24, Y+47	; 0x2f
    1380:	88 23       	and	r24, r24
    1382:	09 f0       	breq	.+2      	; 0x1386 <appControl+0x78a>
    1384:	54 cc       	rjmp	.-1880   	; 0xc2e <appControl+0x32>
			}
		}

	}

	if (loopStart > (last_loop_time + SSC_RESOLUTION)) {   
    1386:	80 91 ff 06 	lds	r24, 0x06FF
    138a:	90 91 00 07 	lds	r25, 0x0700
    138e:	a0 91 01 07 	lds	r26, 0x0701
    1392:	b0 91 02 07 	lds	r27, 0x0702
    1396:	9c 01       	movw	r18, r24
    1398:	ad 01       	movw	r20, r26
    139a:	20 5f       	subi	r18, 0xF0	; 240
    139c:	38 4d       	sbci	r19, 0xD8	; 216
    139e:	4f 4f       	sbci	r20, 0xFF	; 255
    13a0:	5f 4f       	sbci	r21, 0xFF	; 255
    13a2:	8b 85       	ldd	r24, Y+11	; 0x0b
    13a4:	9c 85       	ldd	r25, Y+12	; 0x0c
    13a6:	ad 85       	ldd	r26, Y+13	; 0x0d
    13a8:	be 85       	ldd	r27, Y+14	; 0x0e
    13aa:	28 17       	cp	r18, r24
    13ac:	39 07       	cpc	r19, r25
    13ae:	4a 07       	cpc	r20, r26
    13b0:	5b 07       	cpc	r21, r27
    13b2:	08 f0       	brcs	.+2      	; 0x13b6 <appControl+0x7ba>
    13b4:	92 c0       	rjmp	.+292    	; 0x14da <appControl+0x8de>
		last_loop_time = loopStart;
    13b6:	8b 85       	ldd	r24, Y+11	; 0x0b
    13b8:	9c 85       	ldd	r25, Y+12	; 0x0c
    13ba:	ad 85       	ldd	r26, Y+13	; 0x0d
    13bc:	be 85       	ldd	r27, Y+14	; 0x0e
    13be:	80 93 ff 06 	sts	0x06FF, r24
    13c2:	90 93 00 07 	sts	0x0700, r25
    13c6:	a0 93 01 07 	sts	0x0701, r26
    13ca:	b0 93 02 07 	sts	0x0702, r27
			command_in_process.time--;
		}


*/
		int8_t jk=0;
    13ce:	1a 82       	std	Y+2, r1	; 0x02
		for (jk=0; jk <= SERVOS_NUMBER; jk++) {
    13d0:	1a 82       	std	Y+2, r1	; 0x02
    13d2:	7f c0       	rjmp	.+254    	; 0x14d2 <appControl+0x8d6>
			if (command_in_process.has_changed[jk] == 1) {
    13d4:	8a 81       	ldd	r24, Y+2	; 0x02
    13d6:	99 27       	eor	r25, r25
    13d8:	87 fd       	sbrc	r24, 7
    13da:	90 95       	com	r25
    13dc:	fc 01       	movw	r30, r24
    13de:	e0 5c       	subi	r30, 0xC0	; 192
    13e0:	f9 4f       	sbci	r31, 0xF9	; 249
    13e2:	80 81       	ld	r24, Z
    13e4:	81 30       	cpi	r24, 0x01	; 1
    13e6:	09 f0       	breq	.+2      	; 0x13ea <appControl+0x7ee>
    13e8:	71 c0       	rjmp	.+226    	; 0x14cc <appControl+0x8d0>
				DRIVE_SPEED speed = interpolate((int16_t)command_in_process.servo_target_positions[jk], MY_DRIVE_SPEED_MIN, MY_DRIVE_SPEED_MAX, DRIVE_SPEED_MIN,DRIVE_SPEED_MAX);
    13ea:	8a 81       	ldd	r24, Y+2	; 0x02
    13ec:	99 27       	eor	r25, r25
    13ee:	87 fd       	sbrc	r24, 7
    13f0:	90 95       	com	r25
    13f2:	88 0f       	add	r24, r24
    13f4:	99 1f       	adc	r25, r25
    13f6:	88 0f       	add	r24, r24
    13f8:	99 1f       	adc	r25, r25
    13fa:	fc 01       	movw	r30, r24
    13fc:	e5 5b       	subi	r30, 0xB5	; 181
    13fe:	f9 4f       	sbci	r31, 0xF9	; 249
    1400:	80 81       	ld	r24, Z
    1402:	91 81       	ldd	r25, Z+1	; 0x01
    1404:	a2 81       	ldd	r26, Z+2	; 0x02
    1406:	b3 81       	ldd	r27, Z+3	; 0x03
    1408:	bc 01       	movw	r22, r24
    140a:	cd 01       	movw	r24, r26
    140c:	0e 94 eb 1b 	call	0x37d6	; 0x37d6 <__fixsfsi>
    1410:	dc 01       	movw	r26, r24
    1412:	cb 01       	movw	r24, r22
    1414:	64 ef       	ldi	r22, 0xF4	; 244
    1416:	71 e0       	ldi	r23, 0x01	; 1
    1418:	44 ec       	ldi	r20, 0xC4	; 196
    141a:	59 e0       	ldi	r21, 0x09	; 9
    141c:	21 e8       	ldi	r18, 0x81	; 129
    141e:	3f ef       	ldi	r19, 0xFF	; 255
    1420:	0f e7       	ldi	r16, 0x7F	; 127
    1422:	10 e0       	ldi	r17, 0x00	; 0
    1424:	0e 94 4b 10 	call	0x2096	; 0x2096 <interpolate>
    1428:	89 83       	std	Y+1, r24	; 0x01
				(*servos[jk]).setSpeed(speed);  
    142a:	8a 81       	ldd	r24, Y+2	; 0x02
    142c:	99 27       	eor	r25, r25
    142e:	87 fd       	sbrc	r24, 7
    1430:	90 95       	com	r25
    1432:	88 0f       	add	r24, r24
    1434:	99 1f       	adc	r25, r25
    1436:	fc 01       	movw	r30, r24
    1438:	e4 59       	subi	r30, 0x94	; 148
    143a:	fa 4f       	sbci	r31, 0xFA	; 250
    143c:	80 81       	ld	r24, Z
    143e:	91 81       	ldd	r25, Z+1	; 0x01
    1440:	69 81       	ldd	r22, Y+1	; 0x01
    1442:	0e 94 23 04 	call	0x846	; 0x846 <_ZN8Actuator8setSpeedEa>
				command_in_process.has_changed[jk] = 0;
    1446:	8a 81       	ldd	r24, Y+2	; 0x02
    1448:	99 27       	eor	r25, r25
    144a:	87 fd       	sbrc	r24, 7
    144c:	90 95       	com	r25
    144e:	fc 01       	movw	r30, r24
    1450:	e0 5c       	subi	r30, 0xC0	; 192
    1452:	f9 4f       	sbci	r31, 0xF9	; 249
    1454:	10 82       	st	Z, r1
				cout << "#" << jk << " Chgd?:" << command_in_process.has_changed[jk] << " Trgt:" << speed << "\n";
    1456:	80 91 fa 0f 	lds	r24, 0x0FFA
    145a:	90 91 fb 0f 	lds	r25, 0x0FFB
    145e:	00 97       	sbiw	r24, 0x00	; 0
    1460:	51 f0       	breq	.+20     	; 0x1476 <appControl+0x87a>
    1462:	80 91 fa 0f 	lds	r24, 0x0FFA
    1466:	90 91 fb 0f 	lds	r25, 0x0FFB
    146a:	9c 01       	movw	r18, r24
    146c:	22 50       	subi	r18, 0x02	; 2
    146e:	30 40       	sbci	r19, 0x00	; 0
    1470:	38 8b       	std	Y+16, r19	; 0x10
    1472:	2f 87       	std	Y+15, r18	; 0x0f
    1474:	02 c0       	rjmp	.+4      	; 0x147a <appControl+0x87e>
    1476:	18 8a       	std	Y+16, r1	; 0x10
    1478:	1f 86       	std	Y+15, r1	; 0x0f
    147a:	29 e3       	ldi	r18, 0x39	; 57
    147c:	32 e0       	ldi	r19, 0x02	; 2
    147e:	8f 85       	ldd	r24, Y+15	; 0x0f
    1480:	98 89       	ldd	r25, Y+16	; 0x10
    1482:	b9 01       	movw	r22, r18
    1484:	0e 94 61 04 	call	0x8c2	; 0x8c2 <_ZN6StreamlsEPKc>
    1488:	6a 81       	ldd	r22, Y+2	; 0x02
    148a:	0e 94 4d 04 	call	0x89a	; 0x89a <_ZN6StreamlsEa>
    148e:	22 e8       	ldi	r18, 0x82	; 130
    1490:	33 e0       	ldi	r19, 0x03	; 3
    1492:	b9 01       	movw	r22, r18
    1494:	0e 94 61 04 	call	0x8c2	; 0x8c2 <_ZN6StreamlsEPKc>
    1498:	ac 01       	movw	r20, r24
    149a:	8a 81       	ldd	r24, Y+2	; 0x02
    149c:	99 27       	eor	r25, r25
    149e:	87 fd       	sbrc	r24, 7
    14a0:	90 95       	com	r25
    14a2:	fc 01       	movw	r30, r24
    14a4:	e0 5c       	subi	r30, 0xC0	; 192
    14a6:	f9 4f       	sbci	r31, 0xF9	; 249
    14a8:	20 81       	ld	r18, Z
    14aa:	ca 01       	movw	r24, r20
    14ac:	62 2f       	mov	r22, r18
    14ae:	0e 94 39 04 	call	0x872	; 0x872 <_ZN6StreamlsEh>
    14b2:	2a e8       	ldi	r18, 0x8A	; 138
    14b4:	33 e0       	ldi	r19, 0x03	; 3
    14b6:	b9 01       	movw	r22, r18
    14b8:	0e 94 61 04 	call	0x8c2	; 0x8c2 <_ZN6StreamlsEPKc>
    14bc:	69 81       	ldd	r22, Y+1	; 0x01
    14be:	0e 94 4d 04 	call	0x89a	; 0x89a <_ZN6StreamlsEa>
    14c2:	23 e1       	ldi	r18, 0x13	; 19
    14c4:	32 e0       	ldi	r19, 0x02	; 2
    14c6:	b9 01       	movw	r22, r18
    14c8:	0e 94 61 04 	call	0x8c2	; 0x8c2 <_ZN6StreamlsEPKc>
		}


*/
		int8_t jk=0;
		for (jk=0; jk <= SERVOS_NUMBER; jk++) {
    14cc:	8a 81       	ldd	r24, Y+2	; 0x02
    14ce:	8f 5f       	subi	r24, 0xFF	; 255
    14d0:	8a 83       	std	Y+2, r24	; 0x02
    14d2:	8a 81       	ldd	r24, Y+2	; 0x02
    14d4:	8c 30       	cpi	r24, 0x0C	; 12
    14d6:	0c f4       	brge	.+2      	; 0x14da <appControl+0x8de>
    14d8:	7d cf       	rjmp	.-262    	; 0x13d4 <appControl+0x7d8>
				cout << "#" << jk << " Chgd?:" << command_in_process.has_changed[jk] << " Trgt:" << speed << "\n";
			}
		}
		
	}
	return 0;
    14da:	80 e0       	ldi	r24, 0x00	; 0
    14dc:	90 e0       	ldi	r25, 0x00	; 0
    14de:	a0 e0       	ldi	r26, 0x00	; 0
    14e0:	b0 e0       	ldi	r27, 0x00	; 0
}
    14e2:	bc 01       	movw	r22, r24
    14e4:	cd 01       	movw	r24, r26
    14e6:	af 96       	adiw	r28, 0x2f	; 47
    14e8:	0f b6       	in	r0, 0x3f	; 63
    14ea:	f8 94       	cli
    14ec:	de bf       	out	0x3e, r29	; 62
    14ee:	0f be       	out	0x3f, r0	; 63
    14f0:	cd bf       	out	0x3d, r28	; 61
    14f2:	cf 91       	pop	r28
    14f4:	df 91       	pop	r29
    14f6:	1f 91       	pop	r17
    14f8:	0f 91       	pop	r16
    14fa:	ff 90       	pop	r15
    14fc:	ef 90       	pop	r14
    14fe:	df 90       	pop	r13
    1500:	cf 90       	pop	r12
    1502:	08 95       	ret

00001504 <clockGetSnapshot>:
    1504:	fc 01       	movw	r30, r24
    1506:	6f b7       	in	r22, 0x3f	; 63
#endif  /* C++ */
#endif


#ifndef _WINDOWS_
static __inline__ uint8_t __iCliRetVal(void){ cli(); return 1; }
    1508:	f8 94       	cli
    150a:	86 b5       	in	r24, 0x26	; 38
    150c:	20 91 03 07 	lds	r18, 0x0703
    1510:	30 91 04 07 	lds	r19, 0x0704
    1514:	40 91 05 07 	lds	r20, 0x0705
    1518:	50 91 06 07 	lds	r21, 0x0706
    151c:	20 83       	st	Z, r18
    151e:	31 83       	std	Z+1, r19	; 0x01
    1520:	42 83       	std	Z+2, r20	; 0x02
    1522:	53 83       	std	Z+3, r21	; 0x03
    1524:	26 b5       	in	r18, 0x26	; 38
    1526:	30 e0       	ldi	r19, 0x00	; 0
    1528:	35 83       	std	Z+5, r19	; 0x05
    152a:	24 83       	std	Z+4, r18	; 0x04
    152c:	90 e0       	ldi	r25, 0x00	; 0
    152e:	28 17       	cp	r18, r24
    1530:	39 07       	cpc	r19, r25
    1532:	10 f0       	brcs	.+4      	; 0x1538 <clockGetSnapshot+0x34>
    1534:	a9 9b       	sbis	0x15, 1	; 21
    1536:	0f c0       	rjmp	.+30     	; 0x1556 <clockGetSnapshot+0x52>
    1538:	80 81       	ld	r24, Z
    153a:	91 81       	ldd	r25, Z+1	; 0x01
    153c:	a2 81       	ldd	r26, Z+2	; 0x02
    153e:	b3 81       	ldd	r27, Z+3	; 0x03
    1540:	80 58       	subi	r24, 0x80	; 128
    1542:	91 4c       	sbci	r25, 0xC1	; 193
    1544:	af 4f       	sbci	r26, 0xFF	; 255
    1546:	bf 4f       	sbci	r27, 0xFF	; 255
    1548:	80 83       	st	Z, r24
    154a:	91 83       	std	Z+1, r25	; 0x01
    154c:	a2 83       	std	Z+2, r26	; 0x02
    154e:	b3 83       	std	Z+3, r27	; 0x03
    1550:	86 b5       	in	r24, 0x26	; 38
    1552:	84 83       	std	Z+4, r24	; 0x04
    1554:	15 82       	std	Z+5, r1	; 0x05
static __inline__ uint8_t __iSeiRetVal(void){ sei(); return 1; }
static __inline__ void __iRestore(const  uint8_t *__s){ SREG = *__s; __asm__ volatile ("" ::: "memory");}
    1556:	6f bf       	out	0x3f, r22	; 63
    1558:	08 95       	ret

0000155a <clockSnapshotToTicks>:
    155a:	ef 92       	push	r14
    155c:	ff 92       	push	r15
    155e:	0f 93       	push	r16
    1560:	1f 93       	push	r17
    1562:	fc 01       	movw	r30, r24
    1564:	e0 80       	ld	r14, Z
    1566:	f1 80       	ldd	r15, Z+1	; 0x01
    1568:	02 81       	ldd	r16, Z+2	; 0x02
    156a:	13 81       	ldd	r17, Z+3	; 0x03
    156c:	64 81       	ldd	r22, Z+4	; 0x04
    156e:	75 81       	ldd	r23, Z+5	; 0x05
    1570:	80 e0       	ldi	r24, 0x00	; 0
    1572:	90 e0       	ldi	r25, 0x00	; 0
    1574:	20 e8       	ldi	r18, 0x80	; 128
    1576:	3e e3       	ldi	r19, 0x3E	; 62
    1578:	40 e0       	ldi	r20, 0x00	; 0
    157a:	50 e0       	ldi	r21, 0x00	; 0
    157c:	0e 94 94 21 	call	0x4328	; 0x4328 <__mulsi3>
    1580:	2a ef       	ldi	r18, 0xFA	; 250
    1582:	30 e0       	ldi	r19, 0x00	; 0
    1584:	40 e0       	ldi	r20, 0x00	; 0
    1586:	50 e0       	ldi	r21, 0x00	; 0
    1588:	0e 94 c7 21 	call	0x438e	; 0x438e <__udivmodsi4>
    158c:	2e 0d       	add	r18, r14
    158e:	3f 1d       	adc	r19, r15
    1590:	40 1f       	adc	r20, r16
    1592:	51 1f       	adc	r21, r17
    1594:	b9 01       	movw	r22, r18
    1596:	ca 01       	movw	r24, r20
    1598:	1f 91       	pop	r17
    159a:	0f 91       	pop	r16
    159c:	ff 90       	pop	r15
    159e:	ef 90       	pop	r14
    15a0:	08 95       	ret

000015a2 <clockGetus>:
    15a2:	0f 93       	push	r16
    15a4:	1f 93       	push	r17
    15a6:	df 93       	push	r29
    15a8:	cf 93       	push	r28
    15aa:	00 d0       	rcall	.+0      	; 0x15ac <clockGetus+0xa>
    15ac:	00 d0       	rcall	.+0      	; 0x15ae <clockGetus+0xc>
    15ae:	00 d0       	rcall	.+0      	; 0x15b0 <clockGetus+0xe>
    15b0:	cd b7       	in	r28, 0x3d	; 61
    15b2:	de b7       	in	r29, 0x3e	; 62
    15b4:	8e 01       	movw	r16, r28
    15b6:	0f 5f       	subi	r16, 0xFF	; 255
    15b8:	1f 4f       	sbci	r17, 0xFF	; 255
    15ba:	c8 01       	movw	r24, r16
    15bc:	0e 94 82 0a 	call	0x1504	; 0x1504 <clockGetSnapshot>
    15c0:	c8 01       	movw	r24, r16
    15c2:	0e 94 ad 0a 	call	0x155a	; 0x155a <clockSnapshotToTicks>
    15c6:	26 96       	adiw	r28, 0x06	; 6
    15c8:	0f b6       	in	r0, 0x3f	; 63
    15ca:	f8 94       	cli
    15cc:	de bf       	out	0x3e, r29	; 62
    15ce:	0f be       	out	0x3f, r0	; 63
    15d0:	cd bf       	out	0x3d, r28	; 61
    15d2:	cf 91       	pop	r28
    15d4:	df 91       	pop	r29
    15d6:	1f 91       	pop	r17
    15d8:	0f 91       	pop	r16
    15da:	08 95       	ret

000015dc <__clockInit>:
    15dc:	a9 9a       	sbi	0x15, 1	; 21
    15de:	ee e6       	ldi	r30, 0x6E	; 110
    15e0:	f0 e0       	ldi	r31, 0x00	; 0
    15e2:	80 81       	ld	r24, Z
    15e4:	82 60       	ori	r24, 0x02	; 2
    15e6:	80 83       	st	Z, r24
    15e8:	08 95       	ret

000015ea <__vector_21>:
    15ea:	1f 92       	push	r1
    15ec:	0f 92       	push	r0
    15ee:	0f b6       	in	r0, 0x3f	; 63
    15f0:	0f 92       	push	r0
    15f2:	11 24       	eor	r1, r1
    15f4:	2f 93       	push	r18
    15f6:	8f 93       	push	r24
    15f8:	9f 93       	push	r25
    15fa:	af 93       	push	r26
    15fc:	bf 93       	push	r27
    15fe:	80 91 03 07 	lds	r24, 0x0703
    1602:	90 91 04 07 	lds	r25, 0x0704
    1606:	a0 91 05 07 	lds	r26, 0x0705
    160a:	b0 91 06 07 	lds	r27, 0x0706
    160e:	80 58       	subi	r24, 0x80	; 128
    1610:	91 4c       	sbci	r25, 0xC1	; 193
    1612:	af 4f       	sbci	r26, 0xFF	; 255
    1614:	bf 4f       	sbci	r27, 0xFF	; 255
    1616:	80 93 03 07 	sts	0x0703, r24
    161a:	90 93 04 07 	sts	0x0704, r25
    161e:	a0 93 05 07 	sts	0x0705, r26
    1622:	b0 93 06 07 	sts	0x0706, r27
    1626:	20 91 ec 0f 	lds	r18, 0x0FEC
    162a:	22 23       	and	r18, r18
    162c:	b9 f1       	breq	.+110    	; 0x169c <__vector_21+0xb2>
    162e:	39 9b       	sbis	0x07, 1	; 7
    1630:	35 c0       	rjmp	.+106    	; 0x169c <__vector_21+0xb2>
    1632:	80 91 07 07 	lds	r24, 0x0707
    1636:	88 23       	and	r24, r24
    1638:	19 f0       	breq	.+6      	; 0x1640 <__vector_21+0x56>
    163a:	81 50       	subi	r24, 0x01	; 1
    163c:	80 93 07 07 	sts	0x0707, r24
    1640:	80 91 07 07 	lds	r24, 0x0707
    1644:	88 23       	and	r24, r24
    1646:	51 f5       	brne	.+84     	; 0x169c <__vector_21+0xb2>
    1648:	80 91 ed 0f 	lds	r24, 0x0FED
    164c:	88 23       	and	r24, r24
    164e:	59 f4       	brne	.+22     	; 0x1666 <__vector_21+0x7c>
    1650:	82 2f       	mov	r24, r18
    1652:	99 27       	eor	r25, r25
    1654:	87 fd       	sbrc	r24, 7
    1656:	90 95       	com	r25
    1658:	97 ff       	sbrs	r25, 7
    165a:	03 c0       	rjmp	.+6      	; 0x1662 <__vector_21+0x78>
    165c:	90 95       	com	r25
    165e:	81 95       	neg	r24
    1660:	9f 4f       	sbci	r25, 0xFF	; 255
    1662:	80 93 ed 0f 	sts	0x0FED, r24
    1666:	27 fd       	sbrc	r18, 7
    1668:	02 c0       	rjmp	.+4      	; 0x166e <__vector_21+0x84>
    166a:	9f e1       	ldi	r25, 0x1F	; 31
    166c:	01 c0       	rjmp	.+2      	; 0x1670 <__vector_21+0x86>
    166e:	9f e0       	ldi	r25, 0x0F	; 15
    1670:	20 91 ee 0f 	lds	r18, 0x0FEE
    1674:	22 23       	and	r18, r18
    1676:	41 f0       	breq	.+16     	; 0x1688 <__vector_21+0x9e>
    1678:	80 91 ed 0f 	lds	r24, 0x0FED
    167c:	81 50       	subi	r24, 0x01	; 1
    167e:	80 93 ed 0f 	sts	0x0FED, r24
    1682:	88 23       	and	r24, r24
    1684:	09 f4       	brne	.+2      	; 0x1688 <__vector_21+0x9e>
    1686:	9d e7       	ldi	r25, 0x7D	; 125
    1688:	10 92 ee 0f 	sts	0x0FEE, r1
    168c:	22 23       	and	r18, r18
    168e:	19 f4       	brne	.+6      	; 0x1696 <__vector_21+0xac>
    1690:	81 e0       	ldi	r24, 0x01	; 1
    1692:	80 93 ee 0f 	sts	0x0FEE, r24
    1696:	90 93 07 07 	sts	0x0707, r25
    169a:	31 9a       	sbi	0x06, 1	; 6
    169c:	bf 91       	pop	r27
    169e:	af 91       	pop	r26
    16a0:	9f 91       	pop	r25
    16a2:	8f 91       	pop	r24
    16a4:	2f 91       	pop	r18
    16a6:	0f 90       	pop	r0
    16a8:	0f be       	out	0x3f, r0	; 63
    16aa:	0f 90       	pop	r0
    16ac:	1f 90       	pop	r1
    16ae:	18 95       	reti

000016b0 <marquee_put_char>:
static MAKE_WRITER(marquee_put_char); /* Fwd Def */
MARQUEE _marquee_ = MAKE_MARQUEE(marquee_list,500000,2000000,&marquee_put_char);
// Create a Writer to write to marquee
// Do NOT call it directly instead, to write the char 'A' use:
// 	marqueeGetWriter(&marquee)('A');
static MAKE_WRITER(marquee_put_char){ /* createWriter */
    16b0:	68 2f       	mov	r22, r24
	return marqueeSendByte(&_marquee_,byte);
    16b2:	8f ed       	ldi	r24, 0xDF	; 223
    16b4:	93 e0       	ldi	r25, 0x03	; 3
    16b6:	0e 94 51 12 	call	0x24a2	; 0x24a2 <marqueeSendByte>
}
    16ba:	90 e0       	ldi	r25, 0x00	; 0
    16bc:	08 95       	ret

000016be <registerLED>:
static __inline__ void LED_off(LED* led){
	LED_set(led,FALSE);
}

static __inline__ void statusLEDregister(const IOPin* pin, boolean activeHigh){
	statusLED.pin = pin;
    16be:	8e e7       	ldi	r24, 0x7E	; 126
    16c0:	93 e0       	ldi	r25, 0x03	; 3
    16c2:	90 93 f2 0f 	sts	0x0FF2, r25
    16c6:	80 93 f1 0f 	sts	0x0FF1, r24
	statusLED.activeHigh = activeHigh;
    16ca:	80 91 f3 0f 	lds	r24, 0x0FF3
	statusLED.initialised=FALSE;
    16ce:	8c 7f       	andi	r24, 0xFC	; 252
    16d0:	80 93 f3 0f 	sts	0x0FF3, r24


void LED_set(LED* led,	boolean value);

static __inline__ void LED_on(LED* led){
	LED_set(led,TRUE);
    16d4:	81 ef       	ldi	r24, 0xF1	; 241
    16d6:	9f e0       	ldi	r25, 0x0F	; 15
    16d8:	6f ef       	ldi	r22, 0xFF	; 255
    16da:	0e 94 a1 11 	call	0x2342	; 0x2342 <LED_set>
	servoPWMInit(&_servos2_);
}
// ----------- Register the statusLED -----------
void registerLED(void){
	statusLEDregister(C1,false);
}
    16de:	08 95       	ret

000016e0 <initHardware>:
	segled_init(&_led_display_);
}

// ----------- Initialise my added devices ------
void initHardware(void){
	servoPWMInit(&_Servos1_);
    16e0:	8a e7       	ldi	r24, 0x7A	; 122
    16e2:	94 e0       	ldi	r25, 0x04	; 4
    16e4:	0e 94 ea 0d 	call	0x1bd4	; 0x1bd4 <servoPWMInit>
	servoPWMInit(&_servos2_);
    16e8:	8a e0       	ldi	r24, 0x0A	; 10
    16ea:	95 e0       	ldi	r25, 0x05	; 5
    16ec:	0e 94 ea 0d 	call	0x1bd4	; 0x1bd4 <servoPWMInit>
}
    16f0:	08 95       	ret

000016f2 <sysInitHardware>:
	&_servo12_
};
SERVO_DRIVER _servos2_ = MAKE_SERVO_DRIVER(servos2_list);

// ----------- Initialise built in devices ------
void sysInitHardware(void){
    16f2:	0f 93       	push	r16
    16f4:	1f 93       	push	r17
static __inline__ boolean SWITCH_released(SWITCH* sw){
	return pin_is_high(sw->pin);
}

static __inline__ void SWITCH_init(SWITCH *sw){
	pin_make_input(sw->pin,TRUE);
    16f6:	80 91 cc 03 	lds	r24, 0x03CC
    16fa:	90 91 cd 03 	lds	r25, 0x03CD
    16fe:	6f ef       	ldi	r22, 0xFF	; 255
    1700:	0e 94 53 11 	call	0x22a6	; 0x22a6 <pin_make_input>
	SWITCH_init(&_button_);
	setErrorLog(&uart1SendByte);
    1704:	00 ef       	ldi	r16, 0xF0	; 240
    1706:	1b e0       	ldi	r17, 0x0B	; 11
    1708:	c8 01       	movw	r24, r16
    170a:	0e 94 d6 10 	call	0x21ac	; 0x21ac <setErrorLog>
	rprintfInit(&uart1SendByte);
    170e:	c8 01       	movw	r24, r16
    1710:	0e 94 2e 12 	call	0x245c	; 0x245c <rprintfInit>
	uartInit(_C_uart1,115200);
    1714:	8a e9       	ldi	r24, 0x9A	; 154
    1716:	93 e0       	ldi	r25, 0x03	; 3
    1718:	40 e0       	ldi	r20, 0x00	; 0
    171a:	52 ec       	ldi	r21, 0xC2	; 194
    171c:	61 e0       	ldi	r22, 0x01	; 1
    171e:	70 e0       	ldi	r23, 0x00	; 0
    1720:	0e 94 1e 15 	call	0x2a3c	; 0x2a3c <_uartInit>

// Write a character to the display
uint8_t segled_put_char(SEGLED* led, uint8_t ch);

static __inline__ void segled_init(SEGLED* led){
	segled_put_char(led,' ');
    1724:	8e ec       	ldi	r24, 0xCE	; 206
    1726:	93 e0       	ldi	r25, 0x03	; 3
    1728:	60 e2       	ldi	r22, 0x20	; 32
    172a:	0e 94 ae 13 	call	0x275c	; 0x275c <segled_put_char>
	segled_init(&_led_display_);
}
    172e:	1f 91       	pop	r17
    1730:	0f 91       	pop	r16
    1732:	08 95       	ret

00001734 <__vector_36>:
#endif

#ifndef USART1_RX_vect
# error Uart1 Rx complete vector undefined
#else
ISR(USART1_RX_vect){
    1734:	1f 92       	push	r1
    1736:	0f 92       	push	r0
    1738:	0f b6       	in	r0, 0x3f	; 63
    173a:	0f 92       	push	r0
    173c:	11 24       	eor	r1, r1
    173e:	2f 93       	push	r18
    1740:	3f 93       	push	r19
    1742:	4f 93       	push	r20
    1744:	5f 93       	push	r21
    1746:	6f 93       	push	r22
    1748:	7f 93       	push	r23
    174a:	8f 93       	push	r24
    174c:	9f 93       	push	r25
    174e:	af 93       	push	r26
    1750:	bf 93       	push	r27
    1752:	ef 93       	push	r30
    1754:	ff 93       	push	r31
	uartReceiveService(_C_uart1);
    1756:	e0 91 c6 03 	lds	r30, 0x03C6
    175a:	f0 91 c7 03 	lds	r31, 0x03C7
    175e:	60 81       	ld	r22, Z
    1760:	8a e9       	ldi	r24, 0x9A	; 154
    1762:	93 e0       	ldi	r25, 0x03	; 3
    1764:	0e 94 52 16 	call	0x2ca4	; 0x2ca4 <__uartReceiveService>
}
    1768:	ff 91       	pop	r31
    176a:	ef 91       	pop	r30
    176c:	bf 91       	pop	r27
    176e:	af 91       	pop	r26
    1770:	9f 91       	pop	r25
    1772:	8f 91       	pop	r24
    1774:	7f 91       	pop	r23
    1776:	6f 91       	pop	r22
    1778:	5f 91       	pop	r21
    177a:	4f 91       	pop	r20
    177c:	3f 91       	pop	r19
    177e:	2f 91       	pop	r18
    1780:	0f 90       	pop	r0
    1782:	0f be       	out	0x3f, r0	; 63
    1784:	0f 90       	pop	r0
    1786:	1f 90       	pop	r1
    1788:	18 95       	reti

0000178a <__vector_38>:
HW_UART __C_uart1 = MAKE_HW_UART_Rx_Tx(&rx_uart1_Buffer,&tx_uart1_Buffer,UCSR1A,UCSR1B,UBRR1L,UBRR1H,UDR1,null,BV(U2X1),D2,D3,&uart1GetByte,&uart1SendByte);

#ifndef USART1_TX_vect
# error Uart1 Tx complete vector undefined
#else
ISR(USART1_TX_vect){
    178a:	1f 92       	push	r1
    178c:	0f 92       	push	r0
    178e:	0f b6       	in	r0, 0x3f	; 63
    1790:	0f 92       	push	r0
    1792:	11 24       	eor	r1, r1
    1794:	2f 93       	push	r18
    1796:	3f 93       	push	r19
    1798:	4f 93       	push	r20
    179a:	5f 93       	push	r21
    179c:	6f 93       	push	r22
    179e:	7f 93       	push	r23
    17a0:	8f 93       	push	r24
    17a2:	9f 93       	push	r25
    17a4:	af 93       	push	r26
    17a6:	bf 93       	push	r27
    17a8:	ef 93       	push	r30
    17aa:	ff 93       	push	r31
	uartTransmitService(_C_uart1);
    17ac:	8a e9       	ldi	r24, 0x9A	; 154
    17ae:	93 e0       	ldi	r25, 0x03	; 3
    17b0:	0e 94 0b 17 	call	0x2e16	; 0x2e16 <__uartTransmitService>
}
    17b4:	ff 91       	pop	r31
    17b6:	ef 91       	pop	r30
    17b8:	bf 91       	pop	r27
    17ba:	af 91       	pop	r26
    17bc:	9f 91       	pop	r25
    17be:	8f 91       	pop	r24
    17c0:	7f 91       	pop	r23
    17c2:	6f 91       	pop	r22
    17c4:	5f 91       	pop	r21
    17c6:	4f 91       	pop	r20
    17c8:	3f 91       	pop	r19
    17ca:	2f 91       	pop	r18
    17cc:	0f 90       	pop	r0
    17ce:	0f be       	out	0x3f, r0	; 63
    17d0:	0f 90       	pop	r0
    17d2:	1f 90       	pop	r1
    17d4:	18 95       	reti

000017d6 <uart1GetByte>:
}

// Create a routine to read a byte from uart1
// Returns -1 if there was no data
MAKE_READER( uart1GetByte){
	return uartGetByte(_C_uart1);
    17d6:	8a e9       	ldi	r24, 0x9A	; 154
    17d8:	93 e0       	ldi	r25, 0x03	; 3
    17da:	0e 94 6c 16 	call	0x2cd8	; 0x2cd8 <__uartGetByte>
}
    17de:	08 95       	ret

000017e0 <uart1SendByte>:
static cBuffer rx_uart1_Buffer = MAKE_BUFFER(rx_uart1_Buf);


// Create a routine to write bytes to uart1
// You can set rprintf to use it by calling rprintfInit(&uart1SendByte)
MAKE_WRITER(uart1SendByte){
    17e0:	68 2f       	mov	r22, r24
	return uartSendByte(_C_uart1,byte);
    17e2:	8a e9       	ldi	r24, 0x9A	; 154
    17e4:	93 e0       	ldi	r25, 0x03	; 3
    17e6:	0e 94 01 17 	call	0x2e02	; 0x2e02 <_uartSendByte>
}
    17ea:	90 e0       	ldi	r25, 0x00	; 0
    17ec:	08 95       	ret

000017ee <_ZN6Stream4_putEcP6__file>:
	/* function to write one char to device
	 * Called directly from the C FILE code
	 * when using commands from stdio.h
	 * This is passed on to the write of our C++ object
	 */
	static int	_put(char c, STREAM *s){
    17ee:	28 2f       	mov	r18, r24
		Stream* str = (Stream*)s;
    17f0:	61 15       	cp	r22, r1
    17f2:	71 05       	cpc	r23, r1
    17f4:	19 f4       	brne	.+6      	; 0x17fc <_ZN6Stream4_putEcP6__file+0xe>
    17f6:	a0 e0       	ldi	r26, 0x00	; 0
    17f8:	b0 e0       	ldi	r27, 0x00	; 0
    17fa:	02 c0       	rjmp	.+4      	; 0x1800 <_ZN6Stream4_putEcP6__file+0x12>
    17fc:	db 01       	movw	r26, r22
    17fe:	12 97       	sbiw	r26, 0x02	; 2
		return str->write((uint8_t)c);
    1800:	ed 91       	ld	r30, X+
    1802:	fc 91       	ld	r31, X
    1804:	11 97       	sbiw	r26, 0x01	; 1
    1806:	01 90       	ld	r0, Z+
    1808:	f0 81       	ld	r31, Z
    180a:	e0 2d       	mov	r30, r0
    180c:	cd 01       	movw	r24, r26
    180e:	62 2f       	mov	r22, r18
    1810:	09 95       	icall
	}
    1812:	08 95       	ret

00001814 <_ZN6Stream4_getEP6__file>:
	 * Called directly from the C FILE code
	 * when using commands from stdio.h
	 * This is passed on to the read of our C++ object
	 */
	static int	_get(STREAM *s){
		Stream* str = (Stream*)s;
    1814:	00 97       	sbiw	r24, 0x00	; 0
    1816:	19 f4       	brne	.+6      	; 0x181e <_ZN6Stream4_getEP6__file+0xa>
    1818:	a0 e0       	ldi	r26, 0x00	; 0
    181a:	b0 e0       	ldi	r27, 0x00	; 0
    181c:	02 c0       	rjmp	.+4      	; 0x1822 <_ZN6Stream4_getEP6__file+0xe>
    181e:	dc 01       	movw	r26, r24
    1820:	12 97       	sbiw	r26, 0x02	; 2
		return str->read();
    1822:	ed 91       	ld	r30, X+
    1824:	fc 91       	ld	r31, X
    1826:	11 97       	sbiw	r26, 0x01	; 1
    1828:	02 80       	ldd	r0, Z+2	; 0x02
    182a:	f3 81       	ldd	r31, Z+3	; 0x03
    182c:	e0 2d       	mov	r30, r0
    182e:	cd 01       	movw	r24, r26
    1830:	09 95       	icall
	}
    1832:	08 95       	ret

00001834 <_ZN10NullStream5writeEh>:
// A type of stream that just throws away output and returns EOF for input
class NullStream : public Stream{
public:
	NullStream(void) : Stream(){};
protected:
	virtual int write(uint8_t data) { return data;};
    1834:	86 2f       	mov	r24, r22
    1836:	90 e0       	ldi	r25, 0x00	; 0
    1838:	08 95       	ret

0000183a <_ZN10NullStream4readEv>:
	virtual int read(void) {return EOF;};
    183a:	8f ef       	ldi	r24, 0xFF	; 255
    183c:	9f ef       	ldi	r25, 0xFF	; 255
    183e:	08 95       	ret

00001840 <_ZN7Marquee4readEv>:
public:
	Marquee(MARQUEE* cstr) {m_cstr = cstr;}

	/* Implement the raw methods from Stream */
	virtual int write(uint8_t data){return marqueeSendByte(m_cstr,data);}
	virtual int read(void){return EOF;}
    1840:	8f ef       	ldi	r24, 0xFF	; 255
    1842:	9f ef       	ldi	r25, 0xFF	; 255
    1844:	08 95       	ret

00001846 <_Z10_cpp_Init_v>:
    1846:	88 ea       	ldi	r24, 0xA8	; 168
    1848:	9f e0       	ldi	r25, 0x0F	; 15
    184a:	90 93 fb 0f 	sts	0x0FFB, r25
    184e:	80 93 fa 0f 	sts	0x0FFA, r24
    1852:	90 93 f9 0f 	sts	0x0FF9, r25
    1856:	80 93 f8 0f 	sts	0x0FF8, r24
    185a:	90 93 fd 0f 	sts	0x0FFD, r25
    185e:	80 93 fc 0f 	sts	0x0FFC, r24
    1862:	08 95       	ret

00001864 <__cxa_pure_virtual>:
    1864:	ff cf       	rjmp	.-2      	; 0x1864 <__cxa_pure_virtual>

00001866 <_GLOBAL__I_statusLed>:
#ifdef __cplusplus
}
/* ===================== C++ Wrapper Code ===============================================*/
class Led {
public:
	Led(LED * cstr){m_cstr = cstr;};
    1866:	81 ef       	ldi	r24, 0xF1	; 241
    1868:	9f e0       	ldi	r25, 0x0F	; 15
    186a:	90 93 5d 0f 	sts	0x0F5D, r25
    186e:	80 93 5c 0f 	sts	0x0F5C, r24
	LED* m_cstr;
};

class StatusLed : public Led {
public:
	StatusLed(LED * cstr) : Led(cstr){
    1872:	82 e3       	ldi	r24, 0x32	; 50
    1874:	95 e0       	ldi	r25, 0x05	; 5
    1876:	90 93 5b 0f 	sts	0x0F5B, r25
    187a:	80 93 5a 0f 	sts	0x0F5A, r24
#ifdef __cplusplus
}
/* ===================== C++ Wrapper Code ===============================================*/
class Switch {
public:
	Switch(SWITCH * cstr){m_cstr = cstr;};
    187e:	8c ec       	ldi	r24, 0xCC	; 204
    1880:	93 e0       	ldi	r25, 0x03	; 3
    1882:	90 93 5f 0f 	sts	0x0F5F, r25
    1886:	80 93 5e 0f 	sts	0x0F5E, r24

class Stream : STREAM{

public:
	Stream(void){
		fdev_setup_stream(this, &_put, &_get, _FDEV_SETUP_RW);
    188a:	67 ef       	ldi	r22, 0xF7	; 247
    188c:	7b e0       	ldi	r23, 0x0B	; 11
    188e:	70 93 6b 0f 	sts	0x0F6B, r23
    1892:	60 93 6a 0f 	sts	0x0F6A, r22
    1896:	4a e0       	ldi	r20, 0x0A	; 10
    1898:	5c e0       	ldi	r21, 0x0C	; 12
    189a:	50 93 6d 0f 	sts	0x0F6D, r21
    189e:	40 93 6c 0f 	sts	0x0F6C, r20
    18a2:	a3 e0       	ldi	r26, 0x03	; 3
    18a4:	a0 93 65 0f 	sts	0x0F65, r26
    18a8:	10 92 6f 0f 	sts	0x0F6F, r1
    18ac:	10 92 6e 0f 	sts	0x0F6E, r1
};


class Marquee : public Stream {
public:
	Marquee(MARQUEE* cstr) {m_cstr = cstr;}
    18b0:	8e e3       	ldi	r24, 0x3E	; 62
    18b2:	95 e0       	ldi	r25, 0x05	; 5
    18b4:	90 93 61 0f 	sts	0x0F61, r25
    18b8:	80 93 60 0f 	sts	0x0F60, r24
    18bc:	8f ed       	ldi	r24, 0xDF	; 223
    18be:	93 e0       	ldi	r25, 0x03	; 3
    18c0:	90 93 71 0f 	sts	0x0F71, r25
    18c4:	80 93 70 0f 	sts	0x0F70, r24
#ifdef __cplusplus
}
class Actuator{
public:
	Actuator(__ACTUATOR* cstr){
		m_cstr = cstr;
    18c8:	86 ef       	ldi	r24, 0xF6	; 246
    18ca:	93 e0       	ldi	r25, 0x03	; 3
    18cc:	90 93 73 0f 	sts	0x0F73, r25
    18d0:	80 93 72 0f 	sts	0x0F72, r24
#ifdef __cplusplus
}
class Servo : public Actuator{
public:
	Servo(SERVO* cstr) : Actuator(&cstr->actuator){
		m_cstr = cstr;
    18d4:	90 93 75 0f 	sts	0x0F75, r25
    18d8:	80 93 74 0f 	sts	0x0F74, r24
    18dc:	8c e0       	ldi	r24, 0x0C	; 12
    18de:	94 e0       	ldi	r25, 0x04	; 4
    18e0:	90 93 77 0f 	sts	0x0F77, r25
    18e4:	80 93 76 0f 	sts	0x0F76, r24
    18e8:	90 93 79 0f 	sts	0x0F79, r25
    18ec:	80 93 78 0f 	sts	0x0F78, r24
    18f0:	82 e2       	ldi	r24, 0x22	; 34
    18f2:	94 e0       	ldi	r25, 0x04	; 4
    18f4:	90 93 7b 0f 	sts	0x0F7B, r25
    18f8:	80 93 7a 0f 	sts	0x0F7A, r24
    18fc:	90 93 7d 0f 	sts	0x0F7D, r25
    1900:	80 93 7c 0f 	sts	0x0F7C, r24
    1904:	88 e3       	ldi	r24, 0x38	; 56
    1906:	94 e0       	ldi	r25, 0x04	; 4
    1908:	90 93 7f 0f 	sts	0x0F7F, r25
    190c:	80 93 7e 0f 	sts	0x0F7E, r24
    1910:	90 93 81 0f 	sts	0x0F81, r25
    1914:	80 93 80 0f 	sts	0x0F80, r24
    1918:	8e e4       	ldi	r24, 0x4E	; 78
    191a:	94 e0       	ldi	r25, 0x04	; 4
    191c:	90 93 83 0f 	sts	0x0F83, r25
    1920:	80 93 82 0f 	sts	0x0F82, r24
    1924:	90 93 85 0f 	sts	0x0F85, r25
    1928:	80 93 84 0f 	sts	0x0F84, r24
    192c:	84 e6       	ldi	r24, 0x64	; 100
    192e:	94 e0       	ldi	r25, 0x04	; 4
    1930:	90 93 87 0f 	sts	0x0F87, r25
    1934:	80 93 86 0f 	sts	0x0F86, r24
    1938:	90 93 89 0f 	sts	0x0F89, r25
    193c:	80 93 88 0f 	sts	0x0F88, r24
};

class ServoDriver{
public:
	ServoDriver(SERVO_DRIVER* cstr){
		driver = cstr;
    1940:	8a e7       	ldi	r24, 0x7A	; 122
    1942:	94 e0       	ldi	r25, 0x04	; 4
    1944:	90 93 8b 0f 	sts	0x0F8B, r25
    1948:	80 93 8a 0f 	sts	0x0F8A, r24
    194c:	86 e8       	ldi	r24, 0x86	; 134
    194e:	94 e0       	ldi	r25, 0x04	; 4
    1950:	90 93 8d 0f 	sts	0x0F8D, r25
    1954:	80 93 8c 0f 	sts	0x0F8C, r24
#ifdef __cplusplus
}
class Servo : public Actuator{
public:
	Servo(SERVO* cstr) : Actuator(&cstr->actuator){
		m_cstr = cstr;
    1958:	90 93 8f 0f 	sts	0x0F8F, r25
    195c:	80 93 8e 0f 	sts	0x0F8E, r24
    1960:	8c e9       	ldi	r24, 0x9C	; 156
    1962:	94 e0       	ldi	r25, 0x04	; 4
    1964:	90 93 91 0f 	sts	0x0F91, r25
    1968:	80 93 90 0f 	sts	0x0F90, r24
    196c:	90 93 93 0f 	sts	0x0F93, r25
    1970:	80 93 92 0f 	sts	0x0F92, r24
    1974:	82 eb       	ldi	r24, 0xB2	; 178
    1976:	94 e0       	ldi	r25, 0x04	; 4
    1978:	90 93 95 0f 	sts	0x0F95, r25
    197c:	80 93 94 0f 	sts	0x0F94, r24
    1980:	90 93 97 0f 	sts	0x0F97, r25
    1984:	80 93 96 0f 	sts	0x0F96, r24
    1988:	88 ec       	ldi	r24, 0xC8	; 200
    198a:	94 e0       	ldi	r25, 0x04	; 4
    198c:	90 93 99 0f 	sts	0x0F99, r25
    1990:	80 93 98 0f 	sts	0x0F98, r24
    1994:	90 93 9b 0f 	sts	0x0F9B, r25
    1998:	80 93 9a 0f 	sts	0x0F9A, r24
    199c:	8e ed       	ldi	r24, 0xDE	; 222
    199e:	94 e0       	ldi	r25, 0x04	; 4
    19a0:	90 93 9d 0f 	sts	0x0F9D, r25
    19a4:	80 93 9c 0f 	sts	0x0F9C, r24
    19a8:	90 93 9f 0f 	sts	0x0F9F, r25
    19ac:	80 93 9e 0f 	sts	0x0F9E, r24
    19b0:	84 ef       	ldi	r24, 0xF4	; 244
    19b2:	94 e0       	ldi	r25, 0x04	; 4
    19b4:	90 93 a1 0f 	sts	0x0FA1, r25
    19b8:	80 93 a0 0f 	sts	0x0FA0, r24
    19bc:	90 93 a3 0f 	sts	0x0FA3, r25
    19c0:	80 93 a2 0f 	sts	0x0FA2, r24
};

class ServoDriver{
public:
	ServoDriver(SERVO_DRIVER* cstr){
		driver = cstr;
    19c4:	8a e0       	ldi	r24, 0x0A	; 10
    19c6:	95 e0       	ldi	r25, 0x05	; 5
    19c8:	90 93 a5 0f 	sts	0x0FA5, r25
    19cc:	80 93 a4 0f 	sts	0x0FA4, r24
    19d0:	70 93 b1 0f 	sts	0x0FB1, r23
    19d4:	60 93 b0 0f 	sts	0x0FB0, r22
    19d8:	50 93 b3 0f 	sts	0x0FB3, r21
    19dc:	40 93 b2 0f 	sts	0x0FB2, r20
    19e0:	a0 93 ab 0f 	sts	0x0FAB, r26
    19e4:	10 92 b5 0f 	sts	0x0FB5, r1
    19e8:	10 92 b4 0f 	sts	0x0FB4, r1
/* ===================== C++ Wrapper Code ===============================================*/
#include "Stream/Stream.h"
class Uart : public Stream {
public:
	Uart(UART * cstr): Stream(){
		m_cstr = cstr;
    19ec:	2a e9       	ldi	r18, 0x9A	; 154
    19ee:	33 e0       	ldi	r19, 0x03	; 3
    19f0:	30 93 b7 0f 	sts	0x0FB7, r19
    19f4:	20 93 b6 0f 	sts	0x0FB6, r18
		cstr->cpp = this;
    19f8:	e6 ea       	ldi	r30, 0xA6	; 166
    19fa:	ff e0       	ldi	r31, 0x0F	; 15
    19fc:	f0 93 b0 03 	sts	0x03B0, r31
    1a00:	e0 93 af 03 	sts	0x03AF, r30
#ifdef __cplusplus
}
/* ===================== C++ Wrapper Code ===============================================*/
class UartHW : public Uart {
public:
	UartHW(HW_UART* uart) : Uart(&uart->_uart_){
    1a04:	8e e4       	ldi	r24, 0x4E	; 78
    1a06:	95 e0       	ldi	r25, 0x05	; 5
    1a08:	91 83       	std	Z+1, r25	; 0x01
    1a0a:	80 83       	st	Z, r24
		m_hw = uart;
    1a0c:	30 93 bd 0f 	sts	0x0FBD, r19
    1a10:	20 93 bc 0f 	sts	0x0FBC, r18
		m_polling = FALSE;
    1a14:	10 92 be 0f 	sts	0x0FBE, r1
    1a18:	70 93 ca 0f 	sts	0x0FCA, r23
    1a1c:	60 93 c9 0f 	sts	0x0FC9, r22
    1a20:	50 93 cc 0f 	sts	0x0FCC, r21
    1a24:	40 93 cb 0f 	sts	0x0FCB, r20
    1a28:	a0 93 c4 0f 	sts	0x0FC4, r26
    1a2c:	10 92 ce 0f 	sts	0x0FCE, r1
    1a30:	10 92 cd 0f 	sts	0x0FCD, r1
};

// A type of stream that just throws away output and returns EOF for input
class NullStream : public Stream{
public:
	NullStream(void) : Stream(){};
    1a34:	8e e5       	ldi	r24, 0x5E	; 94
    1a36:	95 e0       	ldi	r25, 0x05	; 5
    1a38:	90 93 c0 0f 	sts	0x0FC0, r25
    1a3c:	80 93 bf 0f 	sts	0x0FBF, r24
    1a40:	08 95       	ret

00001a42 <_ZNK9StatusLed3setEa>:
	}

	virtual void set(boolean value) const{
    1a42:	1f 93       	push	r17
    1a44:	16 2f       	mov	r17, r22
		LED_off(&statusLED);
	}
}

static __inline__ void statusLED_set(boolean value){
	if(pin_is_output(statusLED.pin)){
    1a46:	80 91 f1 0f 	lds	r24, 0x0FF1
    1a4a:	90 91 f2 0f 	lds	r25, 0x0FF2
    1a4e:	0e 94 3e 11 	call	0x227c	; 0x227c <pin_is_output>
    1a52:	88 23       	and	r24, r24
    1a54:	29 f0       	breq	.+10     	; 0x1a60 <_ZNK9StatusLed3setEa+0x1e>
		LED_set(&statusLED, value);
    1a56:	81 ef       	ldi	r24, 0xF1	; 241
    1a58:	9f e0       	ldi	r25, 0x0F	; 15
    1a5a:	61 2f       	mov	r22, r17
    1a5c:	0e 94 a1 11 	call	0x2342	; 0x2342 <LED_set>
	StatusLed(LED * cstr) : Led(cstr){
	}

	virtual void set(boolean value) const{
		statusLED_set(value);
	}
    1a60:	1f 91       	pop	r17
    1a62:	08 95       	ret

00001a64 <_ZNK3Led3setEa>:
	}
	void off(void) const{
		set(FALSE);
	}
	virtual void set(boolean value) const{
		LED_set(m_cstr,value);
    1a64:	fc 01       	movw	r30, r24
    1a66:	82 81       	ldd	r24, Z+2	; 0x02
    1a68:	93 81       	ldd	r25, Z+3	; 0x03
    1a6a:	0e 94 a1 11 	call	0x2342	; 0x2342 <LED_set>
	}
    1a6e:	08 95       	ret

00001a70 <_ZN7Marquee5writeEh>:

	/* Implement the raw methods from Stream */
	virtual int write(uint8_t data){return marqueeSendByte(m_cstr,data);}
    1a70:	fc 01       	movw	r30, r24
    1a72:	80 89       	ldd	r24, Z+16	; 0x10
    1a74:	91 89       	ldd	r25, Z+17	; 0x11
    1a76:	0e 94 51 12 	call	0x24a2	; 0x24a2 <marqueeSendByte>
    1a7a:	90 e0       	ldi	r25, 0x00	; 0
    1a7c:	08 95       	ret
	};

	virtual int read(void){
    1a7e:	fc 01       	movw	r30, r24
		int ch;

		if(m_polling){
    1a80:	80 8d       	ldd	r24, Z+24	; 0x18
    1a82:	88 23       	and	r24, r24
    1a84:	29 f0       	breq	.+10     	; 0x1a90 <_ZN7Marquee5writeEh+0x20>
			ch = uartPollByte(m_hw);
    1a86:	86 89       	ldd	r24, Z+22	; 0x16
    1a88:	97 89       	ldd	r25, Z+23	; 0x17
    1a8a:	0e 94 72 17 	call	0x2ee4	; 0x2ee4 <uartPollByte>
    1a8e:	08 95       	ret
		}else{
			ch = __uartGetByte(m_cstr);
    1a90:	80 89       	ldd	r24, Z+16	; 0x10
    1a92:	91 89       	ldd	r25, Z+17	; 0x11
    1a94:	0e 94 6c 16 	call	0x2cd8	; 0x2cd8 <__uartGetByte>
		}

		return ch;
	}
    1a98:	08 95       	ret

00001a9a <_ZN4Uart4readEv>:
	/* Implement the raw methods from Stream */
	virtual int write(uint8_t data){
		return _uartSendByte(m_cstr, data);
	}
	virtual int read(void){
		return __uartGetByte(m_cstr);
    1a9a:	fc 01       	movw	r30, r24
    1a9c:	80 89       	ldd	r24, Z+16	; 0x10
    1a9e:	91 89       	ldd	r25, Z+17	; 0x11
    1aa0:	0e 94 6c 16 	call	0x2cd8	; 0x2cd8 <__uartGetByte>
	}
    1aa4:	08 95       	ret

00001aa6 <_ZN4Uart5writeEh>:
		return m_cstr;
	}

	/* Implement the raw methods from Stream */
	virtual int write(uint8_t data){
		return _uartSendByte(m_cstr, data);
    1aa6:	fc 01       	movw	r30, r24
    1aa8:	80 89       	ldd	r24, Z+16	; 0x10
    1aaa:	91 89       	ldd	r25, Z+17	; 0x11
    1aac:	0e 94 01 17 	call	0x2e02	; 0x2e02 <_uartSendByte>
	}
    1ab0:	90 e0       	ldi	r25, 0x00	; 0
    1ab2:	08 95       	ret

00001ab4 <__initTimers>:
// Private methods

//int __timerPrescalerIndex(const Timer* timer, uint16_t prescaler);

static __inline__ TimerData* timerGetData(const Timer* timer){
	return (TimerData*)pgm_read_word(&timer->pgm_data);
    1ab4:	2b ef       	ldi	r18, 0xFB	; 251
    1ab6:	31 e0       	ldi	r19, 0x01	; 1
    1ab8:	f9 01       	movw	r30, r18
    1aba:	a5 91       	lpm	r26, Z+
    1abc:	b4 91       	lpm	r27, Z+
    1abe:	84 e0       	ldi	r24, 0x04	; 4
    1ac0:	1a 96       	adiw	r26, 0x0a	; 10
    1ac2:	8c 93       	st	X, r24
    1ac4:	1a 97       	sbiw	r26, 0x0a	; 10
    1ac6:	84 b5       	in	r24, 0x24	; 36
    1ac8:	82 60       	ori	r24, 0x02	; 2
    1aca:	84 bd       	out	0x24, r24	; 36
    1acc:	8a ef       	ldi	r24, 0xFA	; 250
    1ace:	87 bd       	out	0x27, r24	; 39
    1ad0:	80 e0       	ldi	r24, 0x00	; 0
    1ad2:	94 e0       	ldi	r25, 0x04	; 4
    1ad4:	8d 93       	st	X+, r24
    1ad6:	9c 93       	st	X, r25
    1ad8:	85 b5       	in	r24, 0x25	; 37
    1ada:	85 60       	ori	r24, 0x05	; 5
    1adc:	85 bd       	out	0x25, r24	; 37
    1ade:	21 5d       	subi	r18, 0xD1	; 209
    1ae0:	3f 4f       	sbci	r19, 0xFF	; 255
    1ae2:	f9 01       	movw	r30, r18
    1ae4:	a5 91       	lpm	r26, Z+
    1ae6:	b4 91       	lpm	r27, Z+
    1ae8:	9e e0       	ldi	r25, 0x0E	; 14
    1aea:	1a 96       	adiw	r26, 0x0a	; 10
    1aec:	9c 93       	st	X, r25
    1aee:	1a 97       	sbiw	r26, 0x0a	; 10
    1af0:	e0 e8       	ldi	r30, 0x80	; 128
    1af2:	f0 e0       	ldi	r31, 0x00	; 0
    1af4:	80 81       	ld	r24, Z
    1af6:	82 60       	ori	r24, 0x02	; 2
    1af8:	80 83       	st	Z, r24
    1afa:	e1 e8       	ldi	r30, 0x81	; 129
    1afc:	f0 e0       	ldi	r31, 0x00	; 0
    1afe:	80 81       	ld	r24, Z
    1b00:	88 60       	ori	r24, 0x08	; 8
    1b02:	80 83       	st	Z, r24
    1b04:	80 81       	ld	r24, Z
    1b06:	80 61       	ori	r24, 0x10	; 16
    1b08:	80 83       	st	Z, r24
    1b0a:	40 e4       	ldi	r20, 0x40	; 64
    1b0c:	5c e9       	ldi	r21, 0x9C	; 156
    1b0e:	50 93 87 00 	sts	0x0087, r21
    1b12:	40 93 86 00 	sts	0x0086, r20
    1b16:	28 e0       	ldi	r18, 0x08	; 8
    1b18:	30 e0       	ldi	r19, 0x00	; 0
    1b1a:	2d 93       	st	X+, r18
    1b1c:	3c 93       	st	X, r19
    1b1e:	80 81       	ld	r24, Z
    1b20:	82 60       	ori	r24, 0x02	; 2
    1b22:	80 83       	st	Z, r24
    1b24:	e8 e8       	ldi	r30, 0x88	; 136
    1b26:	f2 e0       	ldi	r31, 0x02	; 2
    1b28:	a5 91       	lpm	r26, Z+
    1b2a:	b4 91       	lpm	r27, Z+
    1b2c:	1a 96       	adiw	r26, 0x0a	; 10
    1b2e:	9c 93       	st	X, r25
    1b30:	1a 97       	sbiw	r26, 0x0a	; 10
    1b32:	e0 e9       	ldi	r30, 0x90	; 144
    1b34:	f0 e0       	ldi	r31, 0x00	; 0
    1b36:	80 81       	ld	r24, Z
    1b38:	82 60       	ori	r24, 0x02	; 2
    1b3a:	80 83       	st	Z, r24
    1b3c:	e1 e9       	ldi	r30, 0x91	; 145
    1b3e:	f0 e0       	ldi	r31, 0x00	; 0
    1b40:	80 81       	ld	r24, Z
    1b42:	88 60       	ori	r24, 0x08	; 8
    1b44:	80 83       	st	Z, r24
    1b46:	80 81       	ld	r24, Z
    1b48:	80 61       	ori	r24, 0x10	; 16
    1b4a:	80 83       	st	Z, r24
    1b4c:	50 93 97 00 	sts	0x0097, r21
    1b50:	40 93 96 00 	sts	0x0096, r20
    1b54:	2d 93       	st	X+, r18
    1b56:	3c 93       	st	X, r19
    1b58:	80 81       	ld	r24, Z
    1b5a:	82 60       	ori	r24, 0x02	; 2
    1b5c:	80 83       	st	Z, r24
    1b5e:	e7 eb       	ldi	r30, 0xB7	; 183
    1b60:	f2 e0       	ldi	r31, 0x02	; 2
    1b62:	a5 91       	lpm	r26, Z+
    1b64:	b4 91       	lpm	r27, Z+
    1b66:	1a 96       	adiw	r26, 0x0a	; 10
    1b68:	9c 93       	st	X, r25
    1b6a:	1a 97       	sbiw	r26, 0x0a	; 10
    1b6c:	e0 ea       	ldi	r30, 0xA0	; 160
    1b6e:	f0 e0       	ldi	r31, 0x00	; 0
    1b70:	80 81       	ld	r24, Z
    1b72:	82 60       	ori	r24, 0x02	; 2
    1b74:	80 83       	st	Z, r24
    1b76:	e1 ea       	ldi	r30, 0xA1	; 161
    1b78:	f0 e0       	ldi	r31, 0x00	; 0
    1b7a:	80 81       	ld	r24, Z
    1b7c:	88 60       	ori	r24, 0x08	; 8
    1b7e:	80 83       	st	Z, r24
    1b80:	80 81       	ld	r24, Z
    1b82:	80 61       	ori	r24, 0x10	; 16
    1b84:	80 83       	st	Z, r24
    1b86:	50 93 a7 00 	sts	0x00A7, r21
    1b8a:	40 93 a6 00 	sts	0x00A6, r20
    1b8e:	2d 93       	st	X+, r18
    1b90:	3c 93       	st	X, r19
    1b92:	80 81       	ld	r24, Z
    1b94:	82 60       	ori	r24, 0x02	; 2
    1b96:	80 83       	st	Z, r24
    1b98:	e6 ee       	ldi	r30, 0xE6	; 230
    1b9a:	f2 e0       	ldi	r31, 0x02	; 2
    1b9c:	a5 91       	lpm	r26, Z+
    1b9e:	b4 91       	lpm	r27, Z+
    1ba0:	1a 96       	adiw	r26, 0x0a	; 10
    1ba2:	9c 93       	st	X, r25
    1ba4:	1a 97       	sbiw	r26, 0x0a	; 10
    1ba6:	e0 e2       	ldi	r30, 0x20	; 32
    1ba8:	f1 e0       	ldi	r31, 0x01	; 1
    1baa:	80 81       	ld	r24, Z
    1bac:	82 60       	ori	r24, 0x02	; 2
    1bae:	80 83       	st	Z, r24
    1bb0:	e1 e2       	ldi	r30, 0x21	; 33
    1bb2:	f1 e0       	ldi	r31, 0x01	; 1
    1bb4:	80 81       	ld	r24, Z
    1bb6:	88 60       	ori	r24, 0x08	; 8
    1bb8:	80 83       	st	Z, r24
    1bba:	80 81       	ld	r24, Z
    1bbc:	80 61       	ori	r24, 0x10	; 16
    1bbe:	80 83       	st	Z, r24
    1bc0:	50 93 27 01 	sts	0x0127, r21
    1bc4:	40 93 26 01 	sts	0x0126, r20
    1bc8:	2d 93       	st	X+, r18
    1bca:	3c 93       	st	X, r19
    1bcc:	80 81       	ld	r24, Z
    1bce:	82 60       	ori	r24, 0x02	; 2
    1bd0:	80 83       	st	Z, r24
    1bd2:	08 95       	ret

00001bd4 <servoPWMInit>:
    1bd4:	8f 92       	push	r8
    1bd6:	9f 92       	push	r9
    1bd8:	af 92       	push	r10
    1bda:	bf 92       	push	r11
    1bdc:	cf 92       	push	r12
    1bde:	df 92       	push	r13
    1be0:	ef 92       	push	r14
    1be2:	ff 92       	push	r15
    1be4:	0f 93       	push	r16
    1be6:	1f 93       	push	r17
    1be8:	cf 93       	push	r28
    1bea:	df 93       	push	r29
    1bec:	6c 01       	movw	r12, r24
    1bee:	dc 01       	movw	r26, r24
    1bf0:	12 96       	adiw	r26, 0x02	; 2
    1bf2:	8c 91       	ld	r24, X
    1bf4:	c8 2f       	mov	r28, r24
    1bf6:	d0 e0       	ldi	r29, 0x00	; 0
    1bf8:	21 97       	sbiw	r28, 0x01	; 1
    1bfa:	7e 01       	movw	r14, r28
    1bfc:	ee 0c       	add	r14, r14
    1bfe:	ff 1c       	adc	r15, r15
    1c00:	92 ef       	ldi	r25, 0xF2	; 242
    1c02:	89 2e       	mov	r8, r25
    1c04:	93 e0       	ldi	r25, 0x03	; 3
    1c06:	99 2e       	mov	r9, r25
    1c08:	8f e2       	ldi	r24, 0x2F	; 47
    1c0a:	a8 2e       	mov	r10, r24
    1c0c:	47 c0       	rjmp	.+142    	; 0x1c9c <servoPWMInit+0xc8>
    1c0e:	d6 01       	movw	r26, r12
    1c10:	ed 91       	ld	r30, X+
    1c12:	fc 91       	ld	r31, X
    1c14:	ee 0d       	add	r30, r14
    1c16:	ff 1d       	adc	r31, r15
    1c18:	05 91       	lpm	r16, Z+
    1c1a:	14 91       	lpm	r17, Z+
    1c1c:	f8 01       	movw	r30, r16
    1c1e:	d5 82       	std	Z+5, r13	; 0x05
    1c20:	c4 82       	std	Z+4, r12	; 0x04
    1c22:	86 81       	ldd	r24, Z+6	; 0x06
    1c24:	97 81       	ldd	r25, Z+7	; 0x07
    1c26:	0e 94 6f 14 	call	0x28de	; 0x28de <compareFromIOPin>
    1c2a:	fc 01       	movw	r30, r24
    1c2c:	d8 01       	movw	r26, r16
    1c2e:	55 96       	adiw	r26, 0x15	; 21
    1c30:	9c 93       	st	X, r25
    1c32:	8e 93       	st	-X, r24
    1c34:	54 97       	sbiw	r26, 0x14	; 20
    1c36:	32 96       	adiw	r30, 0x02	; 2
    1c38:	b4 90       	lpm	r11, Z+
    1c3a:	11 96       	adiw	r26, 0x01	; 1
    1c3c:	9c 92       	st	X, r9
    1c3e:	8e 92       	st	-X, r8
    1c40:	16 96       	adiw	r26, 0x06	; 6
    1c42:	8d 91       	ld	r24, X+
    1c44:	9c 91       	ld	r25, X
    1c46:	17 97       	sbiw	r26, 0x07	; 7
    1c48:	60 e0       	ldi	r22, 0x00	; 0
    1c4a:	0e 94 7a 11 	call	0x22f4	; 0x22f4 <pin_make_output>
    1c4e:	ba 9c       	mul	r11, r10
    1c50:	c0 01       	movw	r24, r0
    1c52:	11 24       	eor	r1, r1
    1c54:	85 5e       	subi	r24, 0xE5	; 229
    1c56:	9d 4f       	sbci	r25, 0xFD	; 253
    1c58:	fc 01       	movw	r30, r24
    1c5a:	a5 91       	lpm	r26, Z+
    1c5c:	b4 91       	lpm	r27, Z+
    1c5e:	8d 91       	ld	r24, X+
    1c60:	9c 91       	ld	r25, X
    1c62:	d8 01       	movw	r26, r16
    1c64:	53 96       	adiw	r26, 0x13	; 19
    1c66:	9c 93       	st	X, r25
    1c68:	8e 93       	st	-X, r24
    1c6a:	52 97       	sbiw	r26, 0x12	; 18
    1c6c:	18 96       	adiw	r26, 0x08	; 8
    1c6e:	6d 91       	ld	r22, X+
    1c70:	7c 91       	ld	r23, X
    1c72:	19 97       	sbiw	r26, 0x09	; 9
    1c74:	1a 96       	adiw	r26, 0x0a	; 10
    1c76:	4d 91       	ld	r20, X+
    1c78:	5c 91       	ld	r21, X
    1c7a:	1b 97       	sbiw	r26, 0x0b	; 11
    1c7c:	c8 01       	movw	r24, r16
    1c7e:	0e 94 86 0e 	call	0x1d0c	; 0x1d0c <servoSetConfig>
    1c82:	c8 01       	movw	r24, r16
    1c84:	60 e0       	ldi	r22, 0x00	; 0
    1c86:	0e 94 10 10 	call	0x2020	; 0x2020 <__act_setSpeed>
    1c8a:	c8 01       	movw	r24, r16
    1c8c:	6f ef       	ldi	r22, 0xFF	; 255
    1c8e:	0e 94 30 10 	call	0x2060	; 0x2060 <__act_setConnected>
    1c92:	21 97       	sbiw	r28, 0x01	; 1
    1c94:	ee ef       	ldi	r30, 0xFE	; 254
    1c96:	ff ef       	ldi	r31, 0xFF	; 255
    1c98:	ee 0e       	add	r14, r30
    1c9a:	ff 1e       	adc	r15, r31
    1c9c:	ff ef       	ldi	r31, 0xFF	; 255
    1c9e:	cf 3f       	cpi	r28, 0xFF	; 255
    1ca0:	df 07       	cpc	r29, r31
    1ca2:	09 f0       	breq	.+2      	; 0x1ca6 <servoPWMInit+0xd2>
    1ca4:	b4 cf       	rjmp	.-152    	; 0x1c0e <servoPWMInit+0x3a>
    1ca6:	df 91       	pop	r29
    1ca8:	cf 91       	pop	r28
    1caa:	1f 91       	pop	r17
    1cac:	0f 91       	pop	r16
    1cae:	ff 90       	pop	r15
    1cb0:	ef 90       	pop	r14
    1cb2:	df 90       	pop	r13
    1cb4:	cf 90       	pop	r12
    1cb6:	bf 90       	pop	r11
    1cb8:	af 90       	pop	r10
    1cba:	9f 90       	pop	r9
    1cbc:	8f 90       	pop	r8
    1cbe:	08 95       	ret

00001cc0 <setConnected>:
    1cc0:	fc 01       	movw	r30, r24
    1cc2:	84 89       	ldd	r24, Z+20	; 0x14
    1cc4:	95 89       	ldd	r25, Z+21	; 0x15
    1cc6:	61 11       	cpse	r22, r1
    1cc8:	62 e0       	ldi	r22, 0x02	; 2
    1cca:	0e 94 bb 14 	call	0x2976	; 0x2976 <compareSetOutputMode>
    1cce:	08 95       	ret

00001cd0 <setSpeed>:
    1cd0:	ef 92       	push	r14
    1cd2:	ff 92       	push	r15
    1cd4:	0f 93       	push	r16
    1cd6:	1f 93       	push	r17
    1cd8:	fc 01       	movw	r30, r24
    1cda:	e4 88       	ldd	r14, Z+20	; 0x14
    1cdc:	f5 88       	ldd	r15, Z+21	; 0x15
    1cde:	24 85       	ldd	r18, Z+12	; 0x0c
    1ce0:	35 85       	ldd	r19, Z+13	; 0x0d
    1ce2:	06 85       	ldd	r16, Z+14	; 0x0e
    1ce4:	17 85       	ldd	r17, Z+15	; 0x0f
    1ce6:	86 2f       	mov	r24, r22
    1ce8:	99 27       	eor	r25, r25
    1cea:	87 fd       	sbrc	r24, 7
    1cec:	90 95       	com	r25
    1cee:	61 e8       	ldi	r22, 0x81	; 129
    1cf0:	7f ef       	ldi	r23, 0xFF	; 255
    1cf2:	4f e7       	ldi	r20, 0x7F	; 127
    1cf4:	50 e0       	ldi	r21, 0x00	; 0
    1cf6:	0e 94 92 10 	call	0x2124	; 0x2124 <interpolateU>
    1cfa:	bc 01       	movw	r22, r24
    1cfc:	c7 01       	movw	r24, r14
    1cfe:	0e 94 dd 14 	call	0x29ba	; 0x29ba <compareSetThreshold>
    1d02:	1f 91       	pop	r17
    1d04:	0f 91       	pop	r16
    1d06:	ff 90       	pop	r15
    1d08:	ef 90       	pop	r14
    1d0a:	08 95       	ret

00001d0c <servoSetConfig>:
    1d0c:	9f 92       	push	r9
    1d0e:	af 92       	push	r10
    1d10:	bf 92       	push	r11
    1d12:	cf 92       	push	r12
    1d14:	df 92       	push	r13
    1d16:	ef 92       	push	r14
    1d18:	ff 92       	push	r15
    1d1a:	0f 93       	push	r16
    1d1c:	1f 93       	push	r17
    1d1e:	cf 93       	push	r28
    1d20:	df 93       	push	r29
    1d22:	ec 01       	movw	r28, r24
    1d24:	7b 01       	movw	r14, r22
    1d26:	8a 01       	movw	r16, r20
    1d28:	79 87       	std	Y+9, r23	; 0x09
    1d2a:	68 87       	std	Y+8, r22	; 0x08
    1d2c:	5b 87       	std	Y+11, r21	; 0x0b
    1d2e:	4a 87       	std	Y+10, r20	; 0x0a
    1d30:	8c 81       	ldd	r24, Y+4	; 0x04
    1d32:	9d 81       	ldd	r25, Y+5	; 0x05
    1d34:	89 2b       	or	r24, r25
    1d36:	09 f4       	brne	.+2      	; 0x1d3a <servoSetConfig+0x2e>
    1d38:	5e c0       	rjmp	.+188    	; 0x1df6 <servoSetConfig+0xea>
    1d3a:	9f b6       	in	r9, 0x3f	; 63
    1d3c:	f8 94       	cli
    1d3e:	8a 89       	ldd	r24, Y+18	; 0x12
    1d40:	9b 89       	ldd	r25, Y+19	; 0x13
    1d42:	68 ee       	ldi	r22, 0xE8	; 232
    1d44:	73 e0       	ldi	r23, 0x03	; 3
    1d46:	0e 94 b3 21 	call	0x4366	; 0x4366 <__udivmodhi4>
    1d4a:	5b 01       	movw	r10, r22
    1d4c:	cc 24       	eor	r12, r12
    1d4e:	dd 24       	eor	r13, r13
    1d50:	b7 01       	movw	r22, r14
    1d52:	60 1b       	sub	r22, r16
    1d54:	71 0b       	sbc	r23, r17
    1d56:	80 e0       	ldi	r24, 0x00	; 0
    1d58:	90 e0       	ldi	r25, 0x00	; 0
    1d5a:	a6 01       	movw	r20, r12
    1d5c:	95 01       	movw	r18, r10
    1d5e:	0e 94 94 21 	call	0x4328	; 0x4328 <__mulsi3>
    1d62:	24 e1       	ldi	r18, 0x14	; 20
    1d64:	30 e0       	ldi	r19, 0x00	; 0
    1d66:	40 e0       	ldi	r20, 0x00	; 0
    1d68:	50 e0       	ldi	r21, 0x00	; 0
    1d6a:	0e 94 c7 21 	call	0x438e	; 0x438e <__udivmodsi4>
    1d6e:	c9 01       	movw	r24, r18
    1d70:	da 01       	movw	r26, r20
    1d72:	9c 01       	movw	r18, r24
    1d74:	ad 01       	movw	r20, r26
    1d76:	da 01       	movw	r26, r20
    1d78:	c9 01       	movw	r24, r18
    1d7a:	80 70       	andi	r24, 0x00	; 0
    1d7c:	90 70       	andi	r25, 0x00	; 0
    1d7e:	00 97       	sbiw	r24, 0x00	; 0
    1d80:	a1 05       	cpc	r26, r1
    1d82:	b1 05       	cpc	r27, r1
    1d84:	39 f0       	breq	.+14     	; 0x1d94 <servoSetConfig+0x88>
    1d86:	86 ee       	ldi	r24, 0xE6	; 230
    1d88:	0e 94 db 10 	call	0x21b6	; 0x21b6 <setError>
    1d8c:	2f ef       	ldi	r18, 0xFF	; 255
    1d8e:	3f ef       	ldi	r19, 0xFF	; 255
    1d90:	40 e0       	ldi	r20, 0x00	; 0
    1d92:	50 e0       	ldi	r21, 0x00	; 0
    1d94:	3d 87       	std	Y+13, r19	; 0x0d
    1d96:	2c 87       	std	Y+12, r18	; 0x0c
    1d98:	0e 0d       	add	r16, r14
    1d9a:	1f 1d       	adc	r17, r15
    1d9c:	b8 01       	movw	r22, r16
    1d9e:	80 e0       	ldi	r24, 0x00	; 0
    1da0:	90 e0       	ldi	r25, 0x00	; 0
    1da2:	a6 01       	movw	r20, r12
    1da4:	95 01       	movw	r18, r10
    1da6:	0e 94 94 21 	call	0x4328	; 0x4328 <__mulsi3>
    1daa:	24 e1       	ldi	r18, 0x14	; 20
    1dac:	30 e0       	ldi	r19, 0x00	; 0
    1dae:	40 e0       	ldi	r20, 0x00	; 0
    1db0:	50 e0       	ldi	r21, 0x00	; 0
    1db2:	0e 94 c7 21 	call	0x438e	; 0x438e <__udivmodsi4>
    1db6:	c9 01       	movw	r24, r18
    1db8:	da 01       	movw	r26, r20
    1dba:	9c 01       	movw	r18, r24
    1dbc:	ad 01       	movw	r20, r26
    1dbe:	da 01       	movw	r26, r20
    1dc0:	c9 01       	movw	r24, r18
    1dc2:	80 70       	andi	r24, 0x00	; 0
    1dc4:	90 70       	andi	r25, 0x00	; 0
    1dc6:	00 97       	sbiw	r24, 0x00	; 0
    1dc8:	a1 05       	cpc	r26, r1
    1dca:	b1 05       	cpc	r27, r1
    1dcc:	39 f0       	breq	.+14     	; 0x1ddc <servoSetConfig+0xd0>
    1dce:	86 ee       	ldi	r24, 0xE6	; 230
    1dd0:	0e 94 db 10 	call	0x21b6	; 0x21b6 <setError>
    1dd4:	2f ef       	ldi	r18, 0xFF	; 255
    1dd6:	3f ef       	ldi	r19, 0xFF	; 255
    1dd8:	40 e0       	ldi	r20, 0x00	; 0
    1dda:	50 e0       	ldi	r21, 0x00	; 0
    1ddc:	3f 87       	std	Y+15, r19	; 0x0f
    1dde:	2e 87       	std	Y+14, r18	; 0x0e
    1de0:	8b 81       	ldd	r24, Y+3	; 0x03
    1de2:	80 ff       	sbrs	r24, 0
    1de4:	07 c0       	rjmp	.+14     	; 0x1df4 <servoSetConfig+0xe8>
    1de6:	6a 81       	ldd	r22, Y+2	; 0x02
    1de8:	61 50       	subi	r22, 0x01	; 1
    1dea:	6a 83       	std	Y+2, r22	; 0x02
    1dec:	6f 5f       	subi	r22, 0xFF	; 255
    1dee:	ce 01       	movw	r24, r28
    1df0:	0e 94 10 10 	call	0x2020	; 0x2020 <__act_setSpeed>
    1df4:	9f be       	out	0x3f, r9	; 63
    1df6:	df 91       	pop	r29
    1df8:	cf 91       	pop	r28
    1dfa:	1f 91       	pop	r17
    1dfc:	0f 91       	pop	r16
    1dfe:	ff 90       	pop	r15
    1e00:	ef 90       	pop	r14
    1e02:	df 90       	pop	r13
    1e04:	cf 90       	pop	r12
    1e06:	bf 90       	pop	r11
    1e08:	af 90       	pop	r10
    1e0a:	9f 90       	pop	r9
    1e0c:	08 95       	ret

00001e0e <_ZN6Stream5printEc>:
    1e0e:	1f 93       	push	r17
    1e10:	cf 93       	push	r28
    1e12:	df 93       	push	r29
    1e14:	ec 01       	movw	r28, r24
    1e16:	16 2f       	mov	r17, r22
    1e18:	6a 30       	cpi	r22, 0x0A	; 10
    1e1a:	39 f4       	brne	.+14     	; 0x1e2a <_ZN6Stream5printEc+0x1c>
    1e1c:	e8 81       	ld	r30, Y
    1e1e:	f9 81       	ldd	r31, Y+1	; 0x01
    1e20:	01 90       	ld	r0, Z+
    1e22:	f0 81       	ld	r31, Z
    1e24:	e0 2d       	mov	r30, r0
    1e26:	6d e0       	ldi	r22, 0x0D	; 13
    1e28:	09 95       	icall
    1e2a:	e8 81       	ld	r30, Y
    1e2c:	f9 81       	ldd	r31, Y+1	; 0x01
    1e2e:	01 90       	ld	r0, Z+
    1e30:	f0 81       	ld	r31, Z
    1e32:	e0 2d       	mov	r30, r0
    1e34:	ce 01       	movw	r24, r28
    1e36:	61 2f       	mov	r22, r17
    1e38:	09 95       	icall
    1e3a:	ce 01       	movw	r24, r28
    1e3c:	df 91       	pop	r29
    1e3e:	cf 91       	pop	r28
    1e40:	1f 91       	pop	r17
    1e42:	08 95       	ret

00001e44 <_ZN6Stream5printEdh>:
    1e44:	ef 92       	push	r14
    1e46:	ff 92       	push	r15
    1e48:	0f 93       	push	r16
    1e4a:	1f 93       	push	r17
    1e4c:	df 93       	push	r29
    1e4e:	cf 93       	push	r28
    1e50:	cd b7       	in	r28, 0x3d	; 61
    1e52:	de b7       	in	r29, 0x3e	; 62
    1e54:	a0 97       	sbiw	r28, 0x20	; 32
    1e56:	0f b6       	in	r0, 0x3f	; 63
    1e58:	f8 94       	cli
    1e5a:	de bf       	out	0x3e, r29	; 62
    1e5c:	0f be       	out	0x3f, r0	; 63
    1e5e:	cd bf       	out	0x3d, r28	; 61
    1e60:	f8 2e       	mov	r15, r24
    1e62:	e9 2e       	mov	r14, r25
    1e64:	cb 01       	movw	r24, r22
    1e66:	ba 01       	movw	r22, r20
    1e68:	4f ef       	ldi	r20, 0xFF	; 255
    1e6a:	8e 01       	movw	r16, r28
    1e6c:	0f 5f       	subi	r16, 0xFF	; 255
    1e6e:	1f 4f       	sbci	r17, 0xFF	; 255
    1e70:	0e 94 0d 1d 	call	0x3a1a	; 0x3a1a <dtostrf>
    1e74:	bc 01       	movw	r22, r24
    1e76:	8f 2d       	mov	r24, r15
    1e78:	9e 2d       	mov	r25, r14
    1e7a:	0e 94 a8 0f 	call	0x1f50	; 0x1f50 <_ZN6Stream5printEPKc>
    1e7e:	8f 2d       	mov	r24, r15
    1e80:	9e 2d       	mov	r25, r14
    1e82:	a0 96       	adiw	r28, 0x20	; 32
    1e84:	0f b6       	in	r0, 0x3f	; 63
    1e86:	f8 94       	cli
    1e88:	de bf       	out	0x3e, r29	; 62
    1e8a:	0f be       	out	0x3f, r0	; 63
    1e8c:	cd bf       	out	0x3d, r28	; 61
    1e8e:	cf 91       	pop	r28
    1e90:	df 91       	pop	r29
    1e92:	1f 91       	pop	r17
    1e94:	0f 91       	pop	r16
    1e96:	ff 90       	pop	r15
    1e98:	ef 90       	pop	r14
    1e9a:	08 95       	ret

00001e9c <_ZN6Stream5printElh>:
    1e9c:	0f 93       	push	r16
    1e9e:	1f 93       	push	r17
    1ea0:	df 93       	push	r29
    1ea2:	cf 93       	push	r28
    1ea4:	cd b7       	in	r28, 0x3d	; 61
    1ea6:	de b7       	in	r29, 0x3e	; 62
    1ea8:	a1 97       	sbiw	r28, 0x21	; 33
    1eaa:	0f b6       	in	r0, 0x3f	; 63
    1eac:	f8 94       	cli
    1eae:	de bf       	out	0x3e, r29	; 62
    1eb0:	0f be       	out	0x3f, r0	; 63
    1eb2:	cd bf       	out	0x3d, r28	; 61
    1eb4:	8c 01       	movw	r16, r24
    1eb6:	22 30       	cpi	r18, 0x02	; 2
    1eb8:	08 f4       	brcc	.+2      	; 0x1ebc <_ZN6Stream5printElh+0x20>
    1eba:	22 e0       	ldi	r18, 0x02	; 2
    1ebc:	cb 01       	movw	r24, r22
    1ebe:	ba 01       	movw	r22, r20
    1ec0:	ae 01       	movw	r20, r28
    1ec2:	4f 5f       	subi	r20, 0xFF	; 255
    1ec4:	5f 4f       	sbci	r21, 0xFF	; 255
    1ec6:	30 e0       	ldi	r19, 0x00	; 0
    1ec8:	0e 94 4a 1e 	call	0x3c94	; 0x3c94 <ltoa>
    1ecc:	bc 01       	movw	r22, r24
    1ece:	c8 01       	movw	r24, r16
    1ed0:	0e 94 a8 0f 	call	0x1f50	; 0x1f50 <_ZN6Stream5printEPKc>
    1ed4:	a1 96       	adiw	r28, 0x21	; 33
    1ed6:	0f b6       	in	r0, 0x3f	; 63
    1ed8:	f8 94       	cli
    1eda:	de bf       	out	0x3e, r29	; 62
    1edc:	0f be       	out	0x3f, r0	; 63
    1ede:	cd bf       	out	0x3d, r28	; 61
    1ee0:	cf 91       	pop	r28
    1ee2:	df 91       	pop	r29
    1ee4:	1f 91       	pop	r17
    1ee6:	0f 91       	pop	r16
    1ee8:	08 95       	ret

00001eea <_ZN6Stream5printEl>:
    1eea:	2a e0       	ldi	r18, 0x0A	; 10
    1eec:	0e 94 4e 0f 	call	0x1e9c	; 0x1e9c <_ZN6Stream5printElh>
    1ef0:	08 95       	ret

00001ef2 <_ZN6Stream5printEih>:
    1ef2:	ab 01       	movw	r20, r22
    1ef4:	66 27       	eor	r22, r22
    1ef6:	57 fd       	sbrc	r21, 7
    1ef8:	60 95       	com	r22
    1efa:	76 2f       	mov	r23, r22
    1efc:	0e 94 75 0f 	call	0x1eea	; 0x1eea <_ZN6Stream5printEl>
    1f00:	08 95       	ret

00001f02 <_ZN6Stream5printEi>:
    1f02:	ab 01       	movw	r20, r22
    1f04:	66 27       	eor	r22, r22
    1f06:	57 fd       	sbrc	r21, 7
    1f08:	60 95       	com	r22
    1f0a:	76 2f       	mov	r23, r22
    1f0c:	2a e0       	ldi	r18, 0x0A	; 10
    1f0e:	0e 94 4e 0f 	call	0x1e9c	; 0x1e9c <_ZN6Stream5printElh>
    1f12:	08 95       	ret

00001f14 <_ZN6Stream5printEa>:
    1f14:	46 2f       	mov	r20, r22
    1f16:	55 27       	eor	r21, r21
    1f18:	47 fd       	sbrc	r20, 7
    1f1a:	50 95       	com	r21
    1f1c:	65 2f       	mov	r22, r21
    1f1e:	75 2f       	mov	r23, r21
    1f20:	2a e0       	ldi	r18, 0x0A	; 10
    1f22:	0e 94 4e 0f 	call	0x1e9c	; 0x1e9c <_ZN6Stream5printElh>
    1f26:	08 95       	ret

00001f28 <_ZN6Stream5printEah>:
    1f28:	ef 92       	push	r14
    1f2a:	ff 92       	push	r15
    1f2c:	0f 93       	push	r16
    1f2e:	1f 93       	push	r17
    1f30:	e6 2e       	mov	r14, r22
    1f32:	24 2f       	mov	r18, r20
    1f34:	ff 24       	eor	r15, r15
    1f36:	e7 fc       	sbrc	r14, 7
    1f38:	f0 94       	com	r15
    1f3a:	0f 2d       	mov	r16, r15
    1f3c:	1f 2d       	mov	r17, r15
    1f3e:	b8 01       	movw	r22, r16
    1f40:	a7 01       	movw	r20, r14
    1f42:	0e 94 4e 0f 	call	0x1e9c	; 0x1e9c <_ZN6Stream5printElh>
    1f46:	1f 91       	pop	r17
    1f48:	0f 91       	pop	r16
    1f4a:	ff 90       	pop	r15
    1f4c:	ef 90       	pop	r14
    1f4e:	08 95       	ret

00001f50 <_ZN6Stream5printEPKc>:
    1f50:	0f 93       	push	r16
    1f52:	1f 93       	push	r17
    1f54:	cf 93       	push	r28
    1f56:	df 93       	push	r29
    1f58:	18 2f       	mov	r17, r24
    1f5a:	09 2f       	mov	r16, r25
    1f5c:	eb 01       	movw	r28, r22
    1f5e:	04 c0       	rjmp	.+8      	; 0x1f68 <_ZN6Stream5printEPKc+0x18>
    1f60:	81 2f       	mov	r24, r17
    1f62:	90 2f       	mov	r25, r16
    1f64:	0e 94 07 0f 	call	0x1e0e	; 0x1e0e <_ZN6Stream5printEc>
    1f68:	69 91       	ld	r22, Y+
    1f6a:	66 23       	and	r22, r22
    1f6c:	c9 f7       	brne	.-14     	; 0x1f60 <_ZN6Stream5printEPKc+0x10>
    1f6e:	81 2f       	mov	r24, r17
    1f70:	90 2f       	mov	r25, r16
    1f72:	df 91       	pop	r29
    1f74:	cf 91       	pop	r28
    1f76:	1f 91       	pop	r17
    1f78:	0f 91       	pop	r16
    1f7a:	08 95       	ret

00001f7c <_ZN6Stream5printEmh>:
    1f7c:	0f 93       	push	r16
    1f7e:	1f 93       	push	r17
    1f80:	df 93       	push	r29
    1f82:	cf 93       	push	r28
    1f84:	cd b7       	in	r28, 0x3d	; 61
    1f86:	de b7       	in	r29, 0x3e	; 62
    1f88:	a1 97       	sbiw	r28, 0x21	; 33
    1f8a:	0f b6       	in	r0, 0x3f	; 63
    1f8c:	f8 94       	cli
    1f8e:	de bf       	out	0x3e, r29	; 62
    1f90:	0f be       	out	0x3f, r0	; 63
    1f92:	cd bf       	out	0x3d, r28	; 61
    1f94:	8c 01       	movw	r16, r24
    1f96:	22 30       	cpi	r18, 0x02	; 2
    1f98:	08 f4       	brcc	.+2      	; 0x1f9c <_ZN6Stream5printEmh+0x20>
    1f9a:	22 e0       	ldi	r18, 0x02	; 2
    1f9c:	cb 01       	movw	r24, r22
    1f9e:	ba 01       	movw	r22, r20
    1fa0:	ae 01       	movw	r20, r28
    1fa2:	4f 5f       	subi	r20, 0xFF	; 255
    1fa4:	5f 4f       	sbci	r21, 0xFF	; 255
    1fa6:	30 e0       	ldi	r19, 0x00	; 0
    1fa8:	0e 94 7e 1e 	call	0x3cfc	; 0x3cfc <ultoa>
    1fac:	bc 01       	movw	r22, r24
    1fae:	c8 01       	movw	r24, r16
    1fb0:	0e 94 a8 0f 	call	0x1f50	; 0x1f50 <_ZN6Stream5printEPKc>
    1fb4:	a1 96       	adiw	r28, 0x21	; 33
    1fb6:	0f b6       	in	r0, 0x3f	; 63
    1fb8:	f8 94       	cli
    1fba:	de bf       	out	0x3e, r29	; 62
    1fbc:	0f be       	out	0x3f, r0	; 63
    1fbe:	cd bf       	out	0x3d, r28	; 61
    1fc0:	cf 91       	pop	r28
    1fc2:	df 91       	pop	r29
    1fc4:	1f 91       	pop	r17
    1fc6:	0f 91       	pop	r16
    1fc8:	08 95       	ret

00001fca <_ZN6Stream5printEm>:
    1fca:	2a e0       	ldi	r18, 0x0A	; 10
    1fcc:	0e 94 be 0f 	call	0x1f7c	; 0x1f7c <_ZN6Stream5printEmh>
    1fd0:	08 95       	ret

00001fd2 <_ZN6Stream5printEjh>:
    1fd2:	ab 01       	movw	r20, r22
    1fd4:	60 e0       	ldi	r22, 0x00	; 0
    1fd6:	70 e0       	ldi	r23, 0x00	; 0
    1fd8:	0e 94 e5 0f 	call	0x1fca	; 0x1fca <_ZN6Stream5printEm>
    1fdc:	08 95       	ret

00001fde <_ZN6Stream5printEj>:
    1fde:	ab 01       	movw	r20, r22
    1fe0:	60 e0       	ldi	r22, 0x00	; 0
    1fe2:	70 e0       	ldi	r23, 0x00	; 0
    1fe4:	2a e0       	ldi	r18, 0x0A	; 10
    1fe6:	0e 94 be 0f 	call	0x1f7c	; 0x1f7c <_ZN6Stream5printEmh>
    1fea:	08 95       	ret

00001fec <_ZN6Stream5printEh>:
    1fec:	46 2f       	mov	r20, r22
    1fee:	50 e0       	ldi	r21, 0x00	; 0
    1ff0:	60 e0       	ldi	r22, 0x00	; 0
    1ff2:	70 e0       	ldi	r23, 0x00	; 0
    1ff4:	2a e0       	ldi	r18, 0x0A	; 10
    1ff6:	0e 94 be 0f 	call	0x1f7c	; 0x1f7c <_ZN6Stream5printEmh>
    1ffa:	08 95       	ret

00001ffc <_ZN6Stream5printEhh>:
    1ffc:	ef 92       	push	r14
    1ffe:	ff 92       	push	r15
    2000:	0f 93       	push	r16
    2002:	1f 93       	push	r17
    2004:	24 2f       	mov	r18, r20
    2006:	e6 2e       	mov	r14, r22
    2008:	ff 24       	eor	r15, r15
    200a:	00 e0       	ldi	r16, 0x00	; 0
    200c:	10 e0       	ldi	r17, 0x00	; 0
    200e:	b8 01       	movw	r22, r16
    2010:	a7 01       	movw	r20, r14
    2012:	0e 94 be 0f 	call	0x1f7c	; 0x1f7c <_ZN6Stream5printEmh>
    2016:	1f 91       	pop	r17
    2018:	0f 91       	pop	r16
    201a:	ff 90       	pop	r15
    201c:	ef 90       	pop	r14
    201e:	08 95       	ret

00002020 <__act_setSpeed>:
    2020:	1f 93       	push	r17
    2022:	cf 93       	push	r28
    2024:	df 93       	push	r29
    2026:	ec 01       	movw	r28, r24
    2028:	16 2f       	mov	r17, r22
    202a:	61 38       	cpi	r22, 0x81	; 129
    202c:	0c f4       	brge	.+2      	; 0x2030 <__act_setSpeed+0x10>
    202e:	11 e8       	ldi	r17, 0x81	; 129
    2030:	e8 81       	ld	r30, Y
    2032:	f9 81       	ldd	r31, Y+1	; 0x01
    2034:	30 97       	sbiw	r30, 0x00	; 0
    2036:	79 f0       	breq	.+30     	; 0x2056 <__act_setSpeed+0x36>
    2038:	25 91       	lpm	r18, Z+
    203a:	34 91       	lpm	r19, Z+
    203c:	21 15       	cp	r18, r1
    203e:	31 05       	cpc	r19, r1
    2040:	51 f0       	breq	.+20     	; 0x2056 <__act_setSpeed+0x36>
    2042:	8b 81       	ldd	r24, Y+3	; 0x03
    2044:	81 fd       	sbrc	r24, 1
    2046:	02 c0       	rjmp	.+4      	; 0x204c <__act_setSpeed+0x2c>
    2048:	61 2f       	mov	r22, r17
    204a:	02 c0       	rjmp	.+4      	; 0x2050 <__act_setSpeed+0x30>
    204c:	61 2f       	mov	r22, r17
    204e:	61 95       	neg	r22
    2050:	ce 01       	movw	r24, r28
    2052:	f9 01       	movw	r30, r18
    2054:	09 95       	icall
    2056:	1a 83       	std	Y+2, r17	; 0x02
    2058:	df 91       	pop	r29
    205a:	cf 91       	pop	r28
    205c:	1f 91       	pop	r17
    205e:	08 95       	ret

00002060 <__act_setConnected>:
    2060:	dc 01       	movw	r26, r24
    2062:	96 2f       	mov	r25, r22
    2064:	91 70       	andi	r25, 0x01	; 1
    2066:	13 96       	adiw	r26, 0x03	; 3
    2068:	8c 91       	ld	r24, X
    206a:	13 97       	sbiw	r26, 0x03	; 3
    206c:	8e 7f       	andi	r24, 0xFE	; 254
    206e:	89 2b       	or	r24, r25
    2070:	13 96       	adiw	r26, 0x03	; 3
    2072:	8c 93       	st	X, r24
    2074:	13 97       	sbiw	r26, 0x03	; 3
    2076:	8d 91       	ld	r24, X+
    2078:	9c 91       	ld	r25, X
    207a:	11 97       	sbiw	r26, 0x01	; 1
    207c:	00 97       	sbiw	r24, 0x00	; 0
    207e:	51 f0       	breq	.+20     	; 0x2094 <__act_setConnected+0x34>
    2080:	fc 01       	movw	r30, r24
    2082:	32 96       	adiw	r30, 0x02	; 2
    2084:	25 91       	lpm	r18, Z+
    2086:	34 91       	lpm	r19, Z+
    2088:	21 15       	cp	r18, r1
    208a:	31 05       	cpc	r19, r1
    208c:	19 f0       	breq	.+6      	; 0x2094 <__act_setConnected+0x34>
    208e:	cd 01       	movw	r24, r26
    2090:	f9 01       	movw	r30, r18
    2092:	09 95       	icall
    2094:	08 95       	ret

00002096 <interpolate>:
    2096:	4f 92       	push	r4
    2098:	5f 92       	push	r5
    209a:	6f 92       	push	r6
    209c:	7f 92       	push	r7
    209e:	8f 92       	push	r8
    20a0:	9f 92       	push	r9
    20a2:	af 92       	push	r10
    20a4:	bf 92       	push	r11
    20a6:	cf 92       	push	r12
    20a8:	df 92       	push	r13
    20aa:	ef 92       	push	r14
    20ac:	ff 92       	push	r15
    20ae:	0f 93       	push	r16
    20b0:	1f 93       	push	r17
    20b2:	2b 01       	movw	r4, r22
    20b4:	3a 01       	movw	r6, r20
    20b6:	59 01       	movw	r10, r18
    20b8:	78 01       	movw	r14, r16
    20ba:	e2 1a       	sub	r14, r18
    20bc:	f3 0a       	sbc	r15, r19
    20be:	00 27       	eor	r16, r16
    20c0:	f7 fc       	sbrc	r15, 7
    20c2:	00 95       	com	r16
    20c4:	10 2f       	mov	r17, r16
    20c6:	9c 01       	movw	r18, r24
    20c8:	26 1b       	sub	r18, r22
    20ca:	37 0b       	sbc	r19, r23
    20cc:	44 27       	eor	r20, r20
    20ce:	37 fd       	sbrc	r19, 7
    20d0:	40 95       	com	r20
    20d2:	54 2f       	mov	r21, r20
    20d4:	c8 01       	movw	r24, r16
    20d6:	b7 01       	movw	r22, r14
    20d8:	0e 94 94 21 	call	0x4328	; 0x4328 <__mulsi3>
    20dc:	64 18       	sub	r6, r4
    20de:	75 08       	sbc	r7, r5
    20e0:	88 24       	eor	r8, r8
    20e2:	77 fc       	sbrc	r7, 7
    20e4:	80 94       	com	r8
    20e6:	98 2c       	mov	r9, r8
    20e8:	a4 01       	movw	r20, r8
    20ea:	93 01       	movw	r18, r6
    20ec:	0e 94 e9 21 	call	0x43d2	; 0x43d2 <__divmodsi4>
    20f0:	c9 01       	movw	r24, r18
    20f2:	da 01       	movw	r26, r20
    20f4:	cc 24       	eor	r12, r12
    20f6:	b7 fc       	sbrc	r11, 7
    20f8:	c0 94       	com	r12
    20fa:	dc 2c       	mov	r13, r12
    20fc:	a8 0e       	add	r10, r24
    20fe:	b9 1e       	adc	r11, r25
    2100:	ca 1e       	adc	r12, r26
    2102:	db 1e       	adc	r13, r27
    2104:	c5 01       	movw	r24, r10
    2106:	1f 91       	pop	r17
    2108:	0f 91       	pop	r16
    210a:	ff 90       	pop	r15
    210c:	ef 90       	pop	r14
    210e:	df 90       	pop	r13
    2110:	cf 90       	pop	r12
    2112:	bf 90       	pop	r11
    2114:	af 90       	pop	r10
    2116:	9f 90       	pop	r9
    2118:	8f 90       	pop	r8
    211a:	7f 90       	pop	r7
    211c:	6f 90       	pop	r6
    211e:	5f 90       	pop	r5
    2120:	4f 90       	pop	r4
    2122:	08 95       	ret

00002124 <interpolateU>:
    2124:	4f 92       	push	r4
    2126:	5f 92       	push	r5
    2128:	6f 92       	push	r6
    212a:	7f 92       	push	r7
    212c:	8f 92       	push	r8
    212e:	9f 92       	push	r9
    2130:	af 92       	push	r10
    2132:	bf 92       	push	r11
    2134:	cf 92       	push	r12
    2136:	df 92       	push	r13
    2138:	ef 92       	push	r14
    213a:	ff 92       	push	r15
    213c:	0f 93       	push	r16
    213e:	1f 93       	push	r17
    2140:	2b 01       	movw	r4, r22
    2142:	5a 01       	movw	r10, r20
    2144:	39 01       	movw	r6, r18
    2146:	78 01       	movw	r14, r16
    2148:	e2 1a       	sub	r14, r18
    214a:	f3 0a       	sbc	r15, r19
    214c:	00 e0       	ldi	r16, 0x00	; 0
    214e:	10 e0       	ldi	r17, 0x00	; 0
    2150:	9c 01       	movw	r18, r24
    2152:	26 1b       	sub	r18, r22
    2154:	37 0b       	sbc	r19, r23
    2156:	44 27       	eor	r20, r20
    2158:	37 fd       	sbrc	r19, 7
    215a:	40 95       	com	r20
    215c:	54 2f       	mov	r21, r20
    215e:	c8 01       	movw	r24, r16
    2160:	b7 01       	movw	r22, r14
    2162:	0e 94 94 21 	call	0x4328	; 0x4328 <__mulsi3>
    2166:	a4 18       	sub	r10, r4
    2168:	b5 08       	sbc	r11, r5
    216a:	cc 24       	eor	r12, r12
    216c:	b7 fc       	sbrc	r11, 7
    216e:	c0 94       	com	r12
    2170:	dc 2c       	mov	r13, r12
    2172:	a6 01       	movw	r20, r12
    2174:	95 01       	movw	r18, r10
    2176:	0e 94 e9 21 	call	0x43d2	; 0x43d2 <__divmodsi4>
    217a:	88 24       	eor	r8, r8
    217c:	99 24       	eor	r9, r9
    217e:	26 0d       	add	r18, r6
    2180:	37 1d       	adc	r19, r7
    2182:	48 1d       	adc	r20, r8
    2184:	59 1d       	adc	r21, r9
    2186:	c9 01       	movw	r24, r18
    2188:	1f 91       	pop	r17
    218a:	0f 91       	pop	r16
    218c:	ff 90       	pop	r15
    218e:	ef 90       	pop	r14
    2190:	df 90       	pop	r13
    2192:	cf 90       	pop	r12
    2194:	bf 90       	pop	r11
    2196:	af 90       	pop	r10
    2198:	9f 90       	pop	r9
    219a:	8f 90       	pop	r8
    219c:	7f 90       	pop	r7
    219e:	6f 90       	pop	r6
    21a0:	5f 90       	pop	r5
    21a2:	4f 90       	pop	r4
    21a4:	08 95       	ret

000021a6 <getError>:
    21a6:	80 91 ec 0f 	lds	r24, 0x0FEC
    21aa:	08 95       	ret

000021ac <setErrorLog>:
    21ac:	90 93 f0 0f 	sts	0x0FF0, r25
    21b0:	80 93 ef 0f 	sts	0x0FEF, r24
    21b4:	08 95       	ret

000021b6 <setError>:
    21b6:	1f 93       	push	r17
    21b8:	18 2f       	mov	r17, r24
    21ba:	80 91 ec 0f 	lds	r24, 0x0FEC
    21be:	88 23       	and	r24, r24
    21c0:	09 f0       	breq	.+2      	; 0x21c4 <setError+0xe>
    21c2:	5a c0       	rjmp	.+180    	; 0x2278 <__stack+0x79>
    21c4:	10 93 ec 0f 	sts	0x0FEC, r17
    21c8:	80 91 f1 0f 	lds	r24, 0x0FF1
    21cc:	90 91 f2 0f 	lds	r25, 0x0FF2
    21d0:	00 97       	sbiw	r24, 0x00	; 0
    21d2:	49 f0       	breq	.+18     	; 0x21e6 <setError+0x30>
    21d4:	0e 94 3e 11 	call	0x227c	; 0x227c <pin_is_output>
    21d8:	88 23       	and	r24, r24
    21da:	29 f0       	breq	.+10     	; 0x21e6 <setError+0x30>
    21dc:	81 ef       	ldi	r24, 0xF1	; 241
    21de:	9f e0       	ldi	r25, 0x0F	; 15
    21e0:	60 e0       	ldi	r22, 0x00	; 0
    21e2:	0e 94 a1 11 	call	0x2342	; 0x2342 <LED_set>
    21e6:	80 91 fc 0f 	lds	r24, 0x0FFC
    21ea:	90 91 fd 0f 	lds	r25, 0x0FFD
    21ee:	00 97       	sbiw	r24, 0x00	; 0
    21f0:	09 f4       	brne	.+2      	; 0x21f4 <setError+0x3e>
    21f2:	42 c0       	rjmp	.+132    	; 0x2278 <__stack+0x79>
    21f4:	17 ff       	sbrs	r17, 7
    21f6:	12 c0       	rjmp	.+36     	; 0x221c <__stack+0x1d>
    21f8:	00 d0       	rcall	.+0      	; 0x21fa <setError+0x44>
    21fa:	00 d0       	rcall	.+0      	; 0x21fc <setError+0x46>
    21fc:	ad b7       	in	r26, 0x3d	; 61
    21fe:	be b7       	in	r27, 0x3e	; 62
    2200:	12 96       	adiw	r26, 0x02	; 2
    2202:	9c 93       	st	X, r25
    2204:	8e 93       	st	-X, r24
    2206:	11 97       	sbiw	r26, 0x01	; 1
    2208:	87 e0       	ldi	r24, 0x07	; 7
    220a:	94 e0       	ldi	r25, 0x04	; 4
    220c:	14 96       	adiw	r26, 0x04	; 4
    220e:	9c 93       	st	X, r25
    2210:	8e 93       	st	-X, r24
    2212:	13 97       	sbiw	r26, 0x03	; 3
    2214:	0e 94 a3 1e 	call	0x3d46	; 0x3d46 <fprintf_P>
    2218:	11 95       	neg	r17
    221a:	0c c0       	rjmp	.+24     	; 0x2234 <__stack+0x35>
    221c:	00 d0       	rcall	.+0      	; 0x221e <__stack+0x1f>
    221e:	00 d0       	rcall	.+0      	; 0x2220 <__stack+0x21>
    2220:	ed b7       	in	r30, 0x3d	; 61
    2222:	fe b7       	in	r31, 0x3e	; 62
    2224:	92 83       	std	Z+2, r25	; 0x02
    2226:	81 83       	std	Z+1, r24	; 0x01
    2228:	82 e0       	ldi	r24, 0x02	; 2
    222a:	94 e0       	ldi	r25, 0x04	; 4
    222c:	94 83       	std	Z+4, r25	; 0x04
    222e:	83 83       	std	Z+3, r24	; 0x03
    2230:	0e 94 a3 1e 	call	0x3d46	; 0x3d46 <fprintf_P>
    2234:	00 d0       	rcall	.+0      	; 0x2236 <__stack+0x37>
    2236:	ed b7       	in	r30, 0x3d	; 61
    2238:	fe b7       	in	r31, 0x3e	; 62
    223a:	31 96       	adiw	r30, 0x01	; 1
    223c:	80 91 fc 0f 	lds	r24, 0x0FFC
    2240:	90 91 fd 0f 	lds	r25, 0x0FFD
    2244:	ad b7       	in	r26, 0x3d	; 61
    2246:	be b7       	in	r27, 0x3e	; 62
    2248:	12 96       	adiw	r26, 0x02	; 2
    224a:	9c 93       	st	X, r25
    224c:	8e 93       	st	-X, r24
    224e:	11 97       	sbiw	r26, 0x01	; 1
    2250:	86 ef       	ldi	r24, 0xF6	; 246
    2252:	93 e0       	ldi	r25, 0x03	; 3
    2254:	93 83       	std	Z+3, r25	; 0x03
    2256:	82 83       	std	Z+2, r24	; 0x02
    2258:	81 2f       	mov	r24, r17
    225a:	99 27       	eor	r25, r25
    225c:	87 fd       	sbrc	r24, 7
    225e:	90 95       	com	r25
    2260:	95 83       	std	Z+5, r25	; 0x05
    2262:	84 83       	std	Z+4, r24	; 0x04
    2264:	0e 94 a3 1e 	call	0x3d46	; 0x3d46 <fprintf_P>
    2268:	ed b7       	in	r30, 0x3d	; 61
    226a:	fe b7       	in	r31, 0x3e	; 62
    226c:	36 96       	adiw	r30, 0x06	; 6
    226e:	0f b6       	in	r0, 0x3f	; 63
    2270:	f8 94       	cli
    2272:	fe bf       	out	0x3e, r31	; 62
    2274:	0f be       	out	0x3f, r0	; 63
    2276:	ed bf       	out	0x3d, r30	; 61
    2278:	1f 91       	pop	r17
    227a:	08 95       	ret

0000227c <pin_is_output>:
    227c:	9c 01       	movw	r18, r24
    227e:	00 97       	sbiw	r24, 0x00	; 0
    2280:	81 f0       	breq	.+32     	; 0x22a2 <pin_is_output+0x26>
    2282:	fc 01       	movw	r30, r24
    2284:	85 91       	lpm	r24, Z+
    2286:	94 91       	lpm	r25, Z+
    2288:	02 96       	adiw	r24, 0x02	; 2
    228a:	fc 01       	movw	r30, r24
    228c:	a5 91       	lpm	r26, Z+
    228e:	b4 91       	lpm	r27, Z+
    2290:	2e 5f       	subi	r18, 0xFE	; 254
    2292:	3f 4f       	sbci	r19, 0xFF	; 255
    2294:	f9 01       	movw	r30, r18
    2296:	94 91       	lpm	r25, Z+
    2298:	8c 91       	ld	r24, X
    229a:	89 23       	and	r24, r25
    229c:	11 f0       	breq	.+4      	; 0x22a2 <pin_is_output+0x26>
    229e:	8f ef       	ldi	r24, 0xFF	; 255
    22a0:	08 95       	ret
    22a2:	80 e0       	ldi	r24, 0x00	; 0
    22a4:	08 95       	ret

000022a6 <pin_make_input>:
    22a6:	cf 93       	push	r28
    22a8:	df 93       	push	r29
    22aa:	9c 01       	movw	r18, r24
    22ac:	00 97       	sbiw	r24, 0x00	; 0
    22ae:	f9 f0       	breq	.+62     	; 0x22ee <pin_make_input+0x48>
    22b0:	fc 01       	movw	r30, r24
    22b2:	45 91       	lpm	r20, Z+
    22b4:	54 91       	lpm	r21, Z+
    22b6:	ca 01       	movw	r24, r20
    22b8:	02 96       	adiw	r24, 0x02	; 2
    22ba:	fc 01       	movw	r30, r24
    22bc:	a5 91       	lpm	r26, Z+
    22be:	b4 91       	lpm	r27, Z+
    22c0:	fa 01       	movw	r30, r20
    22c2:	c5 91       	lpm	r28, Z+
    22c4:	d4 91       	lpm	r29, Z+
    22c6:	2e 5f       	subi	r18, 0xFE	; 254
    22c8:	3f 4f       	sbci	r19, 0xFF	; 255
    22ca:	f9 01       	movw	r30, r18
    22cc:	94 91       	lpm	r25, Z+
    22ce:	3f b7       	in	r19, 0x3f	; 63
    22d0:	f8 94       	cli
    22d2:	8c 91       	ld	r24, X
    22d4:	29 2f       	mov	r18, r25
    22d6:	20 95       	com	r18
    22d8:	82 23       	and	r24, r18
    22da:	8c 93       	st	X, r24
    22dc:	66 23       	and	r22, r22
    22de:	19 f0       	breq	.+6      	; 0x22e6 <pin_make_input+0x40>
    22e0:	88 81       	ld	r24, Y
    22e2:	89 2b       	or	r24, r25
    22e4:	02 c0       	rjmp	.+4      	; 0x22ea <pin_make_input+0x44>
    22e6:	88 81       	ld	r24, Y
    22e8:	82 23       	and	r24, r18
    22ea:	88 83       	st	Y, r24
    22ec:	3f bf       	out	0x3f, r19	; 63
    22ee:	df 91       	pop	r29
    22f0:	cf 91       	pop	r28
    22f2:	08 95       	ret

000022f4 <pin_make_output>:
    22f4:	cf 93       	push	r28
    22f6:	df 93       	push	r29
    22f8:	9c 01       	movw	r18, r24
    22fa:	00 97       	sbiw	r24, 0x00	; 0
    22fc:	f9 f0       	breq	.+62     	; 0x233c <pin_make_output+0x48>
    22fe:	fc 01       	movw	r30, r24
    2300:	45 91       	lpm	r20, Z+
    2302:	54 91       	lpm	r21, Z+
    2304:	ca 01       	movw	r24, r20
    2306:	02 96       	adiw	r24, 0x02	; 2
    2308:	fc 01       	movw	r30, r24
    230a:	c5 91       	lpm	r28, Z+
    230c:	d4 91       	lpm	r29, Z+
    230e:	fa 01       	movw	r30, r20
    2310:	a5 91       	lpm	r26, Z+
    2312:	b4 91       	lpm	r27, Z+
    2314:	2e 5f       	subi	r18, 0xFE	; 254
    2316:	3f 4f       	sbci	r19, 0xFF	; 255
    2318:	f9 01       	movw	r30, r18
    231a:	24 91       	lpm	r18, Z+
    231c:	3f b7       	in	r19, 0x3f	; 63
    231e:	f8 94       	cli
    2320:	66 23       	and	r22, r22
    2322:	19 f0       	breq	.+6      	; 0x232a <pin_make_output+0x36>
    2324:	8c 91       	ld	r24, X
    2326:	82 2b       	or	r24, r18
    2328:	04 c0       	rjmp	.+8      	; 0x2332 <pin_make_output+0x3e>
    232a:	8c 91       	ld	r24, X
    232c:	92 2f       	mov	r25, r18
    232e:	90 95       	com	r25
    2330:	89 23       	and	r24, r25
    2332:	8c 93       	st	X, r24
    2334:	88 81       	ld	r24, Y
    2336:	82 2b       	or	r24, r18
    2338:	88 83       	st	Y, r24
    233a:	3f bf       	out	0x3f, r19	; 63
    233c:	df 91       	pop	r29
    233e:	cf 91       	pop	r28
    2340:	08 95       	ret

00002342 <LED_set>:
    2342:	1f 93       	push	r17
    2344:	cf 93       	push	r28
    2346:	df 93       	push	r29
    2348:	ec 01       	movw	r28, r24
    234a:	16 2f       	mov	r17, r22
    234c:	88 81       	ld	r24, Y
    234e:	99 81       	ldd	r25, Y+1	; 0x01
    2350:	00 97       	sbiw	r24, 0x00	; 0
    2352:	a9 f0       	breq	.+42     	; 0x237e <LED_set+0x3c>
    2354:	3a 81       	ldd	r19, Y+2	; 0x02
    2356:	30 fd       	sbrc	r19, 0
    2358:	05 c0       	rjmp	.+10     	; 0x2364 <LED_set+0x22>
    235a:	20 e0       	ldi	r18, 0x00	; 0
    235c:	66 23       	and	r22, r22
    235e:	09 f4       	brne	.+2      	; 0x2362 <LED_set+0x20>
    2360:	21 e0       	ldi	r18, 0x01	; 1
    2362:	12 2f       	mov	r17, r18
    2364:	31 fd       	sbrc	r19, 1
    2366:	06 c0       	rjmp	.+12     	; 0x2374 <LED_set+0x32>
    2368:	61 2f       	mov	r22, r17
    236a:	0e 94 7a 11 	call	0x22f4	; 0x22f4 <pin_make_output>
    236e:	8a 81       	ldd	r24, Y+2	; 0x02
    2370:	82 60       	ori	r24, 0x02	; 2
    2372:	8a 83       	std	Y+2, r24	; 0x02
    2374:	88 81       	ld	r24, Y
    2376:	99 81       	ldd	r25, Y+1	; 0x01
    2378:	61 2f       	mov	r22, r17
    237a:	0e 94 b2 18 	call	0x3164	; 0x3164 <pin_set>
    237e:	df 91       	pop	r29
    2380:	cf 91       	pop	r28
    2382:	1f 91       	pop	r17
    2384:	08 95       	ret

00002386 <main>:
    2386:	0e 94 5f 0b 	call	0x16be	; 0x16be <registerLED>
    238a:	f8 94       	cli
    238c:	0e 94 5a 0d 	call	0x1ab4	; 0x1ab4 <__initTimers>
    2390:	0e 94 ee 0a 	call	0x15dc	; 0x15dc <__clockInit>
    2394:	78 94       	sei
    2396:	0e 94 79 0b 	call	0x16f2	; 0x16f2 <sysInitHardware>
    239a:	0e 94 b8 04 	call	0x970	; 0x970 <appInitHardware>
    239e:	0e 94 d1 0a 	call	0x15a2	; 0x15a2 <clockGetus>
    23a2:	60 93 d3 0f 	sts	0x0FD3, r22
    23a6:	70 93 d4 0f 	sts	0x0FD4, r23
    23aa:	80 93 d5 0f 	sts	0x0FD5, r24
    23ae:	90 93 d6 0f 	sts	0x0FD6, r25
    23b2:	0e 94 86 03 	call	0x70c	; 0x70c <appInitSoftware>
    23b6:	60 93 d7 0f 	sts	0x0FD7, r22
    23ba:	70 93 d8 0f 	sts	0x0FD8, r23
    23be:	80 93 d9 0f 	sts	0x0FD9, r24
    23c2:	90 93 da 0f 	sts	0x0FDA, r25
    23c6:	78 94       	sei
    23c8:	0e 94 5e 18 	call	0x30bc	; 0x30bc <breathe>
    23cc:	80 91 d7 0f 	lds	r24, 0x0FD7
    23d0:	90 91 d8 0f 	lds	r25, 0x0FD8
    23d4:	a0 91 d9 0f 	lds	r26, 0x0FD9
    23d8:	b0 91 da 0f 	lds	r27, 0x0FDA
    23dc:	00 97       	sbiw	r24, 0x00	; 0
    23de:	a1 05       	cpc	r26, r1
    23e0:	b1 05       	cpc	r27, r1
    23e2:	19 f4       	brne	.+6      	; 0x23ea <main+0x64>
    23e4:	16 c0       	rjmp	.+44     	; 0x2412 <main+0x8c>
    23e6:	0e 94 5e 18 	call	0x30bc	; 0x30bc <breathe>
    23ea:	60 91 d3 0f 	lds	r22, 0x0FD3
    23ee:	70 91 d4 0f 	lds	r23, 0x0FD4
    23f2:	80 91 d5 0f 	lds	r24, 0x0FD5
    23f6:	90 91 d6 0f 	lds	r25, 0x0FD6
    23fa:	20 91 d7 0f 	lds	r18, 0x0FD7
    23fe:	30 91 d8 0f 	lds	r19, 0x0FD8
    2402:	40 91 d9 0f 	lds	r20, 0x0FD9
    2406:	50 91 da 0f 	lds	r21, 0x0FDA
    240a:	0e 94 13 18 	call	0x3026	; 0x3026 <clockHasElapsed>
    240e:	88 23       	and	r24, r24
    2410:	51 f3       	breq	.-44     	; 0x23e6 <main+0x60>
    2412:	0e 94 d1 0a 	call	0x15a2	; 0x15a2 <clockGetus>
    2416:	9b 01       	movw	r18, r22
    2418:	ac 01       	movw	r20, r24
    241a:	60 93 d3 0f 	sts	0x0FD3, r22
    241e:	70 93 d4 0f 	sts	0x0FD4, r23
    2422:	80 93 d5 0f 	sts	0x0FD5, r24
    2426:	90 93 d6 0f 	sts	0x0FD6, r25
    242a:	60 91 cf 0f 	lds	r22, 0x0FCF
    242e:	70 91 d0 0f 	lds	r23, 0x0FD0
    2432:	80 91 d1 0f 	lds	r24, 0x0FD1
    2436:	90 91 d2 0f 	lds	r25, 0x0FD2
    243a:	6f 5f       	subi	r22, 0xFF	; 255
    243c:	7f 4f       	sbci	r23, 0xFF	; 255
    243e:	8f 4f       	sbci	r24, 0xFF	; 255
    2440:	9f 4f       	sbci	r25, 0xFF	; 255
    2442:	60 93 cf 0f 	sts	0x0FCF, r22
    2446:	70 93 d0 0f 	sts	0x0FD0, r23
    244a:	80 93 d1 0f 	sts	0x0FD1, r24
    244e:	90 93 d2 0f 	sts	0x0FD2, r25
    2452:	0e 94 fe 05 	call	0xbfc	; 0xbfc <appControl>
    2456:	af cf       	rjmp	.-162    	; 0x23b6 <main+0x30>

00002458 <rprintfIgnore>:
    2458:	90 e0       	ldi	r25, 0x00	; 0
    245a:	08 95       	ret

0000245c <rprintfInit>:
    245c:	4f b7       	in	r20, 0x3f	; 63
    245e:	f8 94       	cli
    2460:	20 91 62 05 	lds	r18, 0x0562
    2464:	30 91 63 05 	lds	r19, 0x0563
    2468:	90 93 63 05 	sts	0x0563, r25
    246c:	80 93 62 05 	sts	0x0562, r24
    2470:	4f bf       	out	0x3f, r20	; 63
    2472:	c9 01       	movw	r24, r18
    2474:	08 95       	ret

00002476 <rprintfChar>:
    2476:	1f 93       	push	r17
    2478:	18 2f       	mov	r17, r24
    247a:	8a 30       	cpi	r24, 0x0A	; 10
    247c:	31 f4       	brne	.+12     	; 0x248a <rprintfChar+0x14>
    247e:	e0 91 62 05 	lds	r30, 0x0562
    2482:	f0 91 63 05 	lds	r31, 0x0563
    2486:	8d e0       	ldi	r24, 0x0D	; 13
    2488:	09 95       	icall
    248a:	e0 91 62 05 	lds	r30, 0x0562
    248e:	f0 91 63 05 	lds	r31, 0x0563
    2492:	81 2f       	mov	r24, r17
    2494:	09 95       	icall
    2496:	1f 91       	pop	r17
    2498:	08 95       	ret

0000249a <rprintfCRLF>:
    249a:	8a e0       	ldi	r24, 0x0A	; 10
    249c:	0e 94 3b 12 	call	0x2476	; 0x2476 <rprintfChar>
    24a0:	08 95       	ret

000024a2 <marqueeSendByte>:
    24a2:	cf 92       	push	r12
    24a4:	df 92       	push	r13
    24a6:	ef 92       	push	r14
    24a8:	ff 92       	push	r15
    24aa:	0f 93       	push	r16
    24ac:	1f 93       	push	r17
    24ae:	cf 93       	push	r28
    24b0:	df 93       	push	r29
    24b2:	ec 01       	movw	r28, r24
    24b4:	d6 2e       	mov	r13, r22
    24b6:	8c 81       	ldd	r24, Y+4	; 0x04
    24b8:	9d 81       	ldd	r25, Y+5	; 0x05
    24ba:	89 2b       	or	r24, r25
    24bc:	a9 f5       	brne	.+106    	; 0x2528 <marqueeSendByte+0x86>
    24be:	8a 85       	ldd	r24, Y+10	; 0x0a
    24c0:	9b 85       	ldd	r25, Y+11	; 0x0b
    24c2:	01 96       	adiw	r24, 0x01	; 1
    24c4:	0e 94 2e 1d 	call	0x3a5c	; 0x3a5c <malloc>
    24c8:	9d 83       	std	Y+5, r25	; 0x05
    24ca:	8c 83       	std	Y+4, r24	; 0x04
    24cc:	00 97       	sbiw	r24, 0x00	; 0
    24ce:	61 f1       	breq	.+88     	; 0x2528 <marqueeSendByte+0x86>
    24d0:	20 e0       	ldi	r18, 0x00	; 0
    24d2:	30 e0       	ldi	r19, 0x00	; 0
    24d4:	07 c0       	rjmp	.+14     	; 0x24e4 <marqueeSendByte+0x42>
    24d6:	ec 81       	ldd	r30, Y+4	; 0x04
    24d8:	fd 81       	ldd	r31, Y+5	; 0x05
    24da:	e2 0f       	add	r30, r18
    24dc:	f3 1f       	adc	r31, r19
    24de:	10 82       	st	Z, r1
    24e0:	2f 5f       	subi	r18, 0xFF	; 255
    24e2:	3f 4f       	sbci	r19, 0xFF	; 255
    24e4:	8a 85       	ldd	r24, Y+10	; 0x0a
    24e6:	9b 85       	ldd	r25, Y+11	; 0x0b
    24e8:	82 17       	cp	r24, r18
    24ea:	93 07       	cpc	r25, r19
    24ec:	a0 f7       	brcc	.-24     	; 0x24d6 <marqueeSendByte+0x34>
    24ee:	19 86       	std	Y+9, r1	; 0x09
    24f0:	18 86       	std	Y+8, r1	; 0x08
    24f2:	1f 82       	std	Y+7, r1	; 0x07
    24f4:	1e 82       	std	Y+6, r1	; 0x06
    24f6:	8c 89       	ldd	r24, Y+20	; 0x14
    24f8:	8e 7f       	andi	r24, 0xFE	; 254
    24fa:	8c 8b       	std	Y+20, r24	; 0x14
    24fc:	00 e0       	ldi	r16, 0x00	; 0
    24fe:	10 e0       	ldi	r17, 0x00	; 0
    2500:	0e c0       	rjmp	.+28     	; 0x251e <marqueeSendByte+0x7c>
    2502:	c8 01       	movw	r24, r16
    2504:	88 0f       	add	r24, r24
    2506:	99 1f       	adc	r25, r25
    2508:	e8 81       	ld	r30, Y
    250a:	f9 81       	ldd	r31, Y+1	; 0x01
    250c:	e8 0f       	add	r30, r24
    250e:	f9 1f       	adc	r31, r25
    2510:	85 91       	lpm	r24, Z+
    2512:	94 91       	lpm	r25, Z+
    2514:	60 e2       	ldi	r22, 0x20	; 32
    2516:	0e 94 ae 13 	call	0x275c	; 0x275c <segled_put_char>
    251a:	0f 5f       	subi	r16, 0xFF	; 255
    251c:	1f 4f       	sbci	r17, 0xFF	; 255
    251e:	8a 81       	ldd	r24, Y+2	; 0x02
    2520:	9b 81       	ldd	r25, Y+3	; 0x03
    2522:	08 17       	cp	r16, r24
    2524:	19 07       	cpc	r17, r25
    2526:	68 f3       	brcs	.-38     	; 0x2502 <marqueeSendByte+0x60>
    2528:	ec 81       	ldd	r30, Y+4	; 0x04
    252a:	fd 81       	ldd	r31, Y+5	; 0x05
    252c:	30 97       	sbiw	r30, 0x00	; 0
    252e:	09 f4       	brne	.+2      	; 0x2532 <marqueeSendByte+0x90>
    2530:	3e c0       	rjmp	.+124    	; 0x25ae <marqueeSendByte+0x10c>
    2532:	8a e0       	ldi	r24, 0x0A	; 10
    2534:	d8 16       	cp	r13, r24
    2536:	19 f5       	brne	.+70     	; 0x257e <marqueeSendByte+0xdc>
    2538:	88 85       	ldd	r24, Y+8	; 0x08
    253a:	99 85       	ldd	r25, Y+9	; 0x09
    253c:	e8 0f       	add	r30, r24
    253e:	f9 1f       	adc	r31, r25
    2540:	10 82       	st	Z, r1
    2542:	19 86       	std	Y+9, r1	; 0x09
    2544:	18 86       	std	Y+8, r1	; 0x08
    2546:	cf b6       	in	r12, 0x3f	; 63
    2548:	f8 94       	cli
    254a:	8c 89       	ldd	r24, Y+20	; 0x14
    254c:	80 fd       	sbrc	r24, 0
    254e:	15 c0       	rjmp	.+42     	; 0x257a <marqueeSendByte+0xd8>
    2550:	8c 89       	ldd	r24, Y+20	; 0x14
    2552:	81 60       	ori	r24, 0x01	; 1
    2554:	8c 8b       	std	Y+20, r24	; 0x14
    2556:	8c 89       	ldd	r24, Y+20	; 0x14
    2558:	8d 7f       	andi	r24, 0xFD	; 253
    255a:	8c 8b       	std	Y+20, r24	; 0x14
    255c:	1f 82       	std	Y+7, r1	; 0x07
    255e:	1e 82       	std	Y+6, r1	; 0x06
    2560:	0e 94 d1 0a 	call	0x15a2	; 0x15a2 <clockGetus>
    2564:	9b 01       	movw	r18, r22
    2566:	ac 01       	movw	r20, r24
    2568:	ec 84       	ldd	r14, Y+12	; 0x0c
    256a:	fd 84       	ldd	r15, Y+13	; 0x0d
    256c:	0e 85       	ldd	r16, Y+14	; 0x0e
    256e:	1f 85       	ldd	r17, Y+15	; 0x0f
    2570:	81 ee       	ldi	r24, 0xE1	; 225
    2572:	92 e1       	ldi	r25, 0x12	; 18
    2574:	be 01       	movw	r22, r28
    2576:	0e 94 ce 19 	call	0x339c	; 0x339c <scheduleJob>
    257a:	cf be       	out	0x3f, r12	; 63
    257c:	18 c0       	rjmp	.+48     	; 0x25ae <marqueeSendByte+0x10c>
    257e:	8d e0       	ldi	r24, 0x0D	; 13
    2580:	d8 16       	cp	r13, r24
    2582:	a9 f0       	breq	.+42     	; 0x25ae <marqueeSendByte+0x10c>
    2584:	28 85       	ldd	r18, Y+8	; 0x08
    2586:	39 85       	ldd	r19, Y+9	; 0x09
    2588:	8a 85       	ldd	r24, Y+10	; 0x0a
    258a:	9b 85       	ldd	r25, Y+11	; 0x0b
    258c:	28 17       	cp	r18, r24
    258e:	39 07       	cpc	r19, r25
    2590:	70 f4       	brcc	.+28     	; 0x25ae <marqueeSendByte+0x10c>
    2592:	e2 0f       	add	r30, r18
    2594:	f3 1f       	adc	r31, r19
    2596:	2f b7       	in	r18, 0x3f	; 63
    2598:	f8 94       	cli
    259a:	d0 82       	st	Z, r13
    259c:	11 82       	std	Z+1, r1	; 0x01
    259e:	88 85       	ldd	r24, Y+8	; 0x08
    25a0:	99 85       	ldd	r25, Y+9	; 0x09
    25a2:	01 96       	adiw	r24, 0x01	; 1
    25a4:	99 87       	std	Y+9, r25	; 0x09
    25a6:	88 87       	std	Y+8, r24	; 0x08
    25a8:	1f 82       	std	Y+7, r1	; 0x07
    25aa:	1e 82       	std	Y+6, r1	; 0x06
    25ac:	2f bf       	out	0x3f, r18	; 63
    25ae:	8d 2d       	mov	r24, r13
    25b0:	df 91       	pop	r29
    25b2:	cf 91       	pop	r28
    25b4:	1f 91       	pop	r17
    25b6:	0f 91       	pop	r16
    25b8:	ff 90       	pop	r15
    25ba:	ef 90       	pop	r14
    25bc:	df 90       	pop	r13
    25be:	cf 90       	pop	r12
    25c0:	08 95       	ret

000025c2 <marqueeUpdate>:
    25c2:	2f 92       	push	r2
    25c4:	3f 92       	push	r3
    25c6:	4f 92       	push	r4
    25c8:	5f 92       	push	r5
    25ca:	6f 92       	push	r6
    25cc:	7f 92       	push	r7
    25ce:	8f 92       	push	r8
    25d0:	9f 92       	push	r9
    25d2:	af 92       	push	r10
    25d4:	bf 92       	push	r11
    25d6:	cf 92       	push	r12
    25d8:	df 92       	push	r13
    25da:	ef 92       	push	r14
    25dc:	ff 92       	push	r15
    25de:	0f 93       	push	r16
    25e0:	1f 93       	push	r17
    25e2:	cf 93       	push	r28
    25e4:	df 93       	push	r29
    25e6:	38 2e       	mov	r3, r24
    25e8:	29 2e       	mov	r2, r25
    25ea:	2a 01       	movw	r4, r20
    25ec:	3b 01       	movw	r6, r22
    25ee:	c8 2f       	mov	r28, r24
    25f0:	d9 2f       	mov	r29, r25
    25f2:	0c 81       	ldd	r16, Y+4	; 0x04
    25f4:	1d 81       	ldd	r17, Y+5	; 0x05
    25f6:	8e 81       	ldd	r24, Y+6	; 0x06
    25f8:	9f 81       	ldd	r25, Y+7	; 0x07
    25fa:	08 0f       	add	r16, r24
    25fc:	19 1f       	adc	r17, r25
    25fe:	f8 01       	movw	r30, r16
    2600:	80 80       	ld	r8, Z
    2602:	8c 89       	ldd	r24, Y+20	; 0x14
    2604:	86 95       	lsr	r24
    2606:	81 70       	andi	r24, 0x01	; 1
    2608:	88 20       	and	r8, r8
    260a:	29 f4       	brne	.+10     	; 0x2616 <marqueeUpdate+0x54>
    260c:	a8 88       	ldd	r10, Y+16	; 0x10
    260e:	b9 88       	ldd	r11, Y+17	; 0x11
    2610:	ca 88       	ldd	r12, Y+18	; 0x12
    2612:	db 88       	ldd	r13, Y+19	; 0x13
    2614:	04 c0       	rjmp	.+8      	; 0x261e <marqueeUpdate+0x5c>
    2616:	ac 84       	ldd	r10, Y+12	; 0x0c
    2618:	bd 84       	ldd	r11, Y+13	; 0x0d
    261a:	ce 84       	ldd	r12, Y+14	; 0x0e
    261c:	df 84       	ldd	r13, Y+15	; 0x0f
    261e:	88 23       	and	r24, r24
    2620:	d1 f4       	brne	.+52     	; 0x2656 <marqueeUpdate+0x94>
    2622:	88 20       	and	r8, r8
    2624:	c1 f0       	breq	.+48     	; 0x2656 <marqueeUpdate+0x94>
    2626:	f8 01       	movw	r30, r16
    2628:	32 91       	ld	r19, -Z
    262a:	8f 01       	movw	r16, r30
    262c:	0f 5f       	subi	r16, 0xFF	; 255
    262e:	1f 4f       	sbci	r17, 0xFF	; 255
    2630:	4a 81       	ldd	r20, Y+2	; 0x02
    2632:	5b 81       	ldd	r21, Y+3	; 0x03
    2634:	f8 01       	movw	r30, r16
    2636:	80 e0       	ldi	r24, 0x00	; 0
    2638:	90 e0       	ldi	r25, 0x00	; 0
    263a:	07 c0       	rjmp	.+14     	; 0x264a <marqueeUpdate+0x88>
    263c:	20 81       	ld	r18, Z
    263e:	22 23       	and	r18, r18
    2640:	51 f0       	breq	.+20     	; 0x2656 <marqueeUpdate+0x94>
    2642:	23 17       	cp	r18, r19
    2644:	41 f4       	brne	.+16     	; 0x2656 <marqueeUpdate+0x94>
    2646:	31 96       	adiw	r30, 0x01	; 1
    2648:	01 96       	adiw	r24, 0x01	; 1
    264a:	84 17       	cp	r24, r20
    264c:	95 07       	cpc	r25, r21
    264e:	b0 f3       	brcs	.-20     	; 0x263c <marqueeUpdate+0x7a>
    2650:	99 24       	eor	r9, r9
    2652:	9a 94       	dec	r9
    2654:	01 c0       	rjmp	.+2      	; 0x2658 <marqueeUpdate+0x96>
    2656:	99 24       	eor	r9, r9
    2658:	8c 89       	ldd	r24, Y+20	; 0x14
    265a:	86 95       	lsr	r24
    265c:	81 70       	andi	r24, 0x01	; 1
    265e:	29 2d       	mov	r18, r9
    2660:	33 27       	eor	r19, r19
    2662:	27 fd       	sbrc	r18, 7
    2664:	30 95       	com	r19
    2666:	90 e0       	ldi	r25, 0x00	; 0
    2668:	28 17       	cp	r18, r24
    266a:	39 07       	cpc	r19, r25
    266c:	c1 f0       	breq	.+48     	; 0x269e <marqueeUpdate+0xdc>
    266e:	a6 01       	movw	r20, r12
    2670:	95 01       	movw	r18, r10
    2672:	62 e0       	ldi	r22, 0x02	; 2
    2674:	56 95       	lsr	r21
    2676:	47 95       	ror	r20
    2678:	37 95       	ror	r19
    267a:	27 95       	ror	r18
    267c:	6a 95       	dec	r22
    267e:	d1 f7       	brne	.-12     	; 0x2674 <marqueeUpdate+0xb2>
    2680:	99 2d       	mov	r25, r9
    2682:	92 70       	andi	r25, 0x02	; 2
    2684:	8c 89       	ldd	r24, Y+20	; 0x14
    2686:	8d 7f       	andi	r24, 0xFD	; 253
    2688:	89 2b       	or	r24, r25
    268a:	8c 8b       	std	Y+20, r24	; 0x14
    268c:	99 20       	and	r9, r9
    268e:	19 f0       	breq	.+6      	; 0x2696 <marqueeUpdate+0xd4>
    2690:	59 01       	movw	r10, r18
    2692:	6a 01       	movw	r12, r20
    2694:	04 c0       	rjmp	.+8      	; 0x269e <marqueeUpdate+0xdc>
    2696:	a2 1a       	sub	r10, r18
    2698:	b3 0a       	sbc	r11, r19
    269a:	c4 0a       	sbc	r12, r20
    269c:	d5 0a       	sbc	r13, r21
    269e:	ee 24       	eor	r14, r14
    26a0:	ff 24       	eor	r15, r15
    26a2:	18 c0       	rjmp	.+48     	; 0x26d4 <marqueeUpdate+0x112>
    26a4:	c7 01       	movw	r24, r14
    26a6:	88 0f       	add	r24, r24
    26a8:	99 1f       	adc	r25, r25
    26aa:	e8 81       	ld	r30, Y
    26ac:	f9 81       	ldd	r31, Y+1	; 0x01
    26ae:	e8 0f       	add	r30, r24
    26b0:	f9 1f       	adc	r31, r25
    26b2:	85 91       	lpm	r24, Z+
    26b4:	94 91       	lpm	r25, Z+
    26b6:	99 20       	and	r9, r9
    26b8:	39 f4       	brne	.+14     	; 0x26c8 <marqueeUpdate+0x106>
    26ba:	f8 01       	movw	r30, r16
    26bc:	60 81       	ld	r22, Z
    26be:	66 23       	and	r22, r22
    26c0:	19 f0       	breq	.+6      	; 0x26c8 <marqueeUpdate+0x106>
    26c2:	0f 5f       	subi	r16, 0xFF	; 255
    26c4:	1f 4f       	sbci	r17, 0xFF	; 255
    26c6:	01 c0       	rjmp	.+2      	; 0x26ca <marqueeUpdate+0x108>
    26c8:	60 e2       	ldi	r22, 0x20	; 32
    26ca:	0e 94 ae 13 	call	0x275c	; 0x275c <segled_put_char>
    26ce:	08 94       	sec
    26d0:	e1 1c       	adc	r14, r1
    26d2:	f1 1c       	adc	r15, r1
    26d4:	8a 81       	ldd	r24, Y+2	; 0x02
    26d6:	9b 81       	ldd	r25, Y+3	; 0x03
    26d8:	e8 16       	cp	r14, r24
    26da:	f9 06       	cpc	r15, r25
    26dc:	18 f3       	brcs	.-58     	; 0x26a4 <marqueeUpdate+0xe2>
    26de:	88 20       	and	r8, r8
    26e0:	b1 f4       	brne	.+44     	; 0x270e <marqueeUpdate+0x14c>
    26e2:	1f 82       	std	Y+7, r1	; 0x07
    26e4:	1e 82       	std	Y+6, r1	; 0x06
    26e6:	88 89       	ldd	r24, Y+16	; 0x10
    26e8:	99 89       	ldd	r25, Y+17	; 0x11
    26ea:	aa 89       	ldd	r26, Y+18	; 0x12
    26ec:	bb 89       	ldd	r27, Y+19	; 0x13
    26ee:	00 97       	sbiw	r24, 0x00	; 0
    26f0:	a1 05       	cpc	r26, r1
    26f2:	b1 05       	cpc	r27, r1
    26f4:	29 f0       	breq	.+10     	; 0x2700 <marqueeUpdate+0x13e>
    26f6:	ec 81       	ldd	r30, Y+4	; 0x04
    26f8:	fd 81       	ldd	r31, Y+5	; 0x05
    26fa:	80 81       	ld	r24, Z
    26fc:	88 23       	and	r24, r24
    26fe:	19 f4       	brne	.+6      	; 0x2706 <marqueeUpdate+0x144>
    2700:	8c 89       	ldd	r24, Y+20	; 0x14
    2702:	8e 7f       	andi	r24, 0xFE	; 254
    2704:	02 c0       	rjmp	.+4      	; 0x270a <marqueeUpdate+0x148>
    2706:	8c 89       	ldd	r24, Y+20	; 0x14
    2708:	8d 7f       	andi	r24, 0xFD	; 253
    270a:	8c 8b       	std	Y+20, r24	; 0x14
    270c:	07 c0       	rjmp	.+14     	; 0x271c <marqueeUpdate+0x15a>
    270e:	99 20       	and	r9, r9
    2710:	29 f4       	brne	.+10     	; 0x271c <marqueeUpdate+0x15a>
    2712:	8e 81       	ldd	r24, Y+6	; 0x06
    2714:	9f 81       	ldd	r25, Y+7	; 0x07
    2716:	01 96       	adiw	r24, 0x01	; 1
    2718:	9f 83       	std	Y+7, r25	; 0x07
    271a:	8e 83       	std	Y+6, r24	; 0x06
    271c:	8c 89       	ldd	r24, Y+20	; 0x14
    271e:	80 ff       	sbrs	r24, 0
    2720:	0a c0       	rjmp	.+20     	; 0x2736 <marqueeUpdate+0x174>
    2722:	81 ee       	ldi	r24, 0xE1	; 225
    2724:	92 e1       	ldi	r25, 0x12	; 18
    2726:	63 2d       	mov	r22, r3
    2728:	72 2d       	mov	r23, r2
    272a:	a3 01       	movw	r20, r6
    272c:	92 01       	movw	r18, r4
    272e:	86 01       	movw	r16, r12
    2730:	75 01       	movw	r14, r10
    2732:	0e 94 ce 19 	call	0x339c	; 0x339c <scheduleJob>
    2736:	df 91       	pop	r29
    2738:	cf 91       	pop	r28
    273a:	1f 91       	pop	r17
    273c:	0f 91       	pop	r16
    273e:	ff 90       	pop	r15
    2740:	ef 90       	pop	r14
    2742:	df 90       	pop	r13
    2744:	cf 90       	pop	r12
    2746:	bf 90       	pop	r11
    2748:	af 90       	pop	r10
    274a:	9f 90       	pop	r9
    274c:	8f 90       	pop	r8
    274e:	7f 90       	pop	r7
    2750:	6f 90       	pop	r6
    2752:	5f 90       	pop	r5
    2754:	4f 90       	pop	r4
    2756:	3f 90       	pop	r3
    2758:	2f 90       	pop	r2
    275a:	08 95       	ret

0000275c <segled_put_char>:
    275c:	ef 92       	push	r14
    275e:	ff 92       	push	r15
    2760:	0f 93       	push	r16
    2762:	1f 93       	push	r17
    2764:	cf 93       	push	r28
    2766:	df 93       	push	r29
    2768:	8c 01       	movw	r16, r24
    276a:	e6 2e       	mov	r14, r22
    276c:	fc 01       	movw	r30, r24
    276e:	80 89       	ldd	r24, Z+16	; 0x10
    2770:	81 fd       	sbrc	r24, 1
    2772:	12 c0       	rjmp	.+36     	; 0x2798 <segled_put_char+0x3c>
    2774:	c0 e0       	ldi	r28, 0x00	; 0
    2776:	d0 e0       	ldi	r29, 0x00	; 0
    2778:	f8 01       	movw	r30, r16
    277a:	ec 0f       	add	r30, r28
    277c:	fd 1f       	adc	r31, r29
    277e:	80 81       	ld	r24, Z
    2780:	91 81       	ldd	r25, Z+1	; 0x01
    2782:	60 e0       	ldi	r22, 0x00	; 0
    2784:	0e 94 7a 11 	call	0x22f4	; 0x22f4 <pin_make_output>
    2788:	22 96       	adiw	r28, 0x02	; 2
    278a:	c0 31       	cpi	r28, 0x10	; 16
    278c:	d1 05       	cpc	r29, r1
    278e:	a1 f7       	brne	.-24     	; 0x2778 <segled_put_char+0x1c>
    2790:	f8 01       	movw	r30, r16
    2792:	80 89       	ldd	r24, Z+16	; 0x10
    2794:	82 60       	ori	r24, 0x02	; 2
    2796:	80 8b       	std	Z+16, r24	; 0x10
    2798:	8e 2d       	mov	r24, r14
    279a:	0e 94 34 14 	call	0x2868	; 0x2868 <segled8_get_mask>
    279e:	f8 2e       	mov	r15, r24
    27a0:	80 ff       	sbrs	r24, 0
    27a2:	07 c0       	rjmp	.+14     	; 0x27b2 <segled_put_char+0x56>
    27a4:	f8 01       	movw	r30, r16
    27a6:	86 85       	ldd	r24, Z+14	; 0x0e
    27a8:	97 85       	ldd	r25, Z+15	; 0x0f
    27aa:	89 2b       	or	r24, r25
    27ac:	11 f4       	brne	.+4      	; 0x27b2 <segled_put_char+0x56>
    27ae:	80 e1       	ldi	r24, 0x10	; 16
    27b0:	f8 2e       	mov	r15, r24
    27b2:	f8 01       	movw	r30, r16
    27b4:	80 89       	ldd	r24, Z+16	; 0x10
    27b6:	80 ff       	sbrs	r24, 0
    27b8:	f0 94       	com	r15
    27ba:	c0 e0       	ldi	r28, 0x00	; 0
    27bc:	d0 e0       	ldi	r29, 0x00	; 0
    27be:	f8 01       	movw	r30, r16
    27c0:	ec 0f       	add	r30, r28
    27c2:	fd 1f       	adc	r31, r29
    27c4:	80 81       	ld	r24, Z
    27c6:	91 81       	ldd	r25, Z+1	; 0x01
    27c8:	f7 fe       	sbrs	r15, 7
    27ca:	03 c0       	rjmp	.+6      	; 0x27d2 <segled_put_char+0x76>
    27cc:	0e 94 8e 18 	call	0x311c	; 0x311c <pin_high>
    27d0:	02 c0       	rjmp	.+4      	; 0x27d6 <segled_put_char+0x7a>
    27d2:	0e 94 69 18 	call	0x30d2	; 0x30d2 <pin_low>
    27d6:	22 96       	adiw	r28, 0x02	; 2
    27d8:	c0 31       	cpi	r28, 0x10	; 16
    27da:	d1 05       	cpc	r29, r1
    27dc:	11 f0       	breq	.+4      	; 0x27e2 <segled_put_char+0x86>
    27de:	ff 0c       	add	r15, r15
    27e0:	ee cf       	rjmp	.-36     	; 0x27be <segled_put_char+0x62>
    27e2:	8e 2d       	mov	r24, r14
    27e4:	df 91       	pop	r29
    27e6:	cf 91       	pop	r28
    27e8:	1f 91       	pop	r17
    27ea:	0f 91       	pop	r16
    27ec:	ff 90       	pop	r15
    27ee:	ef 90       	pop	r14
    27f0:	08 95       	ret

000027f2 <segled_set>:
    27f2:	ef 92       	push	r14
    27f4:	ff 92       	push	r15
    27f6:	0f 93       	push	r16
    27f8:	1f 93       	push	r17
    27fa:	cf 93       	push	r28
    27fc:	df 93       	push	r29
    27fe:	8c 01       	movw	r16, r24
    2800:	e6 2e       	mov	r14, r22
    2802:	f4 2e       	mov	r15, r20
    2804:	fc 01       	movw	r30, r24
    2806:	80 89       	ldd	r24, Z+16	; 0x10
    2808:	81 fd       	sbrc	r24, 1
    280a:	12 c0       	rjmp	.+36     	; 0x2830 <segled_set+0x3e>
    280c:	c0 e0       	ldi	r28, 0x00	; 0
    280e:	d0 e0       	ldi	r29, 0x00	; 0
    2810:	f8 01       	movw	r30, r16
    2812:	ec 0f       	add	r30, r28
    2814:	fd 1f       	adc	r31, r29
    2816:	80 81       	ld	r24, Z
    2818:	91 81       	ldd	r25, Z+1	; 0x01
    281a:	60 e0       	ldi	r22, 0x00	; 0
    281c:	0e 94 7a 11 	call	0x22f4	; 0x22f4 <pin_make_output>
    2820:	22 96       	adiw	r28, 0x02	; 2
    2822:	c0 31       	cpi	r28, 0x10	; 16
    2824:	d1 05       	cpc	r29, r1
    2826:	a1 f7       	brne	.-24     	; 0x2810 <segled_set+0x1e>
    2828:	f8 01       	movw	r30, r16
    282a:	80 89       	ldd	r24, Z+16	; 0x10
    282c:	82 60       	ori	r24, 0x02	; 2
    282e:	80 8b       	std	Z+16, r24	; 0x10
    2830:	f8 01       	movw	r30, r16
    2832:	80 89       	ldd	r24, Z+16	; 0x10
    2834:	80 fd       	sbrc	r24, 0
    2836:	06 c0       	rjmp	.+12     	; 0x2844 <segled_set+0x52>
    2838:	ff 20       	and	r15, r15
    283a:	19 f4       	brne	.+6      	; 0x2842 <segled_set+0x50>
    283c:	ff 24       	eor	r15, r15
    283e:	fa 94       	dec	r15
    2840:	01 c0       	rjmp	.+2      	; 0x2844 <segled_set+0x52>
    2842:	ff 24       	eor	r15, r15
    2844:	ee 2d       	mov	r30, r14
    2846:	f0 e0       	ldi	r31, 0x00	; 0
    2848:	ee 0f       	add	r30, r30
    284a:	ff 1f       	adc	r31, r31
    284c:	e0 0f       	add	r30, r16
    284e:	f1 1f       	adc	r31, r17
    2850:	80 81       	ld	r24, Z
    2852:	91 81       	ldd	r25, Z+1	; 0x01
    2854:	6f 2d       	mov	r22, r15
    2856:	0e 94 b2 18 	call	0x3164	; 0x3164 <pin_set>
    285a:	df 91       	pop	r29
    285c:	cf 91       	pop	r28
    285e:	1f 91       	pop	r17
    2860:	0f 91       	pop	r16
    2862:	ff 90       	pop	r15
    2864:	ef 90       	pop	r14
    2866:	08 95       	ret

00002868 <segled8_get_mask>:
    2868:	e8 2f       	mov	r30, r24
    286a:	81 54       	subi	r24, 0x41	; 65
    286c:	8a 31       	cpi	r24, 0x1A	; 26
    286e:	28 f4       	brcc	.+10     	; 0x287a <segled8_get_mask+0x12>
    2870:	f0 e0       	ldi	r31, 0x00	; 0
    2872:	e0 53       	subi	r30, 0x30	; 48
    2874:	fc 4f       	sbci	r31, 0xFC	; 252
    2876:	84 91       	lpm	r24, Z+
    2878:	08 95       	ret
    287a:	8e 2f       	mov	r24, r30
    287c:	81 56       	subi	r24, 0x61	; 97
    287e:	8a 31       	cpi	r24, 0x1A	; 26
    2880:	28 f4       	brcc	.+10     	; 0x288c <segled8_get_mask+0x24>
    2882:	f0 e0       	ldi	r31, 0x00	; 0
    2884:	e0 55       	subi	r30, 0x50	; 80
    2886:	fc 4f       	sbci	r31, 0xFC	; 252
    2888:	84 91       	lpm	r24, Z+
    288a:	08 95       	ret
    288c:	8e 2f       	mov	r24, r30
    288e:	80 53       	subi	r24, 0x30	; 48
    2890:	8a 30       	cpi	r24, 0x0A	; 10
    2892:	28 f4       	brcc	.+10     	; 0x289e <segled8_get_mask+0x36>
    2894:	f0 e0       	ldi	r31, 0x00	; 0
    2896:	e5 50       	subi	r30, 0x05	; 5
    2898:	fc 4f       	sbci	r31, 0xFC	; 252
    289a:	84 91       	lpm	r24, Z+
    289c:	08 95       	ret
    289e:	ea 30       	cpi	r30, 0x0A	; 10
    28a0:	28 f4       	brcc	.+10     	; 0x28ac <segled8_get_mask+0x44>
    28a2:	f0 e0       	ldi	r31, 0x00	; 0
    28a4:	e5 5d       	subi	r30, 0xD5	; 213
    28a6:	fb 4f       	sbci	r31, 0xFB	; 251
    28a8:	84 91       	lpm	r24, Z+
    28aa:	08 95       	ret
    28ac:	ed 32       	cpi	r30, 0x2D	; 45
    28ae:	11 f4       	brne	.+4      	; 0x28b4 <segled8_get_mask+0x4c>
    28b0:	82 e0       	ldi	r24, 0x02	; 2
    28b2:	08 95       	ret
    28b4:	eb 35       	cpi	r30, 0x5B	; 91
    28b6:	79 f0       	breq	.+30     	; 0x28d6 <segled8_get_mask+0x6e>
    28b8:	eb 37       	cpi	r30, 0x7B	; 123
    28ba:	69 f0       	breq	.+26     	; 0x28d6 <segled8_get_mask+0x6e>
    28bc:	e8 32       	cpi	r30, 0x28	; 40
    28be:	59 f0       	breq	.+22     	; 0x28d6 <segled8_get_mask+0x6e>
    28c0:	ed 35       	cpi	r30, 0x5D	; 93
    28c2:	59 f0       	breq	.+22     	; 0x28da <segled8_get_mask+0x72>
    28c4:	ed 37       	cpi	r30, 0x7D	; 125
    28c6:	49 f0       	breq	.+18     	; 0x28da <segled8_get_mask+0x72>
    28c8:	e9 32       	cpi	r30, 0x29	; 41
    28ca:	39 f0       	breq	.+14     	; 0x28da <segled8_get_mask+0x72>
    28cc:	80 e0       	ldi	r24, 0x00	; 0
    28ce:	ee 32       	cpi	r30, 0x2E	; 46
    28d0:	29 f4       	brne	.+10     	; 0x28dc <segled8_get_mask+0x74>
    28d2:	81 e0       	ldi	r24, 0x01	; 1
    28d4:	08 95       	ret
    28d6:	8c e9       	ldi	r24, 0x9C	; 156
    28d8:	08 95       	ret
    28da:	80 ef       	ldi	r24, 0xF0	; 240
    28dc:	08 95       	ret

000028de <compareFromIOPin>:
    28de:	bf 92       	push	r11
    28e0:	cf 92       	push	r12
    28e2:	df 92       	push	r13
    28e4:	ef 92       	push	r14
    28e6:	ff 92       	push	r15
    28e8:	0f 93       	push	r16
    28ea:	1f 93       	push	r17
    28ec:	cf 93       	push	r28
    28ee:	df 93       	push	r29
    28f0:	6c 01       	movw	r12, r24
    28f2:	b0 90 91 03 	lds	r11, 0x0391
    28f6:	2b ef       	ldi	r18, 0xFB	; 251
    28f8:	31 e0       	ldi	r19, 0x01	; 1
    28fa:	90 e0       	ldi	r25, 0x00	; 0
    28fc:	c0 e0       	ldi	r28, 0x00	; 0
    28fe:	d0 e0       	ldi	r29, 0x00	; 0
    2900:	2d c0       	rjmp	.+90     	; 0x295c <compareFromIOPin+0x7e>
    2902:	28 5f       	subi	r18, 0xF8	; 248
    2904:	3f 4f       	sbci	r19, 0xFF	; 255
    2906:	f9 01       	movw	r30, r18
    2908:	e4 90       	lpm	r14, Z+
    290a:	28 50       	subi	r18, 0x08	; 8
    290c:	30 40       	sbci	r19, 0x00	; 0
    290e:	f9 01       	movw	r30, r18
    2910:	78 96       	adiw	r30, 0x18	; 24
    2912:	29 5f       	subi	r18, 0xF9	; 249
    2914:	3f 4f       	sbci	r19, 0xFF	; 255
    2916:	80 e0       	ldi	r24, 0x00	; 0
    2918:	a0 e0       	ldi	r26, 0x00	; 0
    291a:	b0 e0       	ldi	r27, 0x00	; 0
    291c:	05 91       	lpm	r16, Z+
    291e:	14 91       	lpm	r17, Z+
    2920:	f9 01       	movw	r30, r18
    2922:	f4 90       	lpm	r15, Z+
    2924:	27 50       	subi	r18, 0x07	; 7
    2926:	30 40       	sbci	r19, 0x00	; 0
    2928:	14 c0       	rjmp	.+40     	; 0x2952 <compareFromIOPin+0x74>
    292a:	b8 01       	movw	r22, r16
    292c:	6a 0f       	add	r22, r26
    292e:	7b 1f       	adc	r23, r27
    2930:	fb 01       	movw	r30, r22
    2932:	3e 96       	adiw	r30, 0x0e	; 14
    2934:	45 91       	lpm	r20, Z+
    2936:	54 91       	lpm	r21, Z+
    2938:	41 15       	cp	r20, r1
    293a:	51 05       	cpc	r21, r1
    293c:	41 f0       	breq	.+16     	; 0x294e <compareFromIOPin+0x70>
    293e:	4c 15       	cp	r20, r12
    2940:	5d 05       	cpc	r21, r13
    2942:	29 f4       	brne	.+10     	; 0x294e <compareFromIOPin+0x70>
    2944:	ff 20       	and	r15, r15
    2946:	11 f0       	breq	.+4      	; 0x294c <compareFromIOPin+0x6e>
    2948:	eb 01       	movw	r28, r22
    294a:	0a c0       	rjmp	.+20     	; 0x2960 <compareFromIOPin+0x82>
    294c:	eb 01       	movw	r28, r22
    294e:	8f 5f       	subi	r24, 0xFF	; 255
    2950:	50 96       	adiw	r26, 0x10	; 16
    2952:	8e 15       	cp	r24, r14
    2954:	50 f3       	brcs	.-44     	; 0x292a <compareFromIOPin+0x4c>
    2956:	9f 5f       	subi	r25, 0xFF	; 255
    2958:	21 5d       	subi	r18, 0xD1	; 209
    295a:	3f 4f       	sbci	r19, 0xFF	; 255
    295c:	9b 15       	cp	r25, r11
    295e:	88 f2       	brcs	.-94     	; 0x2902 <compareFromIOPin+0x24>
    2960:	ce 01       	movw	r24, r28
    2962:	df 91       	pop	r29
    2964:	cf 91       	pop	r28
    2966:	1f 91       	pop	r17
    2968:	0f 91       	pop	r16
    296a:	ff 90       	pop	r15
    296c:	ef 90       	pop	r14
    296e:	df 90       	pop	r13
    2970:	cf 90       	pop	r12
    2972:	bf 90       	pop	r11
    2974:	08 95       	ret

00002976 <compareSetOutputMode>:
    2976:	9c 01       	movw	r18, r24
    2978:	0b 96       	adiw	r24, 0x0b	; 11
    297a:	fc 01       	movw	r30, r24
    297c:	a5 91       	lpm	r26, Z+
    297e:	b4 91       	lpm	r27, Z+
    2980:	23 5f       	subi	r18, 0xF3	; 243
    2982:	3f 4f       	sbci	r19, 0xFF	; 255
    2984:	f9 01       	movw	r30, r18
    2986:	24 91       	lpm	r18, Z+
    2988:	70 e0       	ldi	r23, 0x00	; 0
    298a:	02 2e       	mov	r0, r18
    298c:	02 c0       	rjmp	.+4      	; 0x2992 <compareSetOutputMode+0x1c>
    298e:	66 0f       	add	r22, r22
    2990:	77 1f       	adc	r23, r23
    2992:	0a 94       	dec	r0
    2994:	e2 f7       	brpl	.-8      	; 0x298e <compareSetOutputMode+0x18>
    2996:	81 e0       	ldi	r24, 0x01	; 1
    2998:	90 e0       	ldi	r25, 0x00	; 0
    299a:	02 c0       	rjmp	.+4      	; 0x29a0 <compareSetOutputMode+0x2a>
    299c:	88 0f       	add	r24, r24
    299e:	99 1f       	adc	r25, r25
    29a0:	2a 95       	dec	r18
    29a2:	e2 f7       	brpl	.-8      	; 0x299c <compareSetOutputMode+0x26>
    29a4:	28 2f       	mov	r18, r24
    29a6:	22 0f       	add	r18, r18
    29a8:	28 2b       	or	r18, r24
    29aa:	9c 91       	ld	r25, X
    29ac:	82 2f       	mov	r24, r18
    29ae:	86 23       	and	r24, r22
    29b0:	20 95       	com	r18
    29b2:	29 23       	and	r18, r25
    29b4:	82 2b       	or	r24, r18
    29b6:	8c 93       	st	X, r24
    29b8:	08 95       	ret

000029ba <compareSetThreshold>:
    29ba:	cf 93       	push	r28
    29bc:	df 93       	push	r29
    29be:	9c 01       	movw	r18, r24
    29c0:	2e 5f       	subi	r18, 0xFE	; 254
    29c2:	3f 4f       	sbci	r19, 0xFF	; 255
    29c4:	f9 01       	movw	r30, r18
    29c6:	84 91       	lpm	r24, Z+
    29c8:	22 50       	subi	r18, 0x02	; 2
    29ca:	30 40       	sbci	r19, 0x00	; 0
    29cc:	9f e2       	ldi	r25, 0x2F	; 47
    29ce:	89 9f       	mul	r24, r25
    29d0:	a0 01       	movw	r20, r0
    29d2:	11 24       	eor	r1, r1
    29d4:	45 50       	subi	r20, 0x05	; 5
    29d6:	5e 4f       	sbci	r21, 0xFE	; 254
    29d8:	48 5f       	subi	r20, 0xF8	; 248
    29da:	5f 4f       	sbci	r21, 0xFF	; 255
    29dc:	fa 01       	movw	r30, r20
    29de:	84 91       	lpm	r24, Z+
    29e0:	48 50       	subi	r20, 0x08	; 8
    29e2:	50 40       	sbci	r21, 0x00	; 0
    29e4:	88 23       	and	r24, r24
    29e6:	c1 f0       	breq	.+48     	; 0x2a18 <compareSetThreshold+0x5e>
    29e8:	c9 01       	movw	r24, r18
    29ea:	06 96       	adiw	r24, 0x06	; 6
    29ec:	fc 01       	movw	r30, r24
    29ee:	c5 91       	lpm	r28, Z+
    29f0:	d4 91       	lpm	r29, Z+
    29f2:	fa 01       	movw	r30, r20
    29f4:	37 96       	adiw	r30, 0x07	; 7
    29f6:	e4 91       	lpm	r30, Z+
    29f8:	ee 23       	and	r30, r30
    29fa:	19 f0       	breq	.+6      	; 0x2a02 <compareSetThreshold+0x48>
    29fc:	79 83       	std	Y+1, r23	; 0x01
    29fe:	68 83       	st	Y, r22
    2a00:	0e c0       	rjmp	.+28     	; 0x2a1e <compareSetThreshold+0x64>
    2a02:	6f 3f       	cpi	r22, 0xFF	; 255
    2a04:	71 05       	cpc	r23, r1
    2a06:	31 f0       	breq	.+12     	; 0x2a14 <compareSetThreshold+0x5a>
    2a08:	28 f0       	brcs	.+10     	; 0x2a14 <compareSetThreshold+0x5a>
    2a0a:	8e ef       	ldi	r24, 0xFE	; 254
    2a0c:	0e 94 db 10 	call	0x21b6	; 0x21b6 <setError>
    2a10:	6f ef       	ldi	r22, 0xFF	; 255
    2a12:	70 e0       	ldi	r23, 0x00	; 0
    2a14:	68 83       	st	Y, r22
    2a16:	03 c0       	rjmp	.+6      	; 0x2a1e <compareSetThreshold+0x64>
    2a18:	8d ef       	ldi	r24, 0xFD	; 253
    2a1a:	0e 94 db 10 	call	0x21b6	; 0x21b6 <setError>
    2a1e:	df 91       	pop	r29
    2a20:	cf 91       	pop	r28
    2a22:	08 95       	ret

00002a24 <_uartSetBaudRate>:
    2a24:	dc 01       	movw	r26, r24
    2a26:	19 96       	adiw	r26, 0x09	; 9
    2a28:	8d 91       	ld	r24, X+
    2a2a:	9c 91       	ld	r25, X
    2a2c:	1a 97       	sbiw	r26, 0x0a	; 10
    2a2e:	fc 01       	movw	r30, r24
    2a30:	25 91       	lpm	r18, Z+
    2a32:	34 91       	lpm	r19, Z+
    2a34:	cd 01       	movw	r24, r26
    2a36:	f9 01       	movw	r30, r18
    2a38:	09 95       	icall
    2a3a:	08 95       	ret

00002a3c <_uartInit>:
    2a3c:	df 92       	push	r13
    2a3e:	ef 92       	push	r14
    2a40:	ff 92       	push	r15
    2a42:	0f 93       	push	r16
    2a44:	1f 93       	push	r17
    2a46:	cf 93       	push	r28
    2a48:	df 93       	push	r29
    2a4a:	ec 01       	movw	r28, r24
    2a4c:	7a 01       	movw	r14, r20
    2a4e:	8b 01       	movw	r16, r22
    2a50:	df b6       	in	r13, 0x3f	; 63
    2a52:	f8 94       	cli
    2a54:	2d 85       	ldd	r18, Y+13	; 0x0d
    2a56:	3e 85       	ldd	r19, Y+14	; 0x0e
    2a58:	8f 85       	ldd	r24, Y+15	; 0x0f
    2a5a:	98 89       	ldd	r25, Y+16	; 0x10
    2a5c:	28 17       	cp	r18, r24
    2a5e:	39 07       	cpc	r19, r25
    2a60:	11 f0       	breq	.+4      	; 0x2a66 <_uartInit+0x2a>
    2a62:	80 e0       	ldi	r24, 0x00	; 0
    2a64:	01 c0       	rjmp	.+2      	; 0x2a68 <_uartInit+0x2c>
    2a66:	8f ef       	ldi	r24, 0xFF	; 255
    2a68:	8f 8b       	std	Y+23, r24	; 0x17
    2a6a:	88 23       	and	r24, r24
    2a6c:	81 f0       	breq	.+32     	; 0x2a8e <_uartInit+0x52>
    2a6e:	2d 85       	ldd	r18, Y+13	; 0x0d
    2a70:	3e 85       	ldd	r19, Y+14	; 0x0e
    2a72:	8f 85       	ldd	r24, Y+15	; 0x0f
    2a74:	98 89       	ldd	r25, Y+16	; 0x10
    2a76:	28 17       	cp	r18, r24
    2a78:	39 07       	cpc	r19, r25
    2a7a:	21 f0       	breq	.+8      	; 0x2a84 <_uartInit+0x48>
    2a7c:	c9 01       	movw	r24, r18
    2a7e:	60 e0       	ldi	r22, 0x00	; 0
    2a80:	0e 94 53 11 	call	0x22a6	; 0x22a6 <pin_make_input>
    2a84:	8f 85       	ldd	r24, Y+15	; 0x0f
    2a86:	98 89       	ldd	r25, Y+16	; 0x10
    2a88:	6f ef       	ldi	r22, 0xFF	; 255
    2a8a:	0e 94 53 11 	call	0x22a6	; 0x22a6 <pin_make_input>
    2a8e:	88 85       	ldd	r24, Y+8	; 0x08
    2a90:	81 60       	ori	r24, 0x01	; 1
    2a92:	88 87       	std	Y+8, r24	; 0x08
    2a94:	88 85       	ldd	r24, Y+8	; 0x08
    2a96:	8b 7f       	andi	r24, 0xFB	; 251
    2a98:	88 87       	std	Y+8, r24	; 0x08
    2a9a:	88 85       	ldd	r24, Y+8	; 0x08
    2a9c:	8d 7f       	andi	r24, 0xFD	; 253
    2a9e:	88 87       	std	Y+8, r24	; 0x08
    2aa0:	89 85       	ldd	r24, Y+9	; 0x09
    2aa2:	9a 85       	ldd	r25, Y+10	; 0x0a
    2aa4:	04 96       	adiw	r24, 0x04	; 4
    2aa6:	fc 01       	movw	r30, r24
    2aa8:	25 91       	lpm	r18, Z+
    2aaa:	34 91       	lpm	r19, Z+
    2aac:	ce 01       	movw	r24, r28
    2aae:	b8 01       	movw	r22, r16
    2ab0:	a7 01       	movw	r20, r14
    2ab2:	f9 01       	movw	r30, r18
    2ab4:	09 95       	icall
    2ab6:	df be       	out	0x3f, r13	; 63
    2ab8:	df 91       	pop	r29
    2aba:	cf 91       	pop	r28
    2abc:	1f 91       	pop	r17
    2abe:	0f 91       	pop	r16
    2ac0:	ff 90       	pop	r15
    2ac2:	ef 90       	pop	r14
    2ac4:	df 90       	pop	r13
    2ac6:	08 95       	ret

00002ac8 <__uartHWSetBaudRate>:
    2ac8:	bf 92       	push	r11
    2aca:	cf 92       	push	r12
    2acc:	df 92       	push	r13
    2ace:	ef 92       	push	r14
    2ad0:	ff 92       	push	r15
    2ad2:	0f 93       	push	r16
    2ad4:	1f 93       	push	r17
    2ad6:	cf 93       	push	r28
    2ad8:	df 93       	push	r29
    2ada:	7a 01       	movw	r14, r20
    2adc:	8b 01       	movw	r16, r22
    2ade:	ec 01       	movw	r28, r24
    2ae0:	bf b6       	in	r11, 0x3f	; 63
    2ae2:	f8 94       	cli
    2ae4:	4f 3f       	cpi	r20, 0xFF	; 255
    2ae6:	8f ef       	ldi	r24, 0xFF	; 255
    2ae8:	58 07       	cpc	r21, r24
    2aea:	8f ef       	ldi	r24, 0xFF	; 255
    2aec:	68 07       	cpc	r22, r24
    2aee:	8f ef       	ldi	r24, 0xFF	; 255
    2af0:	78 07       	cpc	r23, r24
    2af2:	21 f4       	brne	.+8      	; 0x2afc <__uartHWSetBaudRate+0x34>
    2af4:	a1 e0       	ldi	r26, 0x01	; 1
    2af6:	ca 2e       	mov	r12, r26
    2af8:	d1 2c       	mov	r13, r1
    2afa:	24 c0       	rjmp	.+72     	; 0x2b44 <__uartHWSetBaudRate+0x7c>
    2afc:	cb 01       	movw	r24, r22
    2afe:	ba 01       	movw	r22, r20
    2b00:	f3 e0       	ldi	r31, 0x03	; 3
    2b02:	66 0f       	add	r22, r22
    2b04:	77 1f       	adc	r23, r23
    2b06:	88 1f       	adc	r24, r24
    2b08:	99 1f       	adc	r25, r25
    2b0a:	fa 95       	dec	r31
    2b0c:	d1 f7       	brne	.-12     	; 0x2b02 <__uartHWSetBaudRate+0x3a>
    2b0e:	20 91 92 03 	lds	r18, 0x0392
    2b12:	30 91 93 03 	lds	r19, 0x0393
    2b16:	40 91 94 03 	lds	r20, 0x0394
    2b1a:	50 91 95 03 	lds	r21, 0x0395
    2b1e:	62 0f       	add	r22, r18
    2b20:	73 1f       	adc	r23, r19
    2b22:	84 1f       	adc	r24, r20
    2b24:	95 1f       	adc	r25, r21
    2b26:	a8 01       	movw	r20, r16
    2b28:	97 01       	movw	r18, r14
    2b2a:	e4 e0       	ldi	r30, 0x04	; 4
    2b2c:	22 0f       	add	r18, r18
    2b2e:	33 1f       	adc	r19, r19
    2b30:	44 1f       	adc	r20, r20
    2b32:	55 1f       	adc	r21, r21
    2b34:	ea 95       	dec	r30
    2b36:	d1 f7       	brne	.-12     	; 0x2b2c <__uartHWSetBaudRate+0x64>
    2b38:	0e 94 c7 21 	call	0x438e	; 0x438e <__udivmodsi4>
    2b3c:	69 01       	movw	r12, r18
    2b3e:	08 94       	sec
    2b40:	c1 08       	sbc	r12, r1
    2b42:	d1 08       	sbc	r13, r1
    2b44:	98 a9       	ldd	r25, Y+48	; 0x30
    2b46:	99 23       	and	r25, r25
    2b48:	c9 f1       	breq	.+114    	; 0x2bbc <__uartHWSetBaudRate+0xf4>
    2b4a:	ec a1       	ldd	r30, Y+36	; 0x24
    2b4c:	fd a1       	ldd	r31, Y+37	; 0x25
    2b4e:	80 81       	ld	r24, Z
    2b50:	90 95       	com	r25
    2b52:	89 23       	and	r24, r25
    2b54:	80 83       	st	Z, r24
    2b56:	8f ef       	ldi	r24, 0xFF	; 255
    2b58:	e8 16       	cp	r14, r24
    2b5a:	8f ef       	ldi	r24, 0xFF	; 255
    2b5c:	f8 06       	cpc	r15, r24
    2b5e:	8f ef       	ldi	r24, 0xFF	; 255
    2b60:	08 07       	cpc	r16, r24
    2b62:	8f ef       	ldi	r24, 0xFF	; 255
    2b64:	18 07       	cpc	r17, r24
    2b66:	19 f4       	brne	.+6      	; 0x2b6e <__uartHWSetBaudRate+0xa6>
    2b68:	21 e0       	ldi	r18, 0x01	; 1
    2b6a:	30 e0       	ldi	r19, 0x00	; 0
    2b6c:	1d c0       	rjmp	.+58     	; 0x2ba8 <__uartHWSetBaudRate+0xe0>
    2b6e:	32 e0       	ldi	r19, 0x02	; 2
    2b70:	ee 0c       	add	r14, r14
    2b72:	ff 1c       	adc	r15, r15
    2b74:	00 1f       	adc	r16, r16
    2b76:	11 1f       	adc	r17, r17
    2b78:	3a 95       	dec	r19
    2b7a:	d1 f7       	brne	.-12     	; 0x2b70 <__uartHWSetBaudRate+0xa8>
    2b7c:	60 91 92 03 	lds	r22, 0x0392
    2b80:	70 91 93 03 	lds	r23, 0x0393
    2b84:	80 91 94 03 	lds	r24, 0x0394
    2b88:	90 91 95 03 	lds	r25, 0x0395
    2b8c:	6e 0d       	add	r22, r14
    2b8e:	7f 1d       	adc	r23, r15
    2b90:	80 1f       	adc	r24, r16
    2b92:	91 1f       	adc	r25, r17
    2b94:	ee 0c       	add	r14, r14
    2b96:	ff 1c       	adc	r15, r15
    2b98:	00 1f       	adc	r16, r16
    2b9a:	11 1f       	adc	r17, r17
    2b9c:	a8 01       	movw	r20, r16
    2b9e:	97 01       	movw	r18, r14
    2ba0:	0e 94 c7 21 	call	0x438e	; 0x438e <__udivmodsi4>
    2ba4:	21 50       	subi	r18, 0x01	; 1
    2ba6:	30 40       	sbci	r19, 0x00	; 0
    2ba8:	2c 15       	cp	r18, r12
    2baa:	3d 05       	cpc	r19, r13
    2bac:	38 f0       	brcs	.+14     	; 0x2bbc <__uartHWSetBaudRate+0xf4>
    2bae:	ec a1       	ldd	r30, Y+36	; 0x24
    2bb0:	fd a1       	ldd	r31, Y+37	; 0x25
    2bb2:	80 81       	ld	r24, Z
    2bb4:	98 a9       	ldd	r25, Y+48	; 0x30
    2bb6:	89 2b       	or	r24, r25
    2bb8:	80 83       	st	Z, r24
    2bba:	69 01       	movw	r12, r18
    2bbc:	e8 a5       	ldd	r30, Y+40	; 0x28
    2bbe:	f9 a5       	ldd	r31, Y+41	; 0x29
    2bc0:	c0 82       	st	Z, r12
    2bc2:	ea a5       	ldd	r30, Y+42	; 0x2a
    2bc4:	fb a5       	ldd	r31, Y+43	; 0x2b
    2bc6:	d0 82       	st	Z, r13
    2bc8:	bf be       	out	0x3f, r11	; 63
    2bca:	df 91       	pop	r29
    2bcc:	cf 91       	pop	r28
    2bce:	1f 91       	pop	r17
    2bd0:	0f 91       	pop	r16
    2bd2:	ff 90       	pop	r15
    2bd4:	ef 90       	pop	r14
    2bd6:	df 90       	pop	r13
    2bd8:	cf 90       	pop	r12
    2bda:	bf 90       	pop	r11
    2bdc:	08 95       	ret

00002bde <__uartHWOff>:
    2bde:	dc 01       	movw	r26, r24
    2be0:	96 96       	adiw	r26, 0x26	; 38
    2be2:	ed 91       	ld	r30, X+
    2be4:	fc 91       	ld	r31, X
    2be6:	97 97       	sbiw	r26, 0x27	; 39
    2be8:	80 81       	ld	r24, Z
    2bea:	87 72       	andi	r24, 0x27	; 39
    2bec:	80 83       	st	Z, r24
    2bee:	d0 96       	adiw	r26, 0x30	; 48
    2bf0:	9c 91       	ld	r25, X
    2bf2:	d0 97       	sbiw	r26, 0x30	; 48
    2bf4:	99 23       	and	r25, r25
    2bf6:	41 f0       	breq	.+16     	; 0x2c08 <__uartHWOff+0x2a>
    2bf8:	94 96       	adiw	r26, 0x24	; 36
    2bfa:	ed 91       	ld	r30, X+
    2bfc:	fc 91       	ld	r31, X
    2bfe:	95 97       	sbiw	r26, 0x25	; 37
    2c00:	80 81       	ld	r24, Z
    2c02:	90 95       	com	r25
    2c04:	89 23       	and	r24, r25
    2c06:	80 83       	st	Z, r24
    2c08:	08 95       	ret

00002c0a <oneWireReceiveMode>:
    2c0a:	dc 01       	movw	r26, r24
    2c0c:	57 96       	adiw	r26, 0x17	; 23
    2c0e:	8c 91       	ld	r24, X
    2c10:	57 97       	sbiw	r26, 0x17	; 23
    2c12:	88 23       	and	r24, r24
    2c14:	71 f0       	breq	.+28     	; 0x2c32 <oneWireReceiveMode+0x28>
    2c16:	96 96       	adiw	r26, 0x26	; 38
    2c18:	ed 91       	ld	r30, X+
    2c1a:	fc 91       	ld	r31, X
    2c1c:	97 97       	sbiw	r26, 0x27	; 39
    2c1e:	80 81       	ld	r24, Z
    2c20:	87 7b       	andi	r24, 0xB7	; 183
    2c22:	80 83       	st	Z, r24
    2c24:	96 96       	adiw	r26, 0x26	; 38
    2c26:	ed 91       	ld	r30, X+
    2c28:	fc 91       	ld	r31, X
    2c2a:	97 97       	sbiw	r26, 0x27	; 39
    2c2c:	80 81       	ld	r24, Z
    2c2e:	80 69       	ori	r24, 0x90	; 144
    2c30:	80 83       	st	Z, r24
    2c32:	08 95       	ret

00002c34 <__uartHWStartXmit>:
    2c34:	dc 01       	movw	r26, r24
    2c36:	9c 96       	adiw	r26, 0x2c	; 44
    2c38:	ed 91       	ld	r30, X+
    2c3a:	fc 91       	ld	r31, X
    2c3c:	9d 97       	sbiw	r26, 0x2d	; 45
    2c3e:	60 83       	st	Z, r22
    2c40:	08 95       	ret

00002c42 <startXmitMode>:
    2c42:	dc 01       	movw	r26, r24
    2c44:	57 96       	adiw	r26, 0x17	; 23
    2c46:	8c 91       	ld	r24, X
    2c48:	57 97       	sbiw	r26, 0x17	; 23
    2c4a:	88 23       	and	r24, r24
    2c4c:	71 f0       	breq	.+28     	; 0x2c6a <startXmitMode+0x28>
    2c4e:	96 96       	adiw	r26, 0x26	; 38
    2c50:	ed 91       	ld	r30, X+
    2c52:	fc 91       	ld	r31, X
    2c54:	97 97       	sbiw	r26, 0x27	; 39
    2c56:	80 81       	ld	r24, Z
    2c58:	8f 76       	andi	r24, 0x6F	; 111
    2c5a:	80 83       	st	Z, r24
    2c5c:	96 96       	adiw	r26, 0x26	; 38
    2c5e:	ed 91       	ld	r30, X+
    2c60:	fc 91       	ld	r31, X
    2c62:	97 97       	sbiw	r26, 0x27	; 39
    2c64:	80 81       	ld	r24, Z
    2c66:	88 64       	ori	r24, 0x48	; 72
    2c68:	80 83       	st	Z, r24
    2c6a:	08 95       	ret

00002c6c <__uartHWInit>:
    2c6c:	cf 93       	push	r28
    2c6e:	df 93       	push	r29
    2c70:	ec 01       	movw	r28, r24
    2c72:	0e 94 12 15 	call	0x2a24	; 0x2a24 <_uartSetBaudRate>
    2c76:	8f 89       	ldd	r24, Y+23	; 0x17
    2c78:	88 23       	and	r24, r24
    2c7a:	11 f0       	breq	.+4      	; 0x2c80 <__uartHWInit+0x14>
    2c7c:	20 e9       	ldi	r18, 0x90	; 144
    2c7e:	0c c0       	rjmp	.+24     	; 0x2c98 <__uartHWInit+0x2c>
    2c80:	8d 85       	ldd	r24, Y+13	; 0x0d
    2c82:	9e 85       	ldd	r25, Y+14	; 0x0e
    2c84:	89 2b       	or	r24, r25
    2c86:	11 f0       	breq	.+4      	; 0x2c8c <__uartHWInit+0x20>
    2c88:	20 e9       	ldi	r18, 0x90	; 144
    2c8a:	01 c0       	rjmp	.+2      	; 0x2c8e <__uartHWInit+0x22>
    2c8c:	20 e0       	ldi	r18, 0x00	; 0
    2c8e:	8f 85       	ldd	r24, Y+15	; 0x0f
    2c90:	98 89       	ldd	r25, Y+16	; 0x10
    2c92:	89 2b       	or	r24, r25
    2c94:	09 f0       	breq	.+2      	; 0x2c98 <__uartHWInit+0x2c>
    2c96:	28 64       	ori	r18, 0x48	; 72
    2c98:	ee a1       	ldd	r30, Y+38	; 0x26
    2c9a:	ff a1       	ldd	r31, Y+39	; 0x27
    2c9c:	20 83       	st	Z, r18
    2c9e:	df 91       	pop	r29
    2ca0:	cf 91       	pop	r28
    2ca2:	08 95       	ret

00002ca4 <__uartReceiveService>:
    2ca4:	dc 01       	movw	r26, r24
    2ca6:	26 2f       	mov	r18, r22
    2ca8:	14 96       	adiw	r26, 0x04	; 4
    2caa:	8d 91       	ld	r24, X+
    2cac:	9c 91       	ld	r25, X
    2cae:	15 97       	sbiw	r26, 0x05	; 5
    2cb0:	89 2b       	or	r24, r25
    2cb2:	59 f0       	breq	.+22     	; 0x2cca <__uartReceiveService+0x26>
    2cb4:	14 96       	adiw	r26, 0x04	; 4
    2cb6:	ed 91       	ld	r30, X+
    2cb8:	fc 91       	ld	r31, X
    2cba:	15 97       	sbiw	r26, 0x05	; 5
    2cbc:	16 96       	adiw	r26, 0x06	; 6
    2cbe:	6d 91       	ld	r22, X+
    2cc0:	7c 91       	ld	r23, X
    2cc2:	17 97       	sbiw	r26, 0x07	; 7
    2cc4:	82 2f       	mov	r24, r18
    2cc6:	09 95       	icall
    2cc8:	08 95       	ret
    2cca:	90 96       	adiw	r26, 0x20	; 32
    2ccc:	ed 91       	ld	r30, X+
    2cce:	fc 91       	ld	r31, X
    2cd0:	91 97       	sbiw	r26, 0x21	; 33
    2cd2:	cd 01       	movw	r24, r26
    2cd4:	09 95       	icall
    2cd6:	08 95       	ret

00002cd8 <__uartGetByte>:
    2cd8:	fc 01       	movw	r30, r24
    2cda:	22 a1       	ldd	r18, Z+34	; 0x22
    2cdc:	33 a1       	ldd	r19, Z+35	; 0x23
    2cde:	f9 01       	movw	r30, r18
    2ce0:	09 95       	icall
    2ce2:	08 95       	ret

00002ce4 <__uartGetByteBuffered>:
    2ce4:	df 93       	push	r29
    2ce6:	cf 93       	push	r28
    2ce8:	0f 92       	push	r0
    2cea:	cd b7       	in	r28, 0x3d	; 61
    2cec:	de b7       	in	r29, 0x3e	; 62
    2cee:	fc 01       	movw	r30, r24
    2cf0:	80 81       	ld	r24, Z
    2cf2:	91 81       	ldd	r25, Z+1	; 0x01
    2cf4:	be 01       	movw	r22, r28
    2cf6:	6f 5f       	subi	r22, 0xFF	; 255
    2cf8:	7f 4f       	sbci	r23, 0xFF	; 255
    2cfa:	0e 94 a5 17 	call	0x2f4a	; 0x2f4a <bufferGet>
    2cfe:	88 23       	and	r24, r24
    2d00:	19 f4       	brne	.+6      	; 0x2d08 <__uartGetByteBuffered+0x24>
    2d02:	2f ef       	ldi	r18, 0xFF	; 255
    2d04:	3f ef       	ldi	r19, 0xFF	; 255
    2d06:	03 c0       	rjmp	.+6      	; 0x2d0e <__uartGetByteBuffered+0x2a>
    2d08:	89 81       	ldd	r24, Y+1	; 0x01
    2d0a:	28 2f       	mov	r18, r24
    2d0c:	30 e0       	ldi	r19, 0x00	; 0
    2d0e:	c9 01       	movw	r24, r18
    2d10:	0f 90       	pop	r0
    2d12:	cf 91       	pop	r28
    2d14:	df 91       	pop	r29
    2d16:	08 95       	ret

00002d18 <__uartReceiveBuffered>:
    2d18:	cf 93       	push	r28
    2d1a:	df 93       	push	r29
    2d1c:	ec 01       	movw	r28, r24
    2d1e:	88 81       	ld	r24, Y
    2d20:	99 81       	ldd	r25, Y+1	; 0x01
    2d22:	0e 94 ed 17 	call	0x2fda	; 0x2fda <bufferPut>
    2d26:	88 23       	and	r24, r24
    2d28:	31 f4       	brne	.+12     	; 0x2d36 <__uartReceiveBuffered+0x1e>
    2d2a:	88 85       	ldd	r24, Y+8	; 0x08
    2d2c:	84 60       	ori	r24, 0x04	; 4
    2d2e:	88 87       	std	Y+8, r24	; 0x08
    2d30:	85 ef       	ldi	r24, 0xF5	; 245
    2d32:	0e 94 db 10 	call	0x21b6	; 0x21b6 <setError>
    2d36:	df 91       	pop	r29
    2d38:	cf 91       	pop	r28
    2d3a:	08 95       	ret

00002d3c <_uartStartXmit>:
    2d3c:	dc 01       	movw	r26, r24
    2d3e:	19 96       	adiw	r26, 0x09	; 9
    2d40:	8d 91       	ld	r24, X+
    2d42:	9c 91       	ld	r25, X
    2d44:	1a 97       	sbiw	r26, 0x0a	; 10
    2d46:	02 96       	adiw	r24, 0x02	; 2
    2d48:	fc 01       	movw	r30, r24
    2d4a:	25 91       	lpm	r18, Z+
    2d4c:	34 91       	lpm	r19, Z+
    2d4e:	cd 01       	movw	r24, r26
    2d50:	f9 01       	movw	r30, r18
    2d52:	09 95       	icall
    2d54:	08 95       	ret

00002d56 <_uartTransmitBlockStart>:
    2d56:	cf 93       	push	r28
    2d58:	df 93       	push	r29
    2d5a:	ec 01       	movw	r28, r24
    2d5c:	88 85       	ldd	r24, Y+8	; 0x08
    2d5e:	8e 7f       	andi	r24, 0xFE	; 254
    2d60:	88 87       	std	Y+8, r24	; 0x08
    2d62:	e8 8d       	ldd	r30, Y+24	; 0x18
    2d64:	f9 8d       	ldd	r31, Y+25	; 0x19
    2d66:	30 97       	sbiw	r30, 0x00	; 0
    2d68:	21 f0       	breq	.+8      	; 0x2d72 <_uartTransmitBlockStart+0x1c>
    2d6a:	8a 8d       	ldd	r24, Y+26	; 0x1a
    2d6c:	9b 8d       	ldd	r25, Y+27	; 0x1b
    2d6e:	6f ef       	ldi	r22, 0xFF	; 255
    2d70:	09 95       	icall
    2d72:	e9 85       	ldd	r30, Y+9	; 0x09
    2d74:	fa 85       	ldd	r31, Y+10	; 0x0a
    2d76:	38 96       	adiw	r30, 0x08	; 8
    2d78:	25 91       	lpm	r18, Z+
    2d7a:	34 91       	lpm	r19, Z+
    2d7c:	21 15       	cp	r18, r1
    2d7e:	31 05       	cpc	r19, r1
    2d80:	19 f0       	breq	.+6      	; 0x2d88 <_uartTransmitBlockStart+0x32>
    2d82:	ce 01       	movw	r24, r28
    2d84:	f9 01       	movw	r30, r18
    2d86:	09 95       	icall
    2d88:	df 91       	pop	r29
    2d8a:	cf 91       	pop	r28
    2d8c:	08 95       	ret

00002d8e <_uartTransmitBlockEnd>:
    2d8e:	cf 93       	push	r28
    2d90:	df 93       	push	r29
    2d92:	ec 01       	movw	r28, r24
    2d94:	88 85       	ldd	r24, Y+8	; 0x08
    2d96:	81 60       	ori	r24, 0x01	; 1
    2d98:	88 87       	std	Y+8, r24	; 0x08
    2d9a:	e9 85       	ldd	r30, Y+9	; 0x09
    2d9c:	fa 85       	ldd	r31, Y+10	; 0x0a
    2d9e:	3a 96       	adiw	r30, 0x0a	; 10
    2da0:	25 91       	lpm	r18, Z+
    2da2:	34 91       	lpm	r19, Z+
    2da4:	21 15       	cp	r18, r1
    2da6:	31 05       	cpc	r19, r1
    2da8:	19 f0       	breq	.+6      	; 0x2db0 <_uartTransmitBlockEnd+0x22>
    2daa:	ce 01       	movw	r24, r28
    2dac:	f9 01       	movw	r30, r18
    2dae:	09 95       	icall
    2db0:	e8 8d       	ldd	r30, Y+24	; 0x18
    2db2:	f9 8d       	ldd	r31, Y+25	; 0x19
    2db4:	30 97       	sbiw	r30, 0x00	; 0
    2db6:	21 f0       	breq	.+8      	; 0x2dc0 <_uartTransmitBlockEnd+0x32>
    2db8:	8a 8d       	ldd	r24, Y+26	; 0x1a
    2dba:	9b 8d       	ldd	r25, Y+27	; 0x1b
    2dbc:	60 e0       	ldi	r22, 0x00	; 0
    2dbe:	09 95       	icall
    2dc0:	df 91       	pop	r29
    2dc2:	cf 91       	pop	r28
    2dc4:	08 95       	ret

00002dc6 <_uartSendBuffer>:
    2dc6:	ef 92       	push	r14
    2dc8:	ff 92       	push	r15
    2dca:	0f 93       	push	r16
    2dcc:	1f 93       	push	r17
    2dce:	cf 93       	push	r28
    2dd0:	df 93       	push	r29
    2dd2:	8c 01       	movw	r16, r24
    2dd4:	7b 01       	movw	r14, r22
    2dd6:	ea 01       	movw	r28, r20
    2dd8:	0b c0       	rjmp	.+22     	; 0x2df0 <_uartSendBuffer+0x2a>
    2dda:	d7 01       	movw	r26, r14
    2ddc:	6d 91       	ld	r22, X+
    2dde:	7d 01       	movw	r14, r26
    2de0:	d8 01       	movw	r26, r16
    2de2:	5c 96       	adiw	r26, 0x1c	; 28
    2de4:	ed 91       	ld	r30, X+
    2de6:	fc 91       	ld	r31, X
    2de8:	5d 97       	sbiw	r26, 0x1d	; 29
    2dea:	c8 01       	movw	r24, r16
    2dec:	09 95       	icall
    2dee:	21 97       	sbiw	r28, 0x01	; 1
    2df0:	20 97       	sbiw	r28, 0x00	; 0
    2df2:	99 f7       	brne	.-26     	; 0x2dda <_uartSendBuffer+0x14>
    2df4:	df 91       	pop	r29
    2df6:	cf 91       	pop	r28
    2df8:	1f 91       	pop	r17
    2dfa:	0f 91       	pop	r16
    2dfc:	ff 90       	pop	r15
    2dfe:	ef 90       	pop	r14
    2e00:	08 95       	ret

00002e02 <_uartSendByte>:
    2e02:	1f 93       	push	r17
    2e04:	fc 01       	movw	r30, r24
    2e06:	16 2f       	mov	r17, r22
    2e08:	24 8d       	ldd	r18, Z+28	; 0x1c
    2e0a:	35 8d       	ldd	r19, Z+29	; 0x1d
    2e0c:	f9 01       	movw	r30, r18
    2e0e:	09 95       	icall
    2e10:	81 2f       	mov	r24, r17
    2e12:	1f 91       	pop	r17
    2e14:	08 95       	ret

00002e16 <__uartTransmitService>:
    2e16:	fc 01       	movw	r30, r24
    2e18:	26 8d       	ldd	r18, Z+30	; 0x1e
    2e1a:	37 8d       	ldd	r19, Z+31	; 0x1f
    2e1c:	f9 01       	movw	r30, r18
    2e1e:	09 95       	icall
    2e20:	08 95       	ret

00002e22 <__uartSendNextBuffered>:
    2e22:	ff 92       	push	r15
    2e24:	0f 93       	push	r16
    2e26:	1f 93       	push	r17
    2e28:	df 93       	push	r29
    2e2a:	cf 93       	push	r28
    2e2c:	0f 92       	push	r0
    2e2e:	cd b7       	in	r28, 0x3d	; 61
    2e30:	de b7       	in	r29, 0x3e	; 62
    2e32:	8c 01       	movw	r16, r24
    2e34:	ff b6       	in	r15, 0x3f	; 63
    2e36:	f8 94       	cli
    2e38:	fc 01       	movw	r30, r24
    2e3a:	82 81       	ldd	r24, Z+2	; 0x02
    2e3c:	93 81       	ldd	r25, Z+3	; 0x03
    2e3e:	be 01       	movw	r22, r28
    2e40:	6f 5f       	subi	r22, 0xFF	; 255
    2e42:	7f 4f       	sbci	r23, 0xFF	; 255
    2e44:	0e 94 a5 17 	call	0x2f4a	; 0x2f4a <bufferGet>
    2e48:	88 23       	and	r24, r24
    2e4a:	29 f0       	breq	.+10     	; 0x2e56 <__uartSendNextBuffered+0x34>
    2e4c:	c8 01       	movw	r24, r16
    2e4e:	69 81       	ldd	r22, Y+1	; 0x01
    2e50:	0e 94 9e 16 	call	0x2d3c	; 0x2d3c <_uartStartXmit>
    2e54:	07 c0       	rjmp	.+14     	; 0x2e64 <__uartSendNextBuffered+0x42>
    2e56:	c8 01       	movw	r24, r16
    2e58:	0e 94 c7 16 	call	0x2d8e	; 0x2d8e <_uartTransmitBlockEnd>
    2e5c:	f8 01       	movw	r30, r16
    2e5e:	80 85       	ldd	r24, Z+8	; 0x08
    2e60:	8d 7f       	andi	r24, 0xFD	; 253
    2e62:	80 87       	std	Z+8, r24	; 0x08
    2e64:	ff be       	out	0x3f, r15	; 63
    2e66:	0f 90       	pop	r0
    2e68:	cf 91       	pop	r28
    2e6a:	df 91       	pop	r29
    2e6c:	1f 91       	pop	r17
    2e6e:	0f 91       	pop	r16
    2e70:	ff 90       	pop	r15
    2e72:	08 95       	ret

00002e74 <__uartSendBuffered>:
    2e74:	0f 93       	push	r16
    2e76:	1f 93       	push	r17
    2e78:	cf 93       	push	r28
    2e7a:	df 93       	push	r29
    2e7c:	16 2f       	mov	r17, r22
    2e7e:	ec 01       	movw	r28, r24
    2e80:	02 c0       	rjmp	.+4      	; 0x2e86 <__uartSendBuffered+0x12>
    2e82:	0e 94 5e 18 	call	0x30bc	; 0x30bc <breathe>
    2e86:	8a 81       	ldd	r24, Y+2	; 0x02
    2e88:	9b 81       	ldd	r25, Y+3	; 0x03
    2e8a:	0e 94 e5 17 	call	0x2fca	; 0x2fca <bufferIsFull>
    2e8e:	88 23       	and	r24, r24
    2e90:	c1 f7       	brne	.-16     	; 0x2e82 <__uartSendBuffered+0xe>
    2e92:	0f b7       	in	r16, 0x3f	; 63
    2e94:	f8 94       	cli
    2e96:	88 85       	ldd	r24, Y+8	; 0x08
    2e98:	81 fd       	sbrc	r24, 1
    2e9a:	0b c0       	rjmp	.+22     	; 0x2eb2 <__uartSendBuffered+0x3e>
    2e9c:	88 85       	ldd	r24, Y+8	; 0x08
    2e9e:	82 60       	ori	r24, 0x02	; 2
    2ea0:	88 87       	std	Y+8, r24	; 0x08
    2ea2:	ce 01       	movw	r24, r28
    2ea4:	0e 94 ab 16 	call	0x2d56	; 0x2d56 <_uartTransmitBlockStart>
    2ea8:	ce 01       	movw	r24, r28
    2eaa:	61 2f       	mov	r22, r17
    2eac:	0e 94 9e 16 	call	0x2d3c	; 0x2d3c <_uartStartXmit>
    2eb0:	05 c0       	rjmp	.+10     	; 0x2ebc <__uartSendBuffered+0x48>
    2eb2:	8a 81       	ldd	r24, Y+2	; 0x02
    2eb4:	9b 81       	ldd	r25, Y+3	; 0x03
    2eb6:	61 2f       	mov	r22, r17
    2eb8:	0e 94 ed 17 	call	0x2fda	; 0x2fda <bufferPut>
    2ebc:	0f bf       	out	0x3f, r16	; 63
    2ebe:	df 91       	pop	r29
    2ec0:	cf 91       	pop	r28
    2ec2:	1f 91       	pop	r17
    2ec4:	0f 91       	pop	r16
    2ec6:	08 95       	ret

00002ec8 <uartReceivePollingMode>:
    2ec8:	dc 01       	movw	r26, r24
    2eca:	96 96       	adiw	r26, 0x26	; 38
    2ecc:	ed 91       	ld	r30, X+
    2ece:	fc 91       	ld	r31, X
    2ed0:	97 97       	sbiw	r26, 0x27	; 39
    2ed2:	66 23       	and	r22, r22
    2ed4:	19 f0       	breq	.+6      	; 0x2edc <uartReceivePollingMode+0x14>
    2ed6:	80 81       	ld	r24, Z
    2ed8:	8f 77       	andi	r24, 0x7F	; 127
    2eda:	02 c0       	rjmp	.+4      	; 0x2ee0 <uartReceivePollingMode+0x18>
    2edc:	80 81       	ld	r24, Z
    2ede:	80 68       	ori	r24, 0x80	; 128
    2ee0:	80 83       	st	Z, r24
    2ee2:	08 95       	ret

00002ee4 <uartPollByte>:
    2ee4:	dc 01       	movw	r26, r24
    2ee6:	94 96       	adiw	r26, 0x24	; 36
    2ee8:	ed 91       	ld	r30, X+
    2eea:	fc 91       	ld	r31, X
    2eec:	95 97       	sbiw	r26, 0x25	; 37
    2eee:	80 81       	ld	r24, Z
    2ef0:	87 fd       	sbrc	r24, 7
    2ef2:	03 c0       	rjmp	.+6      	; 0x2efa <uartPollByte+0x16>
    2ef4:	2f ef       	ldi	r18, 0xFF	; 255
    2ef6:	3f ef       	ldi	r19, 0xFF	; 255
    2ef8:	07 c0       	rjmp	.+14     	; 0x2f08 <uartPollByte+0x24>
    2efa:	9c 96       	adiw	r26, 0x2c	; 44
    2efc:	ed 91       	ld	r30, X+
    2efe:	fc 91       	ld	r31, X
    2f00:	9d 97       	sbiw	r26, 0x2d	; 45
    2f02:	80 81       	ld	r24, Z
    2f04:	28 2f       	mov	r18, r24
    2f06:	30 e0       	ldi	r19, 0x00	; 0
    2f08:	c9 01       	movw	r24, r18
    2f0a:	08 95       	ret

00002f0c <__uartReceiveBufferIsEmpty>:
    2f0c:	dc 01       	movw	r26, r24
    2f0e:	ed 91       	ld	r30, X+
    2f10:	fc 91       	ld	r31, X
    2f12:	11 97       	sbiw	r26, 0x01	; 1
    2f14:	30 97       	sbiw	r30, 0x00	; 0
    2f16:	59 f0       	breq	.+22     	; 0x2f2e <__uartReceiveBufferIsEmpty+0x22>
    2f18:	2f b7       	in	r18, 0x3f	; 63
    2f1a:	f8 94       	cli
    2f1c:	84 81       	ldd	r24, Z+4	; 0x04
    2f1e:	95 81       	ldd	r25, Z+5	; 0x05
    2f20:	89 2b       	or	r24, r25
    2f22:	11 f0       	breq	.+4      	; 0x2f28 <__uartReceiveBufferIsEmpty+0x1c>
    2f24:	80 e0       	ldi	r24, 0x00	; 0
    2f26:	01 c0       	rjmp	.+2      	; 0x2f2a <__uartReceiveBufferIsEmpty+0x1e>
    2f28:	8f ef       	ldi	r24, 0xFF	; 255
    2f2a:	2f bf       	out	0x3f, r18	; 63
    2f2c:	08 95       	ret
    2f2e:	2f b7       	in	r18, 0x3f	; 63
    2f30:	f8 94       	cli
    2f32:	1b 96       	adiw	r26, 0x0b	; 11
    2f34:	8d 91       	ld	r24, X+
    2f36:	9c 91       	ld	r25, X
    2f38:	1c 97       	sbiw	r26, 0x0c	; 12
    2f3a:	8f 5f       	subi	r24, 0xFF	; 255
    2f3c:	9f 4f       	sbci	r25, 0xFF	; 255
    2f3e:	11 f0       	breq	.+4      	; 0x2f44 <__uartReceiveBufferIsEmpty+0x38>
    2f40:	80 e0       	ldi	r24, 0x00	; 0
    2f42:	01 c0       	rjmp	.+2      	; 0x2f46 <__uartReceiveBufferIsEmpty+0x3a>
    2f44:	8f ef       	ldi	r24, 0xFF	; 255
    2f46:	2f bf       	out	0x3f, r18	; 63
    2f48:	08 95       	ret

00002f4a <bufferGet>:
    2f4a:	cf 93       	push	r28
    2f4c:	df 93       	push	r29
    2f4e:	dc 01       	movw	r26, r24
    2f50:	eb 01       	movw	r28, r22
    2f52:	4f b7       	in	r20, 0x3f	; 63
    2f54:	f8 94       	cli
    2f56:	00 97       	sbiw	r24, 0x00	; 0
    2f58:	99 f1       	breq	.+102    	; 0x2fc0 <bufferGet+0x76>
    2f5a:	12 96       	adiw	r26, 0x02	; 2
    2f5c:	8d 91       	ld	r24, X+
    2f5e:	9c 91       	ld	r25, X
    2f60:	13 97       	sbiw	r26, 0x03	; 3
    2f62:	89 2b       	or	r24, r25
    2f64:	69 f1       	breq	.+90     	; 0x2fc0 <bufferGet+0x76>
    2f66:	14 96       	adiw	r26, 0x04	; 4
    2f68:	8d 91       	ld	r24, X+
    2f6a:	9c 91       	ld	r25, X
    2f6c:	15 97       	sbiw	r26, 0x05	; 5
    2f6e:	89 2b       	or	r24, r25
    2f70:	39 f1       	breq	.+78     	; 0x2fc0 <bufferGet+0x76>
    2f72:	16 96       	adiw	r26, 0x06	; 6
    2f74:	2d 91       	ld	r18, X+
    2f76:	3c 91       	ld	r19, X
    2f78:	17 97       	sbiw	r26, 0x07	; 7
    2f7a:	ed 91       	ld	r30, X+
    2f7c:	fc 91       	ld	r31, X
    2f7e:	11 97       	sbiw	r26, 0x01	; 1
    2f80:	e2 0f       	add	r30, r18
    2f82:	f3 1f       	adc	r31, r19
    2f84:	80 81       	ld	r24, Z
    2f86:	88 83       	st	Y, r24
    2f88:	2f 5f       	subi	r18, 0xFF	; 255
    2f8a:	3f 4f       	sbci	r19, 0xFF	; 255
    2f8c:	17 96       	adiw	r26, 0x07	; 7
    2f8e:	3c 93       	st	X, r19
    2f90:	2e 93       	st	-X, r18
    2f92:	16 97       	sbiw	r26, 0x06	; 6
    2f94:	12 96       	adiw	r26, 0x02	; 2
    2f96:	8d 91       	ld	r24, X+
    2f98:	9c 91       	ld	r25, X
    2f9a:	13 97       	sbiw	r26, 0x03	; 3
    2f9c:	28 17       	cp	r18, r24
    2f9e:	39 07       	cpc	r19, r25
    2fa0:	21 f4       	brne	.+8      	; 0x2faa <bufferGet+0x60>
    2fa2:	17 96       	adiw	r26, 0x07	; 7
    2fa4:	1c 92       	st	X, r1
    2fa6:	1e 92       	st	-X, r1
    2fa8:	16 97       	sbiw	r26, 0x06	; 6
    2faa:	14 96       	adiw	r26, 0x04	; 4
    2fac:	8d 91       	ld	r24, X+
    2fae:	9c 91       	ld	r25, X
    2fb0:	15 97       	sbiw	r26, 0x05	; 5
    2fb2:	01 97       	sbiw	r24, 0x01	; 1
    2fb4:	15 96       	adiw	r26, 0x05	; 5
    2fb6:	9c 93       	st	X, r25
    2fb8:	8e 93       	st	-X, r24
    2fba:	14 97       	sbiw	r26, 0x04	; 4
    2fbc:	8f ef       	ldi	r24, 0xFF	; 255
    2fbe:	01 c0       	rjmp	.+2      	; 0x2fc2 <bufferGet+0x78>
    2fc0:	80 e0       	ldi	r24, 0x00	; 0
    2fc2:	4f bf       	out	0x3f, r20	; 63
    2fc4:	df 91       	pop	r29
    2fc6:	cf 91       	pop	r28
    2fc8:	08 95       	ret

00002fca <bufferIsFull>:
    2fca:	0e 94 ba 18 	call	0x3174	; 0x3174 <bufferFreeSpace>
    2fce:	89 2b       	or	r24, r25
    2fd0:	11 f0       	breq	.+4      	; 0x2fd6 <bufferIsFull+0xc>
    2fd2:	80 e0       	ldi	r24, 0x00	; 0
    2fd4:	08 95       	ret
    2fd6:	8f ef       	ldi	r24, 0xFF	; 255
    2fd8:	08 95       	ret

00002fda <bufferPut>:
    2fda:	1f 93       	push	r17
    2fdc:	cf 93       	push	r28
    2fde:	df 93       	push	r29
    2fe0:	ec 01       	movw	r28, r24
    2fe2:	46 2f       	mov	r20, r22
    2fe4:	1f b7       	in	r17, 0x3f	; 63
    2fe6:	f8 94       	cli
    2fe8:	2c 81       	ldd	r18, Y+4	; 0x04
    2fea:	3d 81       	ldd	r19, Y+5	; 0x05
    2fec:	6a 81       	ldd	r22, Y+2	; 0x02
    2fee:	7b 81       	ldd	r23, Y+3	; 0x03
    2ff0:	26 17       	cp	r18, r22
    2ff2:	37 07       	cpc	r19, r23
    2ff4:	10 f0       	brcs	.+4      	; 0x2ffa <bufferPut+0x20>
    2ff6:	80 e0       	ldi	r24, 0x00	; 0
    2ff8:	11 c0       	rjmp	.+34     	; 0x301c <bufferPut+0x42>
    2ffa:	8e 81       	ldd	r24, Y+6	; 0x06
    2ffc:	9f 81       	ldd	r25, Y+7	; 0x07
    2ffe:	82 0f       	add	r24, r18
    3000:	93 1f       	adc	r25, r19
    3002:	0e 94 b3 21 	call	0x4366	; 0x4366 <__udivmodhi4>
    3006:	e8 81       	ld	r30, Y
    3008:	f9 81       	ldd	r31, Y+1	; 0x01
    300a:	e8 0f       	add	r30, r24
    300c:	f9 1f       	adc	r31, r25
    300e:	40 83       	st	Z, r20
    3010:	8c 81       	ldd	r24, Y+4	; 0x04
    3012:	9d 81       	ldd	r25, Y+5	; 0x05
    3014:	01 96       	adiw	r24, 0x01	; 1
    3016:	9d 83       	std	Y+5, r25	; 0x05
    3018:	8c 83       	std	Y+4, r24	; 0x04
    301a:	8f ef       	ldi	r24, 0xFF	; 255
    301c:	1f bf       	out	0x3f, r17	; 63
    301e:	df 91       	pop	r29
    3020:	cf 91       	pop	r28
    3022:	1f 91       	pop	r17
    3024:	08 95       	ret

00003026 <clockHasElapsed>:
    3026:	0f 93       	push	r16
    3028:	1f 93       	push	r17
    302a:	00 e0       	ldi	r16, 0x00	; 0
    302c:	10 e0       	ldi	r17, 0x00	; 0
    302e:	0e 94 1c 18 	call	0x3038	; 0x3038 <clockHasElapsedGetOverflow>
    3032:	1f 91       	pop	r17
    3034:	0f 91       	pop	r16
    3036:	08 95       	ret

00003038 <clockHasElapsedGetOverflow>:
    3038:	8f 92       	push	r8
    303a:	9f 92       	push	r9
    303c:	af 92       	push	r10
    303e:	bf 92       	push	r11
    3040:	cf 92       	push	r12
    3042:	df 92       	push	r13
    3044:	ef 92       	push	r14
    3046:	ff 92       	push	r15
    3048:	0f 93       	push	r16
    304a:	1f 93       	push	r17
    304c:	cf 93       	push	r28
    304e:	df 93       	push	r29
    3050:	6b 01       	movw	r12, r22
    3052:	7c 01       	movw	r14, r24
    3054:	49 01       	movw	r8, r18
    3056:	5a 01       	movw	r10, r20
    3058:	e8 01       	movw	r28, r16
    305a:	0e 94 d1 0a 	call	0x15a2	; 0x15a2 <clockGetus>
    305e:	6c 19       	sub	r22, r12
    3060:	7d 09       	sbc	r23, r13
    3062:	8e 09       	sbc	r24, r14
    3064:	9f 09       	sbc	r25, r15
    3066:	68 15       	cp	r22, r8
    3068:	79 05       	cpc	r23, r9
    306a:	8a 05       	cpc	r24, r10
    306c:	9b 05       	cpc	r25, r11
    306e:	68 f0       	brcs	.+26     	; 0x308a <clockHasElapsedGetOverflow+0x52>
    3070:	01 15       	cp	r16, r1
    3072:	11 05       	cpc	r17, r1
    3074:	41 f0       	breq	.+16     	; 0x3086 <clockHasElapsedGetOverflow+0x4e>
    3076:	68 19       	sub	r22, r8
    3078:	79 09       	sbc	r23, r9
    307a:	8a 09       	sbc	r24, r10
    307c:	9b 09       	sbc	r25, r11
    307e:	68 83       	st	Y, r22
    3080:	79 83       	std	Y+1, r23	; 0x01
    3082:	8a 83       	std	Y+2, r24	; 0x02
    3084:	9b 83       	std	Y+3, r25	; 0x03
    3086:	8f ef       	ldi	r24, 0xFF	; 255
    3088:	0c c0       	rjmp	.+24     	; 0x30a2 <clockHasElapsedGetOverflow+0x6a>
    308a:	01 15       	cp	r16, r1
    308c:	11 05       	cpc	r17, r1
    308e:	41 f0       	breq	.+16     	; 0x30a0 <clockHasElapsedGetOverflow+0x68>
    3090:	86 1a       	sub	r8, r22
    3092:	97 0a       	sbc	r9, r23
    3094:	a8 0a       	sbc	r10, r24
    3096:	b9 0a       	sbc	r11, r25
    3098:	88 82       	st	Y, r8
    309a:	99 82       	std	Y+1, r9	; 0x01
    309c:	aa 82       	std	Y+2, r10	; 0x02
    309e:	bb 82       	std	Y+3, r11	; 0x03
    30a0:	80 e0       	ldi	r24, 0x00	; 0
    30a2:	df 91       	pop	r29
    30a4:	cf 91       	pop	r28
    30a6:	1f 91       	pop	r17
    30a8:	0f 91       	pop	r16
    30aa:	ff 90       	pop	r15
    30ac:	ef 90       	pop	r14
    30ae:	df 90       	pop	r13
    30b0:	cf 90       	pop	r12
    30b2:	bf 90       	pop	r11
    30b4:	af 90       	pop	r10
    30b6:	9f 90       	pop	r9
    30b8:	8f 90       	pop	r8
    30ba:	08 95       	ret

000030bc <breathe>:
    30bc:	8f b7       	in	r24, 0x3f	; 63
    30be:	78 94       	sei
	...
    30cc:	00 00       	nop
    30ce:	8f bf       	out	0x3f, r24	; 63
    30d0:	08 95       	ret

000030d2 <pin_low>:
    30d2:	cf 93       	push	r28
    30d4:	df 93       	push	r29
    30d6:	9c 01       	movw	r18, r24
    30d8:	00 97       	sbiw	r24, 0x00	; 0
    30da:	e9 f0       	breq	.+58     	; 0x3116 <pin_low+0x44>
    30dc:	fc 01       	movw	r30, r24
    30de:	85 91       	lpm	r24, Z+
    30e0:	94 91       	lpm	r25, Z+
    30e2:	fc 01       	movw	r30, r24
    30e4:	a5 91       	lpm	r26, Z+
    30e6:	b4 91       	lpm	r27, Z+
    30e8:	02 96       	adiw	r24, 0x02	; 2
    30ea:	fc 01       	movw	r30, r24
    30ec:	c5 91       	lpm	r28, Z+
    30ee:	d4 91       	lpm	r29, Z+
    30f0:	2e 5f       	subi	r18, 0xFE	; 254
    30f2:	3f 4f       	sbci	r19, 0xFF	; 255
    30f4:	f9 01       	movw	r30, r18
    30f6:	24 91       	lpm	r18, Z+
    30f8:	88 81       	ld	r24, Y
    30fa:	82 23       	and	r24, r18
    30fc:	49 f0       	breq	.+18     	; 0x3110 <pin_low+0x3e>
    30fe:	9f b7       	in	r25, 0x3f	; 63
    3100:	f8 94       	cli
    3102:	8c 91       	ld	r24, X
    3104:	20 95       	com	r18
    3106:	82 23       	and	r24, r18
    3108:	8c 93       	st	X, r24
    310a:	9f bf       	out	0x3f, r25	; 63
    310c:	00 00       	nop
    310e:	03 c0       	rjmp	.+6      	; 0x3116 <pin_low+0x44>
    3110:	87 ef       	ldi	r24, 0xF7	; 247
    3112:	0e 94 db 10 	call	0x21b6	; 0x21b6 <setError>
    3116:	df 91       	pop	r29
    3118:	cf 91       	pop	r28
    311a:	08 95       	ret

0000311c <pin_high>:
    311c:	cf 93       	push	r28
    311e:	df 93       	push	r29
    3120:	9c 01       	movw	r18, r24
    3122:	00 97       	sbiw	r24, 0x00	; 0
    3124:	e1 f0       	breq	.+56     	; 0x315e <pin_high+0x42>
    3126:	fc 01       	movw	r30, r24
    3128:	85 91       	lpm	r24, Z+
    312a:	94 91       	lpm	r25, Z+
    312c:	fc 01       	movw	r30, r24
    312e:	a5 91       	lpm	r26, Z+
    3130:	b4 91       	lpm	r27, Z+
    3132:	02 96       	adiw	r24, 0x02	; 2
    3134:	fc 01       	movw	r30, r24
    3136:	c5 91       	lpm	r28, Z+
    3138:	d4 91       	lpm	r29, Z+
    313a:	2e 5f       	subi	r18, 0xFE	; 254
    313c:	3f 4f       	sbci	r19, 0xFF	; 255
    313e:	f9 01       	movw	r30, r18
    3140:	24 91       	lpm	r18, Z+
    3142:	88 81       	ld	r24, Y
    3144:	82 23       	and	r24, r18
    3146:	41 f0       	breq	.+16     	; 0x3158 <pin_high+0x3c>
    3148:	9f b7       	in	r25, 0x3f	; 63
    314a:	f8 94       	cli
    314c:	8c 91       	ld	r24, X
    314e:	82 2b       	or	r24, r18
    3150:	8c 93       	st	X, r24
    3152:	9f bf       	out	0x3f, r25	; 63
    3154:	00 00       	nop
    3156:	03 c0       	rjmp	.+6      	; 0x315e <pin_high+0x42>
    3158:	87 ef       	ldi	r24, 0xF7	; 247
    315a:	0e 94 db 10 	call	0x21b6	; 0x21b6 <setError>
    315e:	df 91       	pop	r29
    3160:	cf 91       	pop	r28
    3162:	08 95       	ret

00003164 <pin_set>:
    3164:	66 23       	and	r22, r22
    3166:	19 f0       	breq	.+6      	; 0x316e <pin_set+0xa>
    3168:	0e 94 8e 18 	call	0x311c	; 0x311c <pin_high>
    316c:	08 95       	ret
    316e:	0e 94 69 18 	call	0x30d2	; 0x30d2 <pin_low>
    3172:	08 95       	ret

00003174 <bufferFreeSpace>:
    3174:	fc 01       	movw	r30, r24
    3176:	4f b7       	in	r20, 0x3f	; 63
    3178:	f8 94       	cli
    317a:	00 97       	sbiw	r24, 0x00	; 0
    317c:	19 f4       	brne	.+6      	; 0x3184 <bufferFreeSpace+0x10>
    317e:	20 e0       	ldi	r18, 0x00	; 0
    3180:	30 e0       	ldi	r19, 0x00	; 0
    3182:	06 c0       	rjmp	.+12     	; 0x3190 <bufferFreeSpace+0x1c>
    3184:	22 81       	ldd	r18, Z+2	; 0x02
    3186:	33 81       	ldd	r19, Z+3	; 0x03
    3188:	84 81       	ldd	r24, Z+4	; 0x04
    318a:	95 81       	ldd	r25, Z+5	; 0x05
    318c:	28 1b       	sub	r18, r24
    318e:	39 0b       	sbc	r19, r25
    3190:	4f bf       	out	0x3f, r20	; 63
    3192:	c9 01       	movw	r24, r18
    3194:	08 95       	ret

00003196 <__scheduleUpdate>:
    3196:	2f 92       	push	r2
    3198:	3f 92       	push	r3
    319a:	4f 92       	push	r4
    319c:	5f 92       	push	r5
    319e:	6f 92       	push	r6
    31a0:	7f 92       	push	r7
    31a2:	8f 92       	push	r8
    31a4:	9f 92       	push	r9
    31a6:	af 92       	push	r10
    31a8:	bf 92       	push	r11
    31aa:	cf 92       	push	r12
    31ac:	df 92       	push	r13
    31ae:	ef 92       	push	r14
    31b0:	ff 92       	push	r15
    31b2:	0f 93       	push	r16
    31b4:	1f 93       	push	r17
    31b6:	df 93       	push	r29
    31b8:	cf 93       	push	r28
    31ba:	cd b7       	in	r28, 0x3d	; 61
    31bc:	de b7       	in	r29, 0x3e	; 62
    31be:	27 97       	sbiw	r28, 0x07	; 7
    31c0:	0f b6       	in	r0, 0x3f	; 63
    31c2:	f8 94       	cli
    31c4:	de bf       	out	0x3e, r29	; 62
    31c6:	0f be       	out	0x3f, r0	; 63
    31c8:	cd bf       	out	0x3d, r28	; 61
    31ca:	80 91 6e 00 	lds	r24, 0x006E
    31ce:	8b 7f       	andi	r24, 0xFB	; 251
    31d0:	80 93 6e 00 	sts	0x006E, r24
    31d4:	2f b7       	in	r18, 0x3f	; 63
    31d6:	2f 83       	std	Y+7, r18	; 0x07
#endif


#ifndef _WINDOWS_
static __inline__ uint8_t __iCliRetVal(void){ cli(); return 1; }
static __inline__ uint8_t __iSeiRetVal(void){ sei(); return 1; }
    31d8:	78 94       	sei
    31da:	8f ef       	ldi	r24, 0xFF	; 255
    31dc:	80 93 e8 0f 	sts	0x0FE8, r24
    31e0:	10 92 e9 0f 	sts	0x0FE9, r1
    31e4:	80 91 64 05 	lds	r24, 0x0564
    31e8:	48 2f       	mov	r20, r24
    31ea:	50 e0       	ldi	r21, 0x00	; 0
    31ec:	41 50       	subi	r20, 0x01	; 1
    31ee:	50 40       	sbci	r21, 0x00	; 0
    31f0:	5e 83       	std	Y+6, r21	; 0x06
    31f2:	4d 83       	std	Y+5, r20	; 0x05
    31f4:	8d e0       	ldi	r24, 0x0D	; 13
    31f6:	90 e0       	ldi	r25, 0x00	; 0
    31f8:	48 9f       	mul	r20, r24
    31fa:	50 01       	movw	r10, r0
    31fc:	49 9f       	mul	r20, r25
    31fe:	b0 0c       	add	r11, r0
    3200:	58 9f       	mul	r21, r24
    3202:	b0 0c       	add	r11, r0
    3204:	11 24       	eor	r1, r1
    3206:	ab ed       	ldi	r26, 0xDB	; 219
    3208:	bf e0       	ldi	r27, 0x0F	; 15
    320a:	aa 0e       	add	r10, r26
    320c:	bb 1e       	adc	r11, r27
    320e:	66 24       	eor	r6, r6
    3210:	77 24       	eor	r7, r7
    3212:	43 01       	movw	r8, r6
    3214:	56 c0       	rjmp	.+172    	; 0x32c2 <__scheduleUpdate+0x12c>
    3216:	f5 01       	movw	r30, r10
    3218:	80 81       	ld	r24, Z
    321a:	88 23       	and	r24, r24
    321c:	09 f4       	brne	.+2      	; 0x3220 <__scheduleUpdate+0x8a>
    321e:	48 c0       	rjmp	.+144    	; 0x32b0 <__scheduleUpdate+0x11a>
    3220:	21 84       	ldd	r2, Z+9	; 0x09
    3222:	32 84       	ldd	r3, Z+10	; 0x0a
    3224:	43 84       	ldd	r4, Z+11	; 0x0b
    3226:	54 84       	ldd	r5, Z+12	; 0x0c
    3228:	c5 80       	ldd	r12, Z+5	; 0x05
    322a:	d6 80       	ldd	r13, Z+6	; 0x06
    322c:	e7 80       	ldd	r14, Z+7	; 0x07
    322e:	f0 84       	ldd	r15, Z+8	; 0x08
    3230:	c2 01       	movw	r24, r4
    3232:	b1 01       	movw	r22, r2
    3234:	a7 01       	movw	r20, r14
    3236:	96 01       	movw	r18, r12
    3238:	8e 01       	movw	r16, r28
    323a:	0f 5f       	subi	r16, 0xFF	; 255
    323c:	1f 4f       	sbci	r17, 0xFF	; 255
    323e:	0e 94 1c 18 	call	0x3038	; 0x3038 <clockHasElapsedGetOverflow>
    3242:	88 23       	and	r24, r24
    3244:	19 f1       	breq	.+70     	; 0x328c <__scheduleUpdate+0xf6>
    3246:	d5 01       	movw	r26, r10
    3248:	11 96       	adiw	r26, 0x01	; 1
    324a:	ed 91       	ld	r30, X+
    324c:	fc 91       	ld	r31, X
    324e:	12 97       	sbiw	r26, 0x02	; 2
    3250:	13 96       	adiw	r26, 0x03	; 3
    3252:	8d 91       	ld	r24, X+
    3254:	9c 91       	ld	r25, X
    3256:	14 97       	sbiw	r26, 0x04	; 4
    3258:	1c 92       	st	X, r1
    325a:	20 91 ea 0f 	lds	r18, 0x0FEA
    325e:	30 91 eb 0f 	lds	r19, 0x0FEB
    3262:	21 50       	subi	r18, 0x01	; 1
    3264:	30 40       	sbci	r19, 0x00	; 0
    3266:	30 93 eb 0f 	sts	0x0FEB, r19
    326a:	20 93 ea 0f 	sts	0x0FEA, r18
    326e:	c2 0c       	add	r12, r2
    3270:	d3 1c       	adc	r13, r3
    3272:	e4 1c       	adc	r14, r4
    3274:	f5 1c       	adc	r15, r5
    3276:	09 81       	ldd	r16, Y+1	; 0x01
    3278:	1a 81       	ldd	r17, Y+2	; 0x02
    327a:	2b 81       	ldd	r18, Y+3	; 0x03
    327c:	3c 81       	ldd	r19, Y+4	; 0x04
    327e:	b7 01       	movw	r22, r14
    3280:	a6 01       	movw	r20, r12
    3282:	09 95       	icall
    3284:	bf ef       	ldi	r27, 0xFF	; 255
    3286:	b0 93 e9 0f 	sts	0x0FE9, r27
    328a:	12 c0       	rjmp	.+36     	; 0x32b0 <__scheduleUpdate+0x11a>
    328c:	61 14       	cp	r6, r1
    328e:	71 04       	cpc	r7, r1
    3290:	81 04       	cpc	r8, r1
    3292:	91 04       	cpc	r9, r1
    3294:	49 f0       	breq	.+18     	; 0x32a8 <__scheduleUpdate+0x112>
    3296:	89 81       	ldd	r24, Y+1	; 0x01
    3298:	9a 81       	ldd	r25, Y+2	; 0x02
    329a:	ab 81       	ldd	r26, Y+3	; 0x03
    329c:	bc 81       	ldd	r27, Y+4	; 0x04
    329e:	86 15       	cp	r24, r6
    32a0:	97 05       	cpc	r25, r7
    32a2:	a8 05       	cpc	r26, r8
    32a4:	b9 05       	cpc	r27, r9
    32a6:	20 f4       	brcc	.+8      	; 0x32b0 <__scheduleUpdate+0x11a>
    32a8:	69 80       	ldd	r6, Y+1	; 0x01
    32aa:	7a 80       	ldd	r7, Y+2	; 0x02
    32ac:	8b 80       	ldd	r8, Y+3	; 0x03
    32ae:	9c 80       	ldd	r9, Y+4	; 0x04
    32b0:	ed 81       	ldd	r30, Y+5	; 0x05
    32b2:	fe 81       	ldd	r31, Y+6	; 0x06
    32b4:	31 97       	sbiw	r30, 0x01	; 1
    32b6:	fe 83       	std	Y+6, r31	; 0x06
    32b8:	ed 83       	std	Y+5, r30	; 0x05
    32ba:	23 ef       	ldi	r18, 0xF3	; 243
    32bc:	3f ef       	ldi	r19, 0xFF	; 255
    32be:	a2 0e       	add	r10, r18
    32c0:	b3 1e       	adc	r11, r19
    32c2:	4d 81       	ldd	r20, Y+5	; 0x05
    32c4:	5e 81       	ldd	r21, Y+6	; 0x06
    32c6:	4f 5f       	subi	r20, 0xFF	; 255
    32c8:	5f 4f       	sbci	r21, 0xFF	; 255
    32ca:	09 f0       	breq	.+2      	; 0x32ce <__scheduleUpdate+0x138>
    32cc:	a4 cf       	rjmp	.-184    	; 0x3216 <__scheduleUpdate+0x80>
    32ce:	80 91 e9 0f 	lds	r24, 0x0FE9
    32d2:	88 23       	and	r24, r24
    32d4:	09 f0       	breq	.+2      	; 0x32d8 <__scheduleUpdate+0x142>
    32d6:	84 cf       	rjmp	.-248    	; 0x31e0 <__scheduleUpdate+0x4a>
    32d8:	10 92 e8 0f 	sts	0x0FE8, r1
    32dc:	80 91 ea 0f 	lds	r24, 0x0FEA
    32e0:	90 91 eb 0f 	lds	r25, 0x0FEB
    32e4:	18 16       	cp	r1, r24
    32e6:	19 06       	cpc	r1, r25
    32e8:	d4 f4       	brge	.+52     	; 0x331e <__scheduleUpdate+0x188>
    32ea:	26 b5       	in	r18, 0x26	; 38
    32ec:	30 e0       	ldi	r19, 0x00	; 0
    32ee:	c9 01       	movw	r24, r18
    32f0:	6a ef       	ldi	r22, 0xFA	; 250
    32f2:	70 e0       	ldi	r23, 0x00	; 0
    32f4:	0e 94 b3 21 	call	0x4366	; 0x4366 <__udivmodhi4>
    32f8:	86 e0       	ldi	r24, 0x06	; 6
    32fa:	9f ef       	ldi	r25, 0xFF	; 255
    32fc:	dc 01       	movw	r26, r24
    32fe:	6a 9f       	mul	r22, r26
    3300:	c0 01       	movw	r24, r0
    3302:	6b 9f       	mul	r22, r27
    3304:	90 0d       	add	r25, r0
    3306:	7a 9f       	mul	r23, r26
    3308:	90 0d       	add	r25, r0
    330a:	11 24       	eor	r1, r1
    330c:	82 0f       	add	r24, r18
    330e:	93 1f       	adc	r25, r19
    3310:	88 bd       	out	0x28, r24	; 40
    3312:	aa 9a       	sbi	0x15, 2	; 21
    3314:	80 91 6e 00 	lds	r24, 0x006E
    3318:	84 60       	ori	r24, 0x04	; 4
    331a:	80 93 6e 00 	sts	0x006E, r24
static __inline__ void __iRestore(const  uint8_t *__s){ SREG = *__s; __asm__ volatile ("" ::: "memory");}
    331e:	bf 81       	ldd	r27, Y+7	; 0x07
    3320:	bf bf       	out	0x3f, r27	; 63
    3322:	27 96       	adiw	r28, 0x07	; 7
    3324:	0f b6       	in	r0, 0x3f	; 63
    3326:	f8 94       	cli
    3328:	de bf       	out	0x3e, r29	; 62
    332a:	0f be       	out	0x3f, r0	; 63
    332c:	cd bf       	out	0x3d, r28	; 61
    332e:	cf 91       	pop	r28
    3330:	df 91       	pop	r29
    3332:	1f 91       	pop	r17
    3334:	0f 91       	pop	r16
    3336:	ff 90       	pop	r15
    3338:	ef 90       	pop	r14
    333a:	df 90       	pop	r13
    333c:	cf 90       	pop	r12
    333e:	bf 90       	pop	r11
    3340:	af 90       	pop	r10
    3342:	9f 90       	pop	r9
    3344:	8f 90       	pop	r8
    3346:	7f 90       	pop	r7
    3348:	6f 90       	pop	r6
    334a:	5f 90       	pop	r5
    334c:	4f 90       	pop	r4
    334e:	3f 90       	pop	r3
    3350:	2f 90       	pop	r2
    3352:	08 95       	ret

00003354 <__vector_22>:
    3354:	1f 92       	push	r1
    3356:	0f 92       	push	r0
    3358:	0f b6       	in	r0, 0x3f	; 63
    335a:	0f 92       	push	r0
    335c:	11 24       	eor	r1, r1
    335e:	2f 93       	push	r18
    3360:	3f 93       	push	r19
    3362:	4f 93       	push	r20
    3364:	5f 93       	push	r21
    3366:	6f 93       	push	r22
    3368:	7f 93       	push	r23
    336a:	8f 93       	push	r24
    336c:	9f 93       	push	r25
    336e:	af 93       	push	r26
    3370:	bf 93       	push	r27
    3372:	ef 93       	push	r30
    3374:	ff 93       	push	r31
    3376:	0e 94 cb 18 	call	0x3196	; 0x3196 <__scheduleUpdate>
    337a:	ff 91       	pop	r31
    337c:	ef 91       	pop	r30
    337e:	bf 91       	pop	r27
    3380:	af 91       	pop	r26
    3382:	9f 91       	pop	r25
    3384:	8f 91       	pop	r24
    3386:	7f 91       	pop	r23
    3388:	6f 91       	pop	r22
    338a:	5f 91       	pop	r21
    338c:	4f 91       	pop	r20
    338e:	3f 91       	pop	r19
    3390:	2f 91       	pop	r18
    3392:	0f 90       	pop	r0
    3394:	0f be       	out	0x3f, r0	; 63
    3396:	0f 90       	pop	r0
    3398:	1f 90       	pop	r1
    339a:	18 95       	reti

0000339c <scheduleJob>:
    339c:	2f 92       	push	r2
    339e:	3f 92       	push	r3
    33a0:	4f 92       	push	r4
    33a2:	5f 92       	push	r5
    33a4:	6f 92       	push	r6
    33a6:	7f 92       	push	r7
    33a8:	8f 92       	push	r8
    33aa:	9f 92       	push	r9
    33ac:	af 92       	push	r10
    33ae:	bf 92       	push	r11
    33b0:	cf 92       	push	r12
    33b2:	df 92       	push	r13
    33b4:	ef 92       	push	r14
    33b6:	ff 92       	push	r15
    33b8:	0f 93       	push	r16
    33ba:	1f 93       	push	r17
    33bc:	df 93       	push	r29
    33be:	cf 93       	push	r28
    33c0:	00 d0       	rcall	.+0      	; 0x33c2 <scheduleJob+0x26>
    33c2:	00 d0       	rcall	.+0      	; 0x33c4 <scheduleJob+0x28>
    33c4:	cd b7       	in	r28, 0x3d	; 61
    33c6:	de b7       	in	r29, 0x3e	; 62
    33c8:	1c 01       	movw	r2, r24
    33ca:	2b 01       	movw	r4, r22
    33cc:	49 01       	movw	r8, r18
    33ce:	5a 01       	movw	r10, r20
    33d0:	67 01       	movw	r12, r14
    33d2:	78 01       	movw	r14, r16
    33d4:	88 ee       	ldi	r24, 0xE8	; 232
    33d6:	c8 16       	cp	r12, r24
    33d8:	83 e0       	ldi	r24, 0x03	; 3
    33da:	d8 06       	cpc	r13, r24
    33dc:	80 e0       	ldi	r24, 0x00	; 0
    33de:	e8 06       	cpc	r14, r24
    33e0:	80 e0       	ldi	r24, 0x00	; 0
    33e2:	f8 06       	cpc	r15, r24
    33e4:	38 f4       	brcc	.+14     	; 0x33f4 <scheduleJob+0x58>
    33e6:	80 91 e8 0f 	lds	r24, 0x0FE8
    33ea:	88 23       	and	r24, r24
    33ec:	c1 f1       	breq	.+112    	; 0x345e <scheduleJob+0xc2>
    33ee:	8f ef       	ldi	r24, 0xFF	; 255
    33f0:	80 93 e9 0f 	sts	0x0FE9, r24
    33f4:	6f b7       	in	r22, 0x3f	; 63
#endif  /* C++ */
#endif


#ifndef _WINDOWS_
static __inline__ uint8_t __iCliRetVal(void){ cli(); return 1; }
    33f6:	f8 94       	cli
    33f8:	80 91 64 05 	lds	r24, 0x0564
    33fc:	48 2f       	mov	r20, r24
    33fe:	50 e0       	ldi	r21, 0x00	; 0
    3400:	ab ed       	ldi	r26, 0xDB	; 219
    3402:	bf e0       	ldi	r27, 0x0F	; 15
    3404:	20 e0       	ldi	r18, 0x00	; 0
    3406:	30 e0       	ldi	r19, 0x00	; 0
    3408:	20 c0       	rjmp	.+64     	; 0x344a <scheduleJob+0xae>
    340a:	fd 01       	movw	r30, r26
    340c:	8c 91       	ld	r24, X
    340e:	1d 96       	adiw	r26, 0x0d	; 13
    3410:	88 23       	and	r24, r24
    3412:	c9 f4       	brne	.+50     	; 0x3446 <scheduleJob+0xaa>
    3414:	8f ef       	ldi	r24, 0xFF	; 255
    3416:	80 83       	st	Z, r24
    3418:	32 82       	std	Z+2, r3	; 0x02
    341a:	21 82       	std	Z+1, r2	; 0x01
    341c:	54 82       	std	Z+4, r5	; 0x04
    341e:	43 82       	std	Z+3, r4	; 0x03
    3420:	81 86       	std	Z+9, r8	; 0x09
    3422:	92 86       	std	Z+10, r9	; 0x0a
    3424:	a3 86       	std	Z+11, r10	; 0x0b
    3426:	b4 86       	std	Z+12, r11	; 0x0c
    3428:	c5 82       	std	Z+5, r12	; 0x05
    342a:	d6 82       	std	Z+6, r13	; 0x06
    342c:	e7 82       	std	Z+7, r14	; 0x07
    342e:	f0 86       	std	Z+8, r15	; 0x08
    3430:	80 91 ea 0f 	lds	r24, 0x0FEA
    3434:	90 91 eb 0f 	lds	r25, 0x0FEB
    3438:	01 96       	adiw	r24, 0x01	; 1
    343a:	90 93 eb 0f 	sts	0x0FEB, r25
    343e:	80 93 ea 0f 	sts	0x0FEA, r24
    3442:	8f ef       	ldi	r24, 0xFF	; 255
    3444:	06 c0       	rjmp	.+12     	; 0x3452 <scheduleJob+0xb6>
    3446:	2f 5f       	subi	r18, 0xFF	; 255
    3448:	3f 4f       	sbci	r19, 0xFF	; 255
    344a:	24 17       	cp	r18, r20
    344c:	35 07       	cpc	r19, r21
    344e:	ec f2       	brlt	.-70     	; 0x340a <scheduleJob+0x6e>
    3450:	80 e0       	ldi	r24, 0x00	; 0
static __inline__ uint8_t __iSeiRetVal(void){ sei(); return 1; }
static __inline__ void __iRestore(const  uint8_t *__s){ SREG = *__s; __asm__ volatile ("" ::: "memory");}
    3452:	6f bf       	out	0x3f, r22	; 63
    3454:	88 23       	and	r24, r24
    3456:	f1 f4       	brne	.+60     	; 0x3494 <scheduleJob+0xf8>
    3458:	8f ef       	ldi	r24, 0xFF	; 255
    345a:	0e 94 db 10 	call	0x21b6	; 0x21b6 <setError>
    345e:	3e 01       	movw	r6, r28
    3460:	08 94       	sec
    3462:	61 1c       	adc	r6, r1
    3464:	71 1c       	adc	r7, r1
    3466:	c5 01       	movw	r24, r10
    3468:	b4 01       	movw	r22, r8
    346a:	a7 01       	movw	r20, r14
    346c:	96 01       	movw	r18, r12
    346e:	83 01       	movw	r16, r6
    3470:	0e 94 1c 18 	call	0x3038	; 0x3038 <clockHasElapsedGetOverflow>
    3474:	88 23       	and	r24, r24
    3476:	b9 f3       	breq	.-18     	; 0x3466 <scheduleJob+0xca>
    3478:	c8 0c       	add	r12, r8
    347a:	d9 1c       	adc	r13, r9
    347c:	ea 1c       	adc	r14, r10
    347e:	fb 1c       	adc	r15, r11
    3480:	09 81       	ldd	r16, Y+1	; 0x01
    3482:	1a 81       	ldd	r17, Y+2	; 0x02
    3484:	2b 81       	ldd	r18, Y+3	; 0x03
    3486:	3c 81       	ldd	r19, Y+4	; 0x04
    3488:	c2 01       	movw	r24, r4
    348a:	b7 01       	movw	r22, r14
    348c:	a6 01       	movw	r20, r12
    348e:	f1 01       	movw	r30, r2
    3490:	09 95       	icall
    3492:	06 c0       	rjmp	.+12     	; 0x34a0 <scheduleJob+0x104>
    3494:	80 91 e8 0f 	lds	r24, 0x0FE8
    3498:	88 23       	and	r24, r24
    349a:	11 f4       	brne	.+4      	; 0x34a0 <scheduleJob+0x104>
    349c:	0e 94 cb 18 	call	0x3196	; 0x3196 <__scheduleUpdate>
    34a0:	0f 90       	pop	r0
    34a2:	0f 90       	pop	r0
    34a4:	0f 90       	pop	r0
    34a6:	0f 90       	pop	r0
    34a8:	cf 91       	pop	r28
    34aa:	df 91       	pop	r29
    34ac:	1f 91       	pop	r17
    34ae:	0f 91       	pop	r16
    34b0:	ff 90       	pop	r15
    34b2:	ef 90       	pop	r14
    34b4:	df 90       	pop	r13
    34b6:	cf 90       	pop	r12
    34b8:	bf 90       	pop	r11
    34ba:	af 90       	pop	r10
    34bc:	9f 90       	pop	r9
    34be:	8f 90       	pop	r8
    34c0:	7f 90       	pop	r7
    34c2:	6f 90       	pop	r6
    34c4:	5f 90       	pop	r5
    34c6:	4f 90       	pop	r4
    34c8:	3f 90       	pop	r3
    34ca:	2f 90       	pop	r2
    34cc:	08 95       	ret

000034ce <vfprintf>:
    34ce:	ab e0       	ldi	r26, 0x0B	; 11
    34d0:	b0 e0       	ldi	r27, 0x00	; 0
    34d2:	ed e6       	ldi	r30, 0x6D	; 109
    34d4:	fa e1       	ldi	r31, 0x1A	; 26
    34d6:	0c 94 08 22 	jmp	0x4410	; 0x4410 <__prologue_saves__+0x8>
    34da:	5c 01       	movw	r10, r24
    34dc:	4b 01       	movw	r8, r22
    34de:	7a 01       	movw	r14, r20
    34e0:	fc 01       	movw	r30, r24
    34e2:	17 82       	std	Z+7, r1	; 0x07
    34e4:	16 82       	std	Z+6, r1	; 0x06
    34e6:	83 81       	ldd	r24, Z+3	; 0x03
    34e8:	81 fd       	sbrc	r24, 1
    34ea:	08 c0       	rjmp	.+16     	; 0x34fc <vfprintf+0x2e>
    34ec:	6f ef       	ldi	r22, 0xFF	; 255
    34ee:	7f ef       	ldi	r23, 0xFF	; 255
    34f0:	08 c1       	rjmp	.+528    	; 0x3702 <vfprintf+0x234>
    34f2:	42 e0       	ldi	r20, 0x02	; 2
    34f4:	50 e0       	ldi	r21, 0x00	; 0
    34f6:	e4 0e       	add	r14, r20
    34f8:	f5 1e       	adc	r15, r21
    34fa:	04 c0       	rjmp	.+8      	; 0x3504 <vfprintf+0x36>
    34fc:	3e 01       	movw	r6, r28
    34fe:	08 94       	sec
    3500:	61 1c       	adc	r6, r1
    3502:	71 1c       	adc	r7, r1
    3504:	f5 01       	movw	r30, r10
    3506:	d3 80       	ldd	r13, Z+3	; 0x03
    3508:	f4 01       	movw	r30, r8
    350a:	d3 fc       	sbrc	r13, 3
    350c:	85 91       	lpm	r24, Z+
    350e:	d3 fe       	sbrs	r13, 3
    3510:	81 91       	ld	r24, Z+
    3512:	4f 01       	movw	r8, r30
    3514:	88 23       	and	r24, r24
    3516:	09 f4       	brne	.+2      	; 0x351a <vfprintf+0x4c>
    3518:	f1 c0       	rjmp	.+482    	; 0x36fc <vfprintf+0x22e>
    351a:	85 32       	cpi	r24, 0x25	; 37
    351c:	59 f4       	brne	.+22     	; 0x3534 <vfprintf+0x66>
    351e:	d3 fc       	sbrc	r13, 3
    3520:	65 91       	lpm	r22, Z+
    3522:	d3 fe       	sbrs	r13, 3
    3524:	61 91       	ld	r22, Z+
    3526:	4f 01       	movw	r8, r30
    3528:	65 32       	cpi	r22, 0x25	; 37
    352a:	19 f0       	breq	.+6      	; 0x3532 <vfprintf+0x64>
    352c:	06 2f       	mov	r16, r22
    352e:	10 e0       	ldi	r17, 0x00	; 0
    3530:	1b c0       	rjmp	.+54     	; 0x3568 <vfprintf+0x9a>
    3532:	85 e2       	ldi	r24, 0x25	; 37
    3534:	90 e0       	ldi	r25, 0x00	; 0
    3536:	2b c0       	rjmp	.+86     	; 0x358e <vfprintf+0xc0>
    3538:	00 23       	and	r16, r16
    353a:	09 f4       	brne	.+2      	; 0x353e <vfprintf+0x70>
    353c:	df c0       	rjmp	.+446    	; 0x36fc <vfprintf+0x22e>
    353e:	8b ee       	ldi	r24, 0xEB	; 235
    3540:	90 e0       	ldi	r25, 0x00	; 0
    3542:	60 2f       	mov	r22, r16
    3544:	70 e0       	ldi	r23, 0x00	; 0
    3546:	0e 94 36 1e 	call	0x3c6c	; 0x3c6c <strchr_P>
    354a:	89 2b       	or	r24, r25
    354c:	39 f4       	brne	.+14     	; 0x355c <vfprintf+0x8e>
    354e:	03 32       	cpi	r16, 0x23	; 35
    3550:	11 f4       	brne	.+4      	; 0x3556 <vfprintf+0x88>
    3552:	10 61       	ori	r17, 0x10	; 16
    3554:	03 c0       	rjmp	.+6      	; 0x355c <vfprintf+0x8e>
    3556:	0c 36       	cpi	r16, 0x6C	; 108
    3558:	61 f4       	brne	.+24     	; 0x3572 <vfprintf+0xa4>
    355a:	10 68       	ori	r17, 0x80	; 128
    355c:	f4 01       	movw	r30, r8
    355e:	d3 fc       	sbrc	r13, 3
    3560:	05 91       	lpm	r16, Z+
    3562:	d3 fe       	sbrs	r13, 3
    3564:	01 91       	ld	r16, Z+
    3566:	4f 01       	movw	r8, r30
    3568:	17 ff       	sbrs	r17, 7
    356a:	e6 cf       	rjmp	.-52     	; 0x3538 <vfprintf+0x6a>
    356c:	00 23       	and	r16, r16
    356e:	09 f4       	brne	.+2      	; 0x3572 <vfprintf+0xa4>
    3570:	c5 c0       	rjmp	.+394    	; 0x36fc <vfprintf+0x22e>
    3572:	84 ee       	ldi	r24, 0xE4	; 228
    3574:	90 e0       	ldi	r25, 0x00	; 0
    3576:	60 2f       	mov	r22, r16
    3578:	70 e0       	ldi	r23, 0x00	; 0
    357a:	0e 94 36 1e 	call	0x3c6c	; 0x3c6c <strchr_P>
    357e:	89 2b       	or	r24, r25
    3580:	51 f0       	breq	.+20     	; 0x3596 <vfprintf+0xc8>
    3582:	44 e0       	ldi	r20, 0x04	; 4
    3584:	50 e0       	ldi	r21, 0x00	; 0
    3586:	e4 0e       	add	r14, r20
    3588:	f5 1e       	adc	r15, r21
    358a:	8f e3       	ldi	r24, 0x3F	; 63
    358c:	90 e0       	ldi	r25, 0x00	; 0
    358e:	b5 01       	movw	r22, r10
    3590:	0e 94 c0 1e 	call	0x3d80	; 0x3d80 <fputc>
    3594:	b7 cf       	rjmp	.-146    	; 0x3504 <vfprintf+0x36>
    3596:	03 36       	cpi	r16, 0x63	; 99
    3598:	29 f0       	breq	.+10     	; 0x35a4 <vfprintf+0xd6>
    359a:	03 37       	cpi	r16, 0x73	; 115
    359c:	79 f0       	breq	.+30     	; 0x35bc <vfprintf+0xee>
    359e:	03 35       	cpi	r16, 0x53	; 83
    35a0:	f1 f4       	brne	.+60     	; 0x35de <vfprintf+0x110>
    35a2:	0b c0       	rjmp	.+22     	; 0x35ba <vfprintf+0xec>
    35a4:	87 01       	movw	r16, r14
    35a6:	0e 5f       	subi	r16, 0xFE	; 254
    35a8:	1f 4f       	sbci	r17, 0xFF	; 255
    35aa:	f7 01       	movw	r30, r14
    35ac:	80 81       	ld	r24, Z
    35ae:	91 81       	ldd	r25, Z+1	; 0x01
    35b0:	b5 01       	movw	r22, r10
    35b2:	0e 94 c0 1e 	call	0x3d80	; 0x3d80 <fputc>
    35b6:	78 01       	movw	r14, r16
    35b8:	a5 cf       	rjmp	.-182    	; 0x3504 <vfprintf+0x36>
    35ba:	11 60       	ori	r17, 0x01	; 1
    35bc:	f7 01       	movw	r30, r14
    35be:	c0 80       	ld	r12, Z
    35c0:	d1 80       	ldd	r13, Z+1	; 0x01
    35c2:	04 c0       	rjmp	.+8      	; 0x35cc <vfprintf+0xfe>
    35c4:	90 e0       	ldi	r25, 0x00	; 0
    35c6:	b5 01       	movw	r22, r10
    35c8:	0e 94 c0 1e 	call	0x3d80	; 0x3d80 <fputc>
    35cc:	f6 01       	movw	r30, r12
    35ce:	10 fd       	sbrc	r17, 0
    35d0:	85 91       	lpm	r24, Z+
    35d2:	10 ff       	sbrs	r17, 0
    35d4:	81 91       	ld	r24, Z+
    35d6:	6f 01       	movw	r12, r30
    35d8:	88 23       	and	r24, r24
    35da:	a1 f7       	brne	.-24     	; 0x35c4 <vfprintf+0xf6>
    35dc:	8a cf       	rjmp	.-236    	; 0x34f2 <vfprintf+0x24>
    35de:	04 36       	cpi	r16, 0x64	; 100
    35e0:	11 f0       	breq	.+4      	; 0x35e6 <vfprintf+0x118>
    35e2:	09 36       	cpi	r16, 0x69	; 105
    35e4:	39 f5       	brne	.+78     	; 0x3634 <vfprintf+0x166>
    35e6:	17 ff       	sbrs	r17, 7
    35e8:	08 c0       	rjmp	.+16     	; 0x35fa <vfprintf+0x12c>
    35ea:	f7 01       	movw	r30, r14
    35ec:	20 81       	ld	r18, Z
    35ee:	31 81       	ldd	r19, Z+1	; 0x01
    35f0:	42 81       	ldd	r20, Z+2	; 0x02
    35f2:	53 81       	ldd	r21, Z+3	; 0x03
    35f4:	84 e0       	ldi	r24, 0x04	; 4
    35f6:	90 e0       	ldi	r25, 0x00	; 0
    35f8:	0a c0       	rjmp	.+20     	; 0x360e <vfprintf+0x140>
    35fa:	f7 01       	movw	r30, r14
    35fc:	80 81       	ld	r24, Z
    35fe:	91 81       	ldd	r25, Z+1	; 0x01
    3600:	9c 01       	movw	r18, r24
    3602:	44 27       	eor	r20, r20
    3604:	37 fd       	sbrc	r19, 7
    3606:	40 95       	com	r20
    3608:	54 2f       	mov	r21, r20
    360a:	82 e0       	ldi	r24, 0x02	; 2
    360c:	90 e0       	ldi	r25, 0x00	; 0
    360e:	e8 0e       	add	r14, r24
    3610:	f9 1e       	adc	r15, r25
    3612:	1f 7e       	andi	r17, 0xEF	; 239
    3614:	57 ff       	sbrs	r21, 7
    3616:	08 c0       	rjmp	.+16     	; 0x3628 <vfprintf+0x15a>
    3618:	50 95       	com	r21
    361a:	40 95       	com	r20
    361c:	30 95       	com	r19
    361e:	21 95       	neg	r18
    3620:	3f 4f       	sbci	r19, 0xFF	; 255
    3622:	4f 4f       	sbci	r20, 0xFF	; 255
    3624:	5f 4f       	sbci	r21, 0xFF	; 255
    3626:	10 64       	ori	r17, 0x40	; 64
    3628:	ca 01       	movw	r24, r20
    362a:	b9 01       	movw	r22, r18
    362c:	a3 01       	movw	r20, r6
    362e:	2a e0       	ldi	r18, 0x0A	; 10
    3630:	30 e0       	ldi	r19, 0x00	; 0
    3632:	34 c0       	rjmp	.+104    	; 0x369c <vfprintf+0x1ce>
    3634:	00 37       	cpi	r16, 0x70	; 112
    3636:	a9 f0       	breq	.+42     	; 0x3662 <vfprintf+0x194>
    3638:	01 37       	cpi	r16, 0x71	; 113
    363a:	30 f4       	brcc	.+12     	; 0x3648 <vfprintf+0x17a>
    363c:	08 35       	cpi	r16, 0x58	; 88
    363e:	b1 f0       	breq	.+44     	; 0x366c <vfprintf+0x19e>
    3640:	0f 36       	cpi	r16, 0x6F	; 111
    3642:	09 f0       	breq	.+2      	; 0x3646 <vfprintf+0x178>
    3644:	5b c0       	rjmp	.+182    	; 0x36fc <vfprintf+0x22e>
    3646:	06 c0       	rjmp	.+12     	; 0x3654 <vfprintf+0x186>
    3648:	05 37       	cpi	r16, 0x75	; 117
    364a:	39 f0       	breq	.+14     	; 0x365a <vfprintf+0x18c>
    364c:	08 37       	cpi	r16, 0x78	; 120
    364e:	09 f0       	breq	.+2      	; 0x3652 <vfprintf+0x184>
    3650:	55 c0       	rjmp	.+170    	; 0x36fc <vfprintf+0x22e>
    3652:	08 c0       	rjmp	.+16     	; 0x3664 <vfprintf+0x196>
    3654:	28 e0       	ldi	r18, 0x08	; 8
    3656:	30 e0       	ldi	r19, 0x00	; 0
    3658:	0c c0       	rjmp	.+24     	; 0x3672 <vfprintf+0x1a4>
    365a:	1f 7e       	andi	r17, 0xEF	; 239
    365c:	2a e0       	ldi	r18, 0x0A	; 10
    365e:	30 e0       	ldi	r19, 0x00	; 0
    3660:	08 c0       	rjmp	.+16     	; 0x3672 <vfprintf+0x1a4>
    3662:	10 61       	ori	r17, 0x10	; 16
    3664:	14 62       	ori	r17, 0x24	; 36
    3666:	20 e1       	ldi	r18, 0x10	; 16
    3668:	30 e0       	ldi	r19, 0x00	; 0
    366a:	03 c0       	rjmp	.+6      	; 0x3672 <vfprintf+0x1a4>
    366c:	14 60       	ori	r17, 0x04	; 4
    366e:	20 e1       	ldi	r18, 0x10	; 16
    3670:	32 e0       	ldi	r19, 0x02	; 2
    3672:	17 ff       	sbrs	r17, 7
    3674:	08 c0       	rjmp	.+16     	; 0x3686 <vfprintf+0x1b8>
    3676:	f7 01       	movw	r30, r14
    3678:	60 81       	ld	r22, Z
    367a:	71 81       	ldd	r23, Z+1	; 0x01
    367c:	82 81       	ldd	r24, Z+2	; 0x02
    367e:	93 81       	ldd	r25, Z+3	; 0x03
    3680:	44 e0       	ldi	r20, 0x04	; 4
    3682:	50 e0       	ldi	r21, 0x00	; 0
    3684:	08 c0       	rjmp	.+16     	; 0x3696 <vfprintf+0x1c8>
    3686:	f7 01       	movw	r30, r14
    3688:	80 81       	ld	r24, Z
    368a:	91 81       	ldd	r25, Z+1	; 0x01
    368c:	bc 01       	movw	r22, r24
    368e:	80 e0       	ldi	r24, 0x00	; 0
    3690:	90 e0       	ldi	r25, 0x00	; 0
    3692:	42 e0       	ldi	r20, 0x02	; 2
    3694:	50 e0       	ldi	r21, 0x00	; 0
    3696:	e4 0e       	add	r14, r20
    3698:	f5 1e       	adc	r15, r21
    369a:	a3 01       	movw	r20, r6
    369c:	0e 94 ec 1e 	call	0x3dd8	; 0x3dd8 <__ultoa_invert>
    36a0:	d8 2e       	mov	r13, r24
    36a2:	d6 18       	sub	r13, r6
    36a4:	01 2f       	mov	r16, r17
    36a6:	10 e0       	ldi	r17, 0x00	; 0
    36a8:	06 ff       	sbrs	r16, 6
    36aa:	05 c0       	rjmp	.+10     	; 0x36b6 <vfprintf+0x1e8>
    36ac:	8d e2       	ldi	r24, 0x2D	; 45
    36ae:	90 e0       	ldi	r25, 0x00	; 0
    36b0:	b5 01       	movw	r22, r10
    36b2:	0e 94 c0 1e 	call	0x3d80	; 0x3d80 <fputc>
    36b6:	04 ff       	sbrs	r16, 4
    36b8:	15 c0       	rjmp	.+42     	; 0x36e4 <vfprintf+0x216>
    36ba:	fe 01       	movw	r30, r28
    36bc:	ed 0d       	add	r30, r13
    36be:	f1 1d       	adc	r31, r1
    36c0:	80 81       	ld	r24, Z
    36c2:	80 33       	cpi	r24, 0x30	; 48
    36c4:	79 f0       	breq	.+30     	; 0x36e4 <vfprintf+0x216>
    36c6:	80 e3       	ldi	r24, 0x30	; 48
    36c8:	90 e0       	ldi	r25, 0x00	; 0
    36ca:	b5 01       	movw	r22, r10
    36cc:	0e 94 c0 1e 	call	0x3d80	; 0x3d80 <fputc>
    36d0:	02 ff       	sbrs	r16, 2
    36d2:	08 c0       	rjmp	.+16     	; 0x36e4 <vfprintf+0x216>
    36d4:	00 72       	andi	r16, 0x20	; 32
    36d6:	10 70       	andi	r17, 0x00	; 0
    36d8:	c8 01       	movw	r24, r16
    36da:	88 5a       	subi	r24, 0xA8	; 168
    36dc:	9f 4f       	sbci	r25, 0xFF	; 255
    36de:	b5 01       	movw	r22, r10
    36e0:	0e 94 c0 1e 	call	0x3d80	; 0x3d80 <fputc>
    36e4:	da 94       	dec	r13
    36e6:	f3 01       	movw	r30, r6
    36e8:	ed 0d       	add	r30, r13
    36ea:	f1 1d       	adc	r31, r1
    36ec:	80 81       	ld	r24, Z
    36ee:	90 e0       	ldi	r25, 0x00	; 0
    36f0:	b5 01       	movw	r22, r10
    36f2:	0e 94 c0 1e 	call	0x3d80	; 0x3d80 <fputc>
    36f6:	dd 20       	and	r13, r13
    36f8:	a9 f7       	brne	.-22     	; 0x36e4 <vfprintf+0x216>
    36fa:	04 cf       	rjmp	.-504    	; 0x3504 <vfprintf+0x36>
    36fc:	f5 01       	movw	r30, r10
    36fe:	66 81       	ldd	r22, Z+6	; 0x06
    3700:	77 81       	ldd	r23, Z+7	; 0x07
    3702:	cb 01       	movw	r24, r22
    3704:	2b 96       	adiw	r28, 0x0b	; 11
    3706:	ee e0       	ldi	r30, 0x0E	; 14
    3708:	0c 94 24 22 	jmp	0x4448	; 0x4448 <__epilogue_restores__+0x8>

0000370c <__subsf3>:
    370c:	50 58       	subi	r21, 0x80	; 128

0000370e <__addsf3>:
    370e:	bb 27       	eor	r27, r27
    3710:	aa 27       	eor	r26, r26
    3712:	0e d0       	rcall	.+28     	; 0x3730 <__addsf3x>
    3714:	e5 c0       	rjmp	.+458    	; 0x38e0 <__fp_round>
    3716:	d6 d0       	rcall	.+428    	; 0x38c4 <__fp_pscA>
    3718:	30 f0       	brcs	.+12     	; 0x3726 <__addsf3+0x18>
    371a:	db d0       	rcall	.+438    	; 0x38d2 <__fp_pscB>
    371c:	20 f0       	brcs	.+8      	; 0x3726 <__addsf3+0x18>
    371e:	31 f4       	brne	.+12     	; 0x372c <__addsf3+0x1e>
    3720:	9f 3f       	cpi	r25, 0xFF	; 255
    3722:	11 f4       	brne	.+4      	; 0x3728 <__addsf3+0x1a>
    3724:	1e f4       	brtc	.+6      	; 0x372c <__addsf3+0x1e>
    3726:	cb c0       	rjmp	.+406    	; 0x38be <__fp_nan>
    3728:	0e f4       	brtc	.+2      	; 0x372c <__addsf3+0x1e>
    372a:	e0 95       	com	r30
    372c:	e7 fb       	bst	r30, 7
    372e:	c1 c0       	rjmp	.+386    	; 0x38b2 <__fp_inf>

00003730 <__addsf3x>:
    3730:	e9 2f       	mov	r30, r25
    3732:	e7 d0       	rcall	.+462    	; 0x3902 <__fp_split3>
    3734:	80 f3       	brcs	.-32     	; 0x3716 <__addsf3+0x8>
    3736:	ba 17       	cp	r27, r26
    3738:	62 07       	cpc	r22, r18
    373a:	73 07       	cpc	r23, r19
    373c:	84 07       	cpc	r24, r20
    373e:	95 07       	cpc	r25, r21
    3740:	18 f0       	brcs	.+6      	; 0x3748 <__addsf3x+0x18>
    3742:	71 f4       	brne	.+28     	; 0x3760 <__addsf3x+0x30>
    3744:	9e f5       	brtc	.+102    	; 0x37ac <__addsf3x+0x7c>
    3746:	ff c0       	rjmp	.+510    	; 0x3946 <__fp_zero>
    3748:	0e f4       	brtc	.+2      	; 0x374c <__addsf3x+0x1c>
    374a:	e0 95       	com	r30
    374c:	0b 2e       	mov	r0, r27
    374e:	ba 2f       	mov	r27, r26
    3750:	a0 2d       	mov	r26, r0
    3752:	0b 01       	movw	r0, r22
    3754:	b9 01       	movw	r22, r18
    3756:	90 01       	movw	r18, r0
    3758:	0c 01       	movw	r0, r24
    375a:	ca 01       	movw	r24, r20
    375c:	a0 01       	movw	r20, r0
    375e:	11 24       	eor	r1, r1
    3760:	ff 27       	eor	r31, r31
    3762:	59 1b       	sub	r21, r25
    3764:	99 f0       	breq	.+38     	; 0x378c <__addsf3x+0x5c>
    3766:	59 3f       	cpi	r21, 0xF9	; 249
    3768:	50 f4       	brcc	.+20     	; 0x377e <__addsf3x+0x4e>
    376a:	50 3e       	cpi	r21, 0xE0	; 224
    376c:	68 f1       	brcs	.+90     	; 0x37c8 <__addsf3x+0x98>
    376e:	1a 16       	cp	r1, r26
    3770:	f0 40       	sbci	r31, 0x00	; 0
    3772:	a2 2f       	mov	r26, r18
    3774:	23 2f       	mov	r18, r19
    3776:	34 2f       	mov	r19, r20
    3778:	44 27       	eor	r20, r20
    377a:	58 5f       	subi	r21, 0xF8	; 248
    377c:	f3 cf       	rjmp	.-26     	; 0x3764 <__addsf3x+0x34>
    377e:	46 95       	lsr	r20
    3780:	37 95       	ror	r19
    3782:	27 95       	ror	r18
    3784:	a7 95       	ror	r26
    3786:	f0 40       	sbci	r31, 0x00	; 0
    3788:	53 95       	inc	r21
    378a:	c9 f7       	brne	.-14     	; 0x377e <__addsf3x+0x4e>
    378c:	7e f4       	brtc	.+30     	; 0x37ac <__addsf3x+0x7c>
    378e:	1f 16       	cp	r1, r31
    3790:	ba 0b       	sbc	r27, r26
    3792:	62 0b       	sbc	r22, r18
    3794:	73 0b       	sbc	r23, r19
    3796:	84 0b       	sbc	r24, r20
    3798:	ba f0       	brmi	.+46     	; 0x37c8 <__addsf3x+0x98>
    379a:	91 50       	subi	r25, 0x01	; 1
    379c:	a1 f0       	breq	.+40     	; 0x37c6 <__addsf3x+0x96>
    379e:	ff 0f       	add	r31, r31
    37a0:	bb 1f       	adc	r27, r27
    37a2:	66 1f       	adc	r22, r22
    37a4:	77 1f       	adc	r23, r23
    37a6:	88 1f       	adc	r24, r24
    37a8:	c2 f7       	brpl	.-16     	; 0x379a <__addsf3x+0x6a>
    37aa:	0e c0       	rjmp	.+28     	; 0x37c8 <__addsf3x+0x98>
    37ac:	ba 0f       	add	r27, r26
    37ae:	62 1f       	adc	r22, r18
    37b0:	73 1f       	adc	r23, r19
    37b2:	84 1f       	adc	r24, r20
    37b4:	48 f4       	brcc	.+18     	; 0x37c8 <__addsf3x+0x98>
    37b6:	87 95       	ror	r24
    37b8:	77 95       	ror	r23
    37ba:	67 95       	ror	r22
    37bc:	b7 95       	ror	r27
    37be:	f7 95       	ror	r31
    37c0:	9e 3f       	cpi	r25, 0xFE	; 254
    37c2:	08 f0       	brcs	.+2      	; 0x37c6 <__addsf3x+0x96>
    37c4:	b3 cf       	rjmp	.-154    	; 0x372c <__addsf3+0x1e>
    37c6:	93 95       	inc	r25
    37c8:	88 0f       	add	r24, r24
    37ca:	08 f0       	brcs	.+2      	; 0x37ce <__addsf3x+0x9e>
    37cc:	99 27       	eor	r25, r25
    37ce:	ee 0f       	add	r30, r30
    37d0:	97 95       	ror	r25
    37d2:	87 95       	ror	r24
    37d4:	08 95       	ret

000037d6 <__fixsfsi>:
    37d6:	04 d0       	rcall	.+8      	; 0x37e0 <__fixunssfsi>
    37d8:	68 94       	set
    37da:	b1 11       	cpse	r27, r1
    37dc:	b5 c0       	rjmp	.+362    	; 0x3948 <__fp_szero>
    37de:	08 95       	ret

000037e0 <__fixunssfsi>:
    37e0:	98 d0       	rcall	.+304    	; 0x3912 <__fp_splitA>
    37e2:	88 f0       	brcs	.+34     	; 0x3806 <__fixunssfsi+0x26>
    37e4:	9f 57       	subi	r25, 0x7F	; 127
    37e6:	90 f0       	brcs	.+36     	; 0x380c <__fixunssfsi+0x2c>
    37e8:	b9 2f       	mov	r27, r25
    37ea:	99 27       	eor	r25, r25
    37ec:	b7 51       	subi	r27, 0x17	; 23
    37ee:	a0 f0       	brcs	.+40     	; 0x3818 <__fixunssfsi+0x38>
    37f0:	d1 f0       	breq	.+52     	; 0x3826 <__fixunssfsi+0x46>
    37f2:	66 0f       	add	r22, r22
    37f4:	77 1f       	adc	r23, r23
    37f6:	88 1f       	adc	r24, r24
    37f8:	99 1f       	adc	r25, r25
    37fa:	1a f0       	brmi	.+6      	; 0x3802 <__fixunssfsi+0x22>
    37fc:	ba 95       	dec	r27
    37fe:	c9 f7       	brne	.-14     	; 0x37f2 <__fixunssfsi+0x12>
    3800:	12 c0       	rjmp	.+36     	; 0x3826 <__fixunssfsi+0x46>
    3802:	b1 30       	cpi	r27, 0x01	; 1
    3804:	81 f0       	breq	.+32     	; 0x3826 <__fixunssfsi+0x46>
    3806:	9f d0       	rcall	.+318    	; 0x3946 <__fp_zero>
    3808:	b1 e0       	ldi	r27, 0x01	; 1
    380a:	08 95       	ret
    380c:	9c c0       	rjmp	.+312    	; 0x3946 <__fp_zero>
    380e:	67 2f       	mov	r22, r23
    3810:	78 2f       	mov	r23, r24
    3812:	88 27       	eor	r24, r24
    3814:	b8 5f       	subi	r27, 0xF8	; 248
    3816:	39 f0       	breq	.+14     	; 0x3826 <__fixunssfsi+0x46>
    3818:	b9 3f       	cpi	r27, 0xF9	; 249
    381a:	cc f3       	brlt	.-14     	; 0x380e <__fixunssfsi+0x2e>
    381c:	86 95       	lsr	r24
    381e:	77 95       	ror	r23
    3820:	67 95       	ror	r22
    3822:	b3 95       	inc	r27
    3824:	d9 f7       	brne	.-10     	; 0x381c <__fixunssfsi+0x3c>
    3826:	3e f4       	brtc	.+14     	; 0x3836 <__fixunssfsi+0x56>
    3828:	90 95       	com	r25
    382a:	80 95       	com	r24
    382c:	70 95       	com	r23
    382e:	61 95       	neg	r22
    3830:	7f 4f       	sbci	r23, 0xFF	; 255
    3832:	8f 4f       	sbci	r24, 0xFF	; 255
    3834:	9f 4f       	sbci	r25, 0xFF	; 255
    3836:	08 95       	ret

00003838 <__floatunsisf>:
    3838:	e8 94       	clt
    383a:	09 c0       	rjmp	.+18     	; 0x384e <__floatsisf+0x12>

0000383c <__floatsisf>:
    383c:	97 fb       	bst	r25, 7
    383e:	3e f4       	brtc	.+14     	; 0x384e <__floatsisf+0x12>
    3840:	90 95       	com	r25
    3842:	80 95       	com	r24
    3844:	70 95       	com	r23
    3846:	61 95       	neg	r22
    3848:	7f 4f       	sbci	r23, 0xFF	; 255
    384a:	8f 4f       	sbci	r24, 0xFF	; 255
    384c:	9f 4f       	sbci	r25, 0xFF	; 255
    384e:	99 23       	and	r25, r25
    3850:	a9 f0       	breq	.+42     	; 0x387c <__floatsisf+0x40>
    3852:	f9 2f       	mov	r31, r25
    3854:	96 e9       	ldi	r25, 0x96	; 150
    3856:	bb 27       	eor	r27, r27
    3858:	93 95       	inc	r25
    385a:	f6 95       	lsr	r31
    385c:	87 95       	ror	r24
    385e:	77 95       	ror	r23
    3860:	67 95       	ror	r22
    3862:	b7 95       	ror	r27
    3864:	f1 11       	cpse	r31, r1
    3866:	f8 cf       	rjmp	.-16     	; 0x3858 <__floatsisf+0x1c>
    3868:	fa f4       	brpl	.+62     	; 0x38a8 <__floatsisf+0x6c>
    386a:	bb 0f       	add	r27, r27
    386c:	11 f4       	brne	.+4      	; 0x3872 <__floatsisf+0x36>
    386e:	60 ff       	sbrs	r22, 0
    3870:	1b c0       	rjmp	.+54     	; 0x38a8 <__floatsisf+0x6c>
    3872:	6f 5f       	subi	r22, 0xFF	; 255
    3874:	7f 4f       	sbci	r23, 0xFF	; 255
    3876:	8f 4f       	sbci	r24, 0xFF	; 255
    3878:	9f 4f       	sbci	r25, 0xFF	; 255
    387a:	16 c0       	rjmp	.+44     	; 0x38a8 <__floatsisf+0x6c>
    387c:	88 23       	and	r24, r24
    387e:	11 f0       	breq	.+4      	; 0x3884 <__floatsisf+0x48>
    3880:	96 e9       	ldi	r25, 0x96	; 150
    3882:	11 c0       	rjmp	.+34     	; 0x38a6 <__floatsisf+0x6a>
    3884:	77 23       	and	r23, r23
    3886:	21 f0       	breq	.+8      	; 0x3890 <__floatsisf+0x54>
    3888:	9e e8       	ldi	r25, 0x8E	; 142
    388a:	87 2f       	mov	r24, r23
    388c:	76 2f       	mov	r23, r22
    388e:	05 c0       	rjmp	.+10     	; 0x389a <__floatsisf+0x5e>
    3890:	66 23       	and	r22, r22
    3892:	71 f0       	breq	.+28     	; 0x38b0 <__floatsisf+0x74>
    3894:	96 e8       	ldi	r25, 0x86	; 134
    3896:	86 2f       	mov	r24, r22
    3898:	70 e0       	ldi	r23, 0x00	; 0
    389a:	60 e0       	ldi	r22, 0x00	; 0
    389c:	2a f0       	brmi	.+10     	; 0x38a8 <__floatsisf+0x6c>
    389e:	9a 95       	dec	r25
    38a0:	66 0f       	add	r22, r22
    38a2:	77 1f       	adc	r23, r23
    38a4:	88 1f       	adc	r24, r24
    38a6:	da f7       	brpl	.-10     	; 0x389e <__floatsisf+0x62>
    38a8:	88 0f       	add	r24, r24
    38aa:	96 95       	lsr	r25
    38ac:	87 95       	ror	r24
    38ae:	97 f9       	bld	r25, 7
    38b0:	08 95       	ret

000038b2 <__fp_inf>:
    38b2:	97 f9       	bld	r25, 7
    38b4:	9f 67       	ori	r25, 0x7F	; 127
    38b6:	80 e8       	ldi	r24, 0x80	; 128
    38b8:	70 e0       	ldi	r23, 0x00	; 0
    38ba:	60 e0       	ldi	r22, 0x00	; 0
    38bc:	08 95       	ret

000038be <__fp_nan>:
    38be:	9f ef       	ldi	r25, 0xFF	; 255
    38c0:	80 ec       	ldi	r24, 0xC0	; 192
    38c2:	08 95       	ret

000038c4 <__fp_pscA>:
    38c4:	00 24       	eor	r0, r0
    38c6:	0a 94       	dec	r0
    38c8:	16 16       	cp	r1, r22
    38ca:	17 06       	cpc	r1, r23
    38cc:	18 06       	cpc	r1, r24
    38ce:	09 06       	cpc	r0, r25
    38d0:	08 95       	ret

000038d2 <__fp_pscB>:
    38d2:	00 24       	eor	r0, r0
    38d4:	0a 94       	dec	r0
    38d6:	12 16       	cp	r1, r18
    38d8:	13 06       	cpc	r1, r19
    38da:	14 06       	cpc	r1, r20
    38dc:	05 06       	cpc	r0, r21
    38de:	08 95       	ret

000038e0 <__fp_round>:
    38e0:	09 2e       	mov	r0, r25
    38e2:	03 94       	inc	r0
    38e4:	00 0c       	add	r0, r0
    38e6:	11 f4       	brne	.+4      	; 0x38ec <__fp_round+0xc>
    38e8:	88 23       	and	r24, r24
    38ea:	52 f0       	brmi	.+20     	; 0x3900 <__fp_round+0x20>
    38ec:	bb 0f       	add	r27, r27
    38ee:	40 f4       	brcc	.+16     	; 0x3900 <__fp_round+0x20>
    38f0:	bf 2b       	or	r27, r31
    38f2:	11 f4       	brne	.+4      	; 0x38f8 <__fp_round+0x18>
    38f4:	60 ff       	sbrs	r22, 0
    38f6:	04 c0       	rjmp	.+8      	; 0x3900 <__fp_round+0x20>
    38f8:	6f 5f       	subi	r22, 0xFF	; 255
    38fa:	7f 4f       	sbci	r23, 0xFF	; 255
    38fc:	8f 4f       	sbci	r24, 0xFF	; 255
    38fe:	9f 4f       	sbci	r25, 0xFF	; 255
    3900:	08 95       	ret

00003902 <__fp_split3>:
    3902:	57 fd       	sbrc	r21, 7
    3904:	90 58       	subi	r25, 0x80	; 128
    3906:	44 0f       	add	r20, r20
    3908:	55 1f       	adc	r21, r21
    390a:	59 f0       	breq	.+22     	; 0x3922 <__fp_splitA+0x10>
    390c:	5f 3f       	cpi	r21, 0xFF	; 255
    390e:	71 f0       	breq	.+28     	; 0x392c <__fp_splitA+0x1a>
    3910:	47 95       	ror	r20

00003912 <__fp_splitA>:
    3912:	88 0f       	add	r24, r24
    3914:	97 fb       	bst	r25, 7
    3916:	99 1f       	adc	r25, r25
    3918:	61 f0       	breq	.+24     	; 0x3932 <__fp_splitA+0x20>
    391a:	9f 3f       	cpi	r25, 0xFF	; 255
    391c:	79 f0       	breq	.+30     	; 0x393c <__fp_splitA+0x2a>
    391e:	87 95       	ror	r24
    3920:	08 95       	ret
    3922:	12 16       	cp	r1, r18
    3924:	13 06       	cpc	r1, r19
    3926:	14 06       	cpc	r1, r20
    3928:	55 1f       	adc	r21, r21
    392a:	f2 cf       	rjmp	.-28     	; 0x3910 <__fp_split3+0xe>
    392c:	46 95       	lsr	r20
    392e:	f1 df       	rcall	.-30     	; 0x3912 <__fp_splitA>
    3930:	08 c0       	rjmp	.+16     	; 0x3942 <__fp_splitA+0x30>
    3932:	16 16       	cp	r1, r22
    3934:	17 06       	cpc	r1, r23
    3936:	18 06       	cpc	r1, r24
    3938:	99 1f       	adc	r25, r25
    393a:	f1 cf       	rjmp	.-30     	; 0x391e <__fp_splitA+0xc>
    393c:	86 95       	lsr	r24
    393e:	71 05       	cpc	r23, r1
    3940:	61 05       	cpc	r22, r1
    3942:	08 94       	sec
    3944:	08 95       	ret

00003946 <__fp_zero>:
    3946:	e8 94       	clt

00003948 <__fp_szero>:
    3948:	bb 27       	eor	r27, r27
    394a:	66 27       	eor	r22, r22
    394c:	77 27       	eor	r23, r23
    394e:	cb 01       	movw	r24, r22
    3950:	97 f9       	bld	r25, 7
    3952:	08 95       	ret

00003954 <__mulsf3>:
    3954:	0b d0       	rcall	.+22     	; 0x396c <__mulsf3x>
    3956:	c4 cf       	rjmp	.-120    	; 0x38e0 <__fp_round>
    3958:	b5 df       	rcall	.-150    	; 0x38c4 <__fp_pscA>
    395a:	28 f0       	brcs	.+10     	; 0x3966 <__mulsf3+0x12>
    395c:	ba df       	rcall	.-140    	; 0x38d2 <__fp_pscB>
    395e:	18 f0       	brcs	.+6      	; 0x3966 <__mulsf3+0x12>
    3960:	95 23       	and	r25, r21
    3962:	09 f0       	breq	.+2      	; 0x3966 <__mulsf3+0x12>
    3964:	a6 cf       	rjmp	.-180    	; 0x38b2 <__fp_inf>
    3966:	ab cf       	rjmp	.-170    	; 0x38be <__fp_nan>
    3968:	11 24       	eor	r1, r1
    396a:	ee cf       	rjmp	.-36     	; 0x3948 <__fp_szero>

0000396c <__mulsf3x>:
    396c:	ca df       	rcall	.-108    	; 0x3902 <__fp_split3>
    396e:	a0 f3       	brcs	.-24     	; 0x3958 <__mulsf3+0x4>

00003970 <__mulsf3_pse>:
    3970:	95 9f       	mul	r25, r21
    3972:	d1 f3       	breq	.-12     	; 0x3968 <__mulsf3+0x14>
    3974:	95 0f       	add	r25, r21
    3976:	50 e0       	ldi	r21, 0x00	; 0
    3978:	55 1f       	adc	r21, r21
    397a:	62 9f       	mul	r22, r18
    397c:	f0 01       	movw	r30, r0
    397e:	72 9f       	mul	r23, r18
    3980:	bb 27       	eor	r27, r27
    3982:	f0 0d       	add	r31, r0
    3984:	b1 1d       	adc	r27, r1
    3986:	63 9f       	mul	r22, r19
    3988:	aa 27       	eor	r26, r26
    398a:	f0 0d       	add	r31, r0
    398c:	b1 1d       	adc	r27, r1
    398e:	aa 1f       	adc	r26, r26
    3990:	64 9f       	mul	r22, r20
    3992:	66 27       	eor	r22, r22
    3994:	b0 0d       	add	r27, r0
    3996:	a1 1d       	adc	r26, r1
    3998:	66 1f       	adc	r22, r22
    399a:	82 9f       	mul	r24, r18
    399c:	22 27       	eor	r18, r18
    399e:	b0 0d       	add	r27, r0
    39a0:	a1 1d       	adc	r26, r1
    39a2:	62 1f       	adc	r22, r18
    39a4:	73 9f       	mul	r23, r19
    39a6:	b0 0d       	add	r27, r0
    39a8:	a1 1d       	adc	r26, r1
    39aa:	62 1f       	adc	r22, r18
    39ac:	83 9f       	mul	r24, r19
    39ae:	a0 0d       	add	r26, r0
    39b0:	61 1d       	adc	r22, r1
    39b2:	22 1f       	adc	r18, r18
    39b4:	74 9f       	mul	r23, r20
    39b6:	33 27       	eor	r19, r19
    39b8:	a0 0d       	add	r26, r0
    39ba:	61 1d       	adc	r22, r1
    39bc:	23 1f       	adc	r18, r19
    39be:	84 9f       	mul	r24, r20
    39c0:	60 0d       	add	r22, r0
    39c2:	21 1d       	adc	r18, r1
    39c4:	82 2f       	mov	r24, r18
    39c6:	76 2f       	mov	r23, r22
    39c8:	6a 2f       	mov	r22, r26
    39ca:	11 24       	eor	r1, r1
    39cc:	9f 57       	subi	r25, 0x7F	; 127
    39ce:	50 40       	sbci	r21, 0x00	; 0
    39d0:	8a f0       	brmi	.+34     	; 0x39f4 <__mulsf3_pse+0x84>
    39d2:	e1 f0       	breq	.+56     	; 0x3a0c <__mulsf3_pse+0x9c>
    39d4:	88 23       	and	r24, r24
    39d6:	4a f0       	brmi	.+18     	; 0x39ea <__mulsf3_pse+0x7a>
    39d8:	ee 0f       	add	r30, r30
    39da:	ff 1f       	adc	r31, r31
    39dc:	bb 1f       	adc	r27, r27
    39de:	66 1f       	adc	r22, r22
    39e0:	77 1f       	adc	r23, r23
    39e2:	88 1f       	adc	r24, r24
    39e4:	91 50       	subi	r25, 0x01	; 1
    39e6:	50 40       	sbci	r21, 0x00	; 0
    39e8:	a9 f7       	brne	.-22     	; 0x39d4 <__mulsf3_pse+0x64>
    39ea:	9e 3f       	cpi	r25, 0xFE	; 254
    39ec:	51 05       	cpc	r21, r1
    39ee:	70 f0       	brcs	.+28     	; 0x3a0c <__mulsf3_pse+0x9c>
    39f0:	60 cf       	rjmp	.-320    	; 0x38b2 <__fp_inf>
    39f2:	aa cf       	rjmp	.-172    	; 0x3948 <__fp_szero>
    39f4:	5f 3f       	cpi	r21, 0xFF	; 255
    39f6:	ec f3       	brlt	.-6      	; 0x39f2 <__mulsf3_pse+0x82>
    39f8:	98 3e       	cpi	r25, 0xE8	; 232
    39fa:	dc f3       	brlt	.-10     	; 0x39f2 <__mulsf3_pse+0x82>
    39fc:	86 95       	lsr	r24
    39fe:	77 95       	ror	r23
    3a00:	67 95       	ror	r22
    3a02:	b7 95       	ror	r27
    3a04:	f7 95       	ror	r31
    3a06:	e7 95       	ror	r30
    3a08:	9f 5f       	subi	r25, 0xFF	; 255
    3a0a:	c1 f7       	brne	.-16     	; 0x39fc <__mulsf3_pse+0x8c>
    3a0c:	fe 2b       	or	r31, r30
    3a0e:	88 0f       	add	r24, r24
    3a10:	91 1d       	adc	r25, r1
    3a12:	96 95       	lsr	r25
    3a14:	87 95       	ror	r24
    3a16:	97 f9       	bld	r25, 7
    3a18:	08 95       	ret

00003a1a <dtostrf>:
    3a1a:	ef 92       	push	r14
    3a1c:	ff 92       	push	r15
    3a1e:	0f 93       	push	r16
    3a20:	1f 93       	push	r17
    3a22:	f2 2f       	mov	r31, r18
    3a24:	f0 2e       	mov	r15, r16
    3a26:	47 fd       	sbrc	r20, 7
    3a28:	02 c0       	rjmp	.+4      	; 0x3a2e <dtostrf+0x14>
    3a2a:	e4 e0       	ldi	r30, 0x04	; 4
    3a2c:	01 c0       	rjmp	.+2      	; 0x3a30 <dtostrf+0x16>
    3a2e:	e4 e1       	ldi	r30, 0x14	; 20
    3a30:	24 2f       	mov	r18, r20
    3a32:	33 27       	eor	r19, r19
    3a34:	27 fd       	sbrc	r18, 7
    3a36:	30 95       	com	r19
    3a38:	37 ff       	sbrs	r19, 7
    3a3a:	03 c0       	rjmp	.+6      	; 0x3a42 <dtostrf+0x28>
    3a3c:	30 95       	com	r19
    3a3e:	21 95       	neg	r18
    3a40:	3f 4f       	sbci	r19, 0xFF	; 255
    3a42:	4f 2d       	mov	r20, r15
    3a44:	51 2f       	mov	r21, r17
    3a46:	0f 2f       	mov	r16, r31
    3a48:	ee 2e       	mov	r14, r30
    3a4a:	0e 94 4a 1f 	call	0x3e94	; 0x3e94 <dtoa_prf>
    3a4e:	8f 2d       	mov	r24, r15
    3a50:	91 2f       	mov	r25, r17
    3a52:	1f 91       	pop	r17
    3a54:	0f 91       	pop	r16
    3a56:	ff 90       	pop	r15
    3a58:	ef 90       	pop	r14
    3a5a:	08 95       	ret

00003a5c <malloc>:
    3a5c:	cf 93       	push	r28
    3a5e:	df 93       	push	r29
    3a60:	bc 01       	movw	r22, r24
    3a62:	82 30       	cpi	r24, 0x02	; 2
    3a64:	91 05       	cpc	r25, r1
    3a66:	10 f4       	brcc	.+4      	; 0x3a6c <malloc+0x10>
    3a68:	62 e0       	ldi	r22, 0x02	; 2
    3a6a:	70 e0       	ldi	r23, 0x00	; 0
    3a6c:	a0 91 f6 0f 	lds	r26, 0x0FF6
    3a70:	b0 91 f7 0f 	lds	r27, 0x0FF7
    3a74:	ed 01       	movw	r28, r26
    3a76:	e0 e0       	ldi	r30, 0x00	; 0
    3a78:	f0 e0       	ldi	r31, 0x00	; 0
    3a7a:	40 e0       	ldi	r20, 0x00	; 0
    3a7c:	50 e0       	ldi	r21, 0x00	; 0
    3a7e:	21 c0       	rjmp	.+66     	; 0x3ac2 <malloc+0x66>
    3a80:	88 81       	ld	r24, Y
    3a82:	99 81       	ldd	r25, Y+1	; 0x01
    3a84:	86 17       	cp	r24, r22
    3a86:	97 07       	cpc	r25, r23
    3a88:	69 f4       	brne	.+26     	; 0x3aa4 <malloc+0x48>
    3a8a:	8a 81       	ldd	r24, Y+2	; 0x02
    3a8c:	9b 81       	ldd	r25, Y+3	; 0x03
    3a8e:	30 97       	sbiw	r30, 0x00	; 0
    3a90:	19 f0       	breq	.+6      	; 0x3a98 <malloc+0x3c>
    3a92:	93 83       	std	Z+3, r25	; 0x03
    3a94:	82 83       	std	Z+2, r24	; 0x02
    3a96:	04 c0       	rjmp	.+8      	; 0x3aa0 <malloc+0x44>
    3a98:	90 93 f7 0f 	sts	0x0FF7, r25
    3a9c:	80 93 f6 0f 	sts	0x0FF6, r24
    3aa0:	fe 01       	movw	r30, r28
    3aa2:	34 c0       	rjmp	.+104    	; 0x3b0c <malloc+0xb0>
    3aa4:	68 17       	cp	r22, r24
    3aa6:	79 07       	cpc	r23, r25
    3aa8:	38 f4       	brcc	.+14     	; 0x3ab8 <malloc+0x5c>
    3aaa:	41 15       	cp	r20, r1
    3aac:	51 05       	cpc	r21, r1
    3aae:	19 f0       	breq	.+6      	; 0x3ab6 <malloc+0x5a>
    3ab0:	84 17       	cp	r24, r20
    3ab2:	95 07       	cpc	r25, r21
    3ab4:	08 f4       	brcc	.+2      	; 0x3ab8 <malloc+0x5c>
    3ab6:	ac 01       	movw	r20, r24
    3ab8:	fe 01       	movw	r30, r28
    3aba:	8a 81       	ldd	r24, Y+2	; 0x02
    3abc:	9b 81       	ldd	r25, Y+3	; 0x03
    3abe:	9c 01       	movw	r18, r24
    3ac0:	e9 01       	movw	r28, r18
    3ac2:	20 97       	sbiw	r28, 0x00	; 0
    3ac4:	e9 f6       	brne	.-70     	; 0x3a80 <malloc+0x24>
    3ac6:	41 15       	cp	r20, r1
    3ac8:	51 05       	cpc	r21, r1
    3aca:	a9 f1       	breq	.+106    	; 0x3b36 <malloc+0xda>
    3acc:	ca 01       	movw	r24, r20
    3ace:	86 1b       	sub	r24, r22
    3ad0:	97 0b       	sbc	r25, r23
    3ad2:	04 97       	sbiw	r24, 0x04	; 4
    3ad4:	08 f4       	brcc	.+2      	; 0x3ad8 <malloc+0x7c>
    3ad6:	ba 01       	movw	r22, r20
    3ad8:	e0 e0       	ldi	r30, 0x00	; 0
    3ada:	f0 e0       	ldi	r31, 0x00	; 0
    3adc:	2a c0       	rjmp	.+84     	; 0x3b32 <malloc+0xd6>
    3ade:	8d 91       	ld	r24, X+
    3ae0:	9c 91       	ld	r25, X
    3ae2:	11 97       	sbiw	r26, 0x01	; 1
    3ae4:	84 17       	cp	r24, r20
    3ae6:	95 07       	cpc	r25, r21
    3ae8:	f9 f4       	brne	.+62     	; 0x3b28 <malloc+0xcc>
    3aea:	64 17       	cp	r22, r20
    3aec:	75 07       	cpc	r23, r21
    3aee:	81 f4       	brne	.+32     	; 0x3b10 <malloc+0xb4>
    3af0:	12 96       	adiw	r26, 0x02	; 2
    3af2:	8d 91       	ld	r24, X+
    3af4:	9c 91       	ld	r25, X
    3af6:	13 97       	sbiw	r26, 0x03	; 3
    3af8:	30 97       	sbiw	r30, 0x00	; 0
    3afa:	19 f0       	breq	.+6      	; 0x3b02 <malloc+0xa6>
    3afc:	93 83       	std	Z+3, r25	; 0x03
    3afe:	82 83       	std	Z+2, r24	; 0x02
    3b00:	04 c0       	rjmp	.+8      	; 0x3b0a <malloc+0xae>
    3b02:	90 93 f7 0f 	sts	0x0FF7, r25
    3b06:	80 93 f6 0f 	sts	0x0FF6, r24
    3b0a:	fd 01       	movw	r30, r26
    3b0c:	32 96       	adiw	r30, 0x02	; 2
    3b0e:	4f c0       	rjmp	.+158    	; 0x3bae <malloc+0x152>
    3b10:	ca 01       	movw	r24, r20
    3b12:	86 1b       	sub	r24, r22
    3b14:	97 0b       	sbc	r25, r23
    3b16:	fd 01       	movw	r30, r26
    3b18:	e8 0f       	add	r30, r24
    3b1a:	f9 1f       	adc	r31, r25
    3b1c:	61 93       	st	Z+, r22
    3b1e:	71 93       	st	Z+, r23
    3b20:	02 97       	sbiw	r24, 0x02	; 2
    3b22:	8d 93       	st	X+, r24
    3b24:	9c 93       	st	X, r25
    3b26:	43 c0       	rjmp	.+134    	; 0x3bae <malloc+0x152>
    3b28:	fd 01       	movw	r30, r26
    3b2a:	82 81       	ldd	r24, Z+2	; 0x02
    3b2c:	93 81       	ldd	r25, Z+3	; 0x03
    3b2e:	9c 01       	movw	r18, r24
    3b30:	d9 01       	movw	r26, r18
    3b32:	10 97       	sbiw	r26, 0x00	; 0
    3b34:	a1 f6       	brne	.-88     	; 0x3ade <malloc+0x82>
    3b36:	80 91 f4 0f 	lds	r24, 0x0FF4
    3b3a:	90 91 f5 0f 	lds	r25, 0x0FF5
    3b3e:	89 2b       	or	r24, r25
    3b40:	41 f4       	brne	.+16     	; 0x3b52 <malloc+0xf6>
    3b42:	80 91 67 05 	lds	r24, 0x0567
    3b46:	90 91 68 05 	lds	r25, 0x0568
    3b4a:	90 93 f5 0f 	sts	0x0FF5, r25
    3b4e:	80 93 f4 0f 	sts	0x0FF4, r24
    3b52:	40 91 69 05 	lds	r20, 0x0569
    3b56:	50 91 6a 05 	lds	r21, 0x056A
    3b5a:	41 15       	cp	r20, r1
    3b5c:	51 05       	cpc	r21, r1
    3b5e:	41 f4       	brne	.+16     	; 0x3b70 <malloc+0x114>
    3b60:	4d b7       	in	r20, 0x3d	; 61
    3b62:	5e b7       	in	r21, 0x3e	; 62
    3b64:	80 91 65 05 	lds	r24, 0x0565
    3b68:	90 91 66 05 	lds	r25, 0x0566
    3b6c:	48 1b       	sub	r20, r24
    3b6e:	59 0b       	sbc	r21, r25
    3b70:	20 91 f4 0f 	lds	r18, 0x0FF4
    3b74:	30 91 f5 0f 	lds	r19, 0x0FF5
    3b78:	24 17       	cp	r18, r20
    3b7a:	35 07       	cpc	r19, r21
    3b7c:	b0 f4       	brcc	.+44     	; 0x3baa <malloc+0x14e>
    3b7e:	ca 01       	movw	r24, r20
    3b80:	82 1b       	sub	r24, r18
    3b82:	93 0b       	sbc	r25, r19
    3b84:	86 17       	cp	r24, r22
    3b86:	97 07       	cpc	r25, r23
    3b88:	80 f0       	brcs	.+32     	; 0x3baa <malloc+0x14e>
    3b8a:	ab 01       	movw	r20, r22
    3b8c:	4e 5f       	subi	r20, 0xFE	; 254
    3b8e:	5f 4f       	sbci	r21, 0xFF	; 255
    3b90:	84 17       	cp	r24, r20
    3b92:	95 07       	cpc	r25, r21
    3b94:	50 f0       	brcs	.+20     	; 0x3baa <malloc+0x14e>
    3b96:	42 0f       	add	r20, r18
    3b98:	53 1f       	adc	r21, r19
    3b9a:	50 93 f5 0f 	sts	0x0FF5, r21
    3b9e:	40 93 f4 0f 	sts	0x0FF4, r20
    3ba2:	f9 01       	movw	r30, r18
    3ba4:	61 93       	st	Z+, r22
    3ba6:	71 93       	st	Z+, r23
    3ba8:	02 c0       	rjmp	.+4      	; 0x3bae <malloc+0x152>
    3baa:	e0 e0       	ldi	r30, 0x00	; 0
    3bac:	f0 e0       	ldi	r31, 0x00	; 0
    3bae:	cf 01       	movw	r24, r30
    3bb0:	df 91       	pop	r29
    3bb2:	cf 91       	pop	r28
    3bb4:	08 95       	ret

00003bb6 <free>:
    3bb6:	cf 93       	push	r28
    3bb8:	df 93       	push	r29
    3bba:	00 97       	sbiw	r24, 0x00	; 0
    3bbc:	09 f4       	brne	.+2      	; 0x3bc0 <free+0xa>
    3bbe:	50 c0       	rjmp	.+160    	; 0x3c60 <free+0xaa>
    3bc0:	ec 01       	movw	r28, r24
    3bc2:	22 97       	sbiw	r28, 0x02	; 2
    3bc4:	1b 82       	std	Y+3, r1	; 0x03
    3bc6:	1a 82       	std	Y+2, r1	; 0x02
    3bc8:	a0 91 f6 0f 	lds	r26, 0x0FF6
    3bcc:	b0 91 f7 0f 	lds	r27, 0x0FF7
    3bd0:	10 97       	sbiw	r26, 0x00	; 0
    3bd2:	09 f1       	breq	.+66     	; 0x3c16 <free+0x60>
    3bd4:	40 e0       	ldi	r20, 0x00	; 0
    3bd6:	50 e0       	ldi	r21, 0x00	; 0
    3bd8:	ac 17       	cp	r26, r28
    3bda:	bd 07       	cpc	r27, r29
    3bdc:	08 f1       	brcs	.+66     	; 0x3c20 <free+0x6a>
    3bde:	bb 83       	std	Y+3, r27	; 0x03
    3be0:	aa 83       	std	Y+2, r26	; 0x02
    3be2:	fe 01       	movw	r30, r28
    3be4:	21 91       	ld	r18, Z+
    3be6:	31 91       	ld	r19, Z+
    3be8:	e2 0f       	add	r30, r18
    3bea:	f3 1f       	adc	r31, r19
    3bec:	ae 17       	cp	r26, r30
    3bee:	bf 07       	cpc	r27, r31
    3bf0:	79 f4       	brne	.+30     	; 0x3c10 <free+0x5a>
    3bf2:	8d 91       	ld	r24, X+
    3bf4:	9c 91       	ld	r25, X
    3bf6:	11 97       	sbiw	r26, 0x01	; 1
    3bf8:	28 0f       	add	r18, r24
    3bfa:	39 1f       	adc	r19, r25
    3bfc:	2e 5f       	subi	r18, 0xFE	; 254
    3bfe:	3f 4f       	sbci	r19, 0xFF	; 255
    3c00:	39 83       	std	Y+1, r19	; 0x01
    3c02:	28 83       	st	Y, r18
    3c04:	12 96       	adiw	r26, 0x02	; 2
    3c06:	8d 91       	ld	r24, X+
    3c08:	9c 91       	ld	r25, X
    3c0a:	13 97       	sbiw	r26, 0x03	; 3
    3c0c:	9b 83       	std	Y+3, r25	; 0x03
    3c0e:	8a 83       	std	Y+2, r24	; 0x02
    3c10:	41 15       	cp	r20, r1
    3c12:	51 05       	cpc	r21, r1
    3c14:	71 f4       	brne	.+28     	; 0x3c32 <free+0x7c>
    3c16:	d0 93 f7 0f 	sts	0x0FF7, r29
    3c1a:	c0 93 f6 0f 	sts	0x0FF6, r28
    3c1e:	20 c0       	rjmp	.+64     	; 0x3c60 <free+0xaa>
    3c20:	12 96       	adiw	r26, 0x02	; 2
    3c22:	8d 91       	ld	r24, X+
    3c24:	9c 91       	ld	r25, X
    3c26:	13 97       	sbiw	r26, 0x03	; 3
    3c28:	ad 01       	movw	r20, r26
    3c2a:	00 97       	sbiw	r24, 0x00	; 0
    3c2c:	11 f0       	breq	.+4      	; 0x3c32 <free+0x7c>
    3c2e:	dc 01       	movw	r26, r24
    3c30:	d3 cf       	rjmp	.-90     	; 0x3bd8 <free+0x22>
    3c32:	fa 01       	movw	r30, r20
    3c34:	d3 83       	std	Z+3, r29	; 0x03
    3c36:	c2 83       	std	Z+2, r28	; 0x02
    3c38:	21 91       	ld	r18, Z+
    3c3a:	31 91       	ld	r19, Z+
    3c3c:	e2 0f       	add	r30, r18
    3c3e:	f3 1f       	adc	r31, r19
    3c40:	ce 17       	cp	r28, r30
    3c42:	df 07       	cpc	r29, r31
    3c44:	69 f4       	brne	.+26     	; 0x3c60 <free+0xaa>
    3c46:	88 81       	ld	r24, Y
    3c48:	99 81       	ldd	r25, Y+1	; 0x01
    3c4a:	28 0f       	add	r18, r24
    3c4c:	39 1f       	adc	r19, r25
    3c4e:	2e 5f       	subi	r18, 0xFE	; 254
    3c50:	3f 4f       	sbci	r19, 0xFF	; 255
    3c52:	fa 01       	movw	r30, r20
    3c54:	31 83       	std	Z+1, r19	; 0x01
    3c56:	20 83       	st	Z, r18
    3c58:	8a 81       	ldd	r24, Y+2	; 0x02
    3c5a:	9b 81       	ldd	r25, Y+3	; 0x03
    3c5c:	93 83       	std	Z+3, r25	; 0x03
    3c5e:	82 83       	std	Z+2, r24	; 0x02
    3c60:	df 91       	pop	r29
    3c62:	cf 91       	pop	r28
    3c64:	08 95       	ret

00003c66 <exit>:
    3c66:	f8 94       	cli
    3c68:	0c 94 41 22 	jmp	0x4482	; 0x4482 <_exit>

00003c6c <strchr_P>:
    3c6c:	fc 01       	movw	r30, r24
    3c6e:	05 90       	lpm	r0, Z+
    3c70:	06 16       	cp	r0, r22
    3c72:	21 f0       	breq	.+8      	; 0x3c7c <strchr_P+0x10>
    3c74:	00 20       	and	r0, r0
    3c76:	d9 f7       	brne	.-10     	; 0x3c6e <strchr_P+0x2>
    3c78:	c0 01       	movw	r24, r0
    3c7a:	08 95       	ret
    3c7c:	31 97       	sbiw	r30, 0x01	; 1
    3c7e:	cf 01       	movw	r24, r30
    3c80:	08 95       	ret

00003c82 <memcpy>:
    3c82:	fb 01       	movw	r30, r22
    3c84:	dc 01       	movw	r26, r24
    3c86:	02 c0       	rjmp	.+4      	; 0x3c8c <memcpy+0xa>
    3c88:	01 90       	ld	r0, Z+
    3c8a:	0d 92       	st	X+, r0
    3c8c:	41 50       	subi	r20, 0x01	; 1
    3c8e:	50 40       	sbci	r21, 0x00	; 0
    3c90:	d8 f7       	brcc	.-10     	; 0x3c88 <memcpy+0x6>
    3c92:	08 95       	ret

00003c94 <ltoa>:
    3c94:	fa 01       	movw	r30, r20
    3c96:	cf 93       	push	r28
    3c98:	ff 93       	push	r31
    3c9a:	ef 93       	push	r30
    3c9c:	22 30       	cpi	r18, 0x02	; 2
    3c9e:	44 f1       	brlt	.+80     	; 0x3cf0 <ltoa+0x5c>
    3ca0:	25 32       	cpi	r18, 0x25	; 37
    3ca2:	34 f5       	brge	.+76     	; 0x3cf0 <ltoa+0x5c>
    3ca4:	c2 2f       	mov	r28, r18
    3ca6:	e8 94       	clt
    3ca8:	ca 30       	cpi	r28, 0x0A	; 10
    3caa:	49 f4       	brne	.+18     	; 0x3cbe <ltoa+0x2a>
    3cac:	97 fb       	bst	r25, 7
    3cae:	3e f4       	brtc	.+14     	; 0x3cbe <ltoa+0x2a>
    3cb0:	90 95       	com	r25
    3cb2:	80 95       	com	r24
    3cb4:	70 95       	com	r23
    3cb6:	61 95       	neg	r22
    3cb8:	7f 4f       	sbci	r23, 0xFF	; 255
    3cba:	8f 4f       	sbci	r24, 0xFF	; 255
    3cbc:	9f 4f       	sbci	r25, 0xFF	; 255
    3cbe:	2c 2f       	mov	r18, r28
    3cc0:	33 27       	eor	r19, r19
    3cc2:	44 27       	eor	r20, r20
    3cc4:	55 27       	eor	r21, r21
    3cc6:	ff 93       	push	r31
    3cc8:	ef 93       	push	r30
    3cca:	0e 94 c7 21 	call	0x438e	; 0x438e <__udivmodsi4>
    3cce:	ef 91       	pop	r30
    3cd0:	ff 91       	pop	r31
    3cd2:	60 5d       	subi	r22, 0xD0	; 208
    3cd4:	6a 33       	cpi	r22, 0x3A	; 58
    3cd6:	0c f0       	brlt	.+2      	; 0x3cda <ltoa+0x46>
    3cd8:	69 5d       	subi	r22, 0xD9	; 217
    3cda:	61 93       	st	Z+, r22
    3cdc:	b9 01       	movw	r22, r18
    3cde:	ca 01       	movw	r24, r20
    3ce0:	60 50       	subi	r22, 0x00	; 0
    3ce2:	70 40       	sbci	r23, 0x00	; 0
    3ce4:	80 40       	sbci	r24, 0x00	; 0
    3ce6:	90 40       	sbci	r25, 0x00	; 0
    3ce8:	51 f7       	brne	.-44     	; 0x3cbe <ltoa+0x2a>
    3cea:	16 f4       	brtc	.+4      	; 0x3cf0 <ltoa+0x5c>
    3cec:	cd e2       	ldi	r28, 0x2D	; 45
    3cee:	c1 93       	st	Z+, r28
    3cf0:	10 82       	st	Z, r1
    3cf2:	8f 91       	pop	r24
    3cf4:	9f 91       	pop	r25
    3cf6:	cf 91       	pop	r28
    3cf8:	0c 94 84 21 	jmp	0x4308	; 0x4308 <strrev>

00003cfc <ultoa>:
    3cfc:	fa 01       	movw	r30, r20
    3cfe:	cf 93       	push	r28
    3d00:	ff 93       	push	r31
    3d02:	ef 93       	push	r30
    3d04:	22 30       	cpi	r18, 0x02	; 2
    3d06:	cc f0       	brlt	.+50     	; 0x3d3a <ultoa+0x3e>
    3d08:	25 32       	cpi	r18, 0x25	; 37
    3d0a:	bc f4       	brge	.+46     	; 0x3d3a <ultoa+0x3e>
    3d0c:	c2 2f       	mov	r28, r18
    3d0e:	2c 2f       	mov	r18, r28
    3d10:	33 27       	eor	r19, r19
    3d12:	44 27       	eor	r20, r20
    3d14:	55 27       	eor	r21, r21
    3d16:	ff 93       	push	r31
    3d18:	ef 93       	push	r30
    3d1a:	0e 94 c7 21 	call	0x438e	; 0x438e <__udivmodsi4>
    3d1e:	ef 91       	pop	r30
    3d20:	ff 91       	pop	r31
    3d22:	60 5d       	subi	r22, 0xD0	; 208
    3d24:	6a 33       	cpi	r22, 0x3A	; 58
    3d26:	0c f0       	brlt	.+2      	; 0x3d2a <ultoa+0x2e>
    3d28:	69 5d       	subi	r22, 0xD9	; 217
    3d2a:	61 93       	st	Z+, r22
    3d2c:	b9 01       	movw	r22, r18
    3d2e:	ca 01       	movw	r24, r20
    3d30:	60 50       	subi	r22, 0x00	; 0
    3d32:	70 40       	sbci	r23, 0x00	; 0
    3d34:	80 40       	sbci	r24, 0x00	; 0
    3d36:	90 40       	sbci	r25, 0x00	; 0
    3d38:	51 f7       	brne	.-44     	; 0x3d0e <ultoa+0x12>
    3d3a:	10 82       	st	Z, r1
    3d3c:	8f 91       	pop	r24
    3d3e:	9f 91       	pop	r25
    3d40:	cf 91       	pop	r28
    3d42:	0c 94 84 21 	jmp	0x4308	; 0x4308 <strrev>

00003d46 <fprintf_P>:
    3d46:	a0 e0       	ldi	r26, 0x00	; 0
    3d48:	b0 e0       	ldi	r27, 0x00	; 0
    3d4a:	e9 ea       	ldi	r30, 0xA9	; 169
    3d4c:	fe e1       	ldi	r31, 0x1E	; 30
    3d4e:	0c 94 12 22 	jmp	0x4424	; 0x4424 <__prologue_saves__+0x1c>
    3d52:	0f 81       	ldd	r16, Y+7	; 0x07
    3d54:	18 85       	ldd	r17, Y+8	; 0x08
    3d56:	9e 01       	movw	r18, r28
    3d58:	25 5f       	subi	r18, 0xF5	; 245
    3d5a:	3f 4f       	sbci	r19, 0xFF	; 255
    3d5c:	f8 01       	movw	r30, r16
    3d5e:	83 81       	ldd	r24, Z+3	; 0x03
    3d60:	88 60       	ori	r24, 0x08	; 8
    3d62:	83 83       	std	Z+3, r24	; 0x03
    3d64:	c8 01       	movw	r24, r16
    3d66:	69 85       	ldd	r22, Y+9	; 0x09
    3d68:	7a 85       	ldd	r23, Y+10	; 0x0a
    3d6a:	a9 01       	movw	r20, r18
    3d6c:	0e 94 67 1a 	call	0x34ce	; 0x34ce <vfprintf>
    3d70:	f8 01       	movw	r30, r16
    3d72:	23 81       	ldd	r18, Z+3	; 0x03
    3d74:	27 7f       	andi	r18, 0xF7	; 247
    3d76:	23 83       	std	Z+3, r18	; 0x03
    3d78:	20 96       	adiw	r28, 0x00	; 0
    3d7a:	e4 e0       	ldi	r30, 0x04	; 4
    3d7c:	0c 94 2e 22 	jmp	0x445c	; 0x445c <__epilogue_restores__+0x1c>

00003d80 <fputc>:
    3d80:	0f 93       	push	r16
    3d82:	1f 93       	push	r17
    3d84:	cf 93       	push	r28
    3d86:	df 93       	push	r29
    3d88:	8c 01       	movw	r16, r24
    3d8a:	eb 01       	movw	r28, r22
    3d8c:	8b 81       	ldd	r24, Y+3	; 0x03
    3d8e:	81 ff       	sbrs	r24, 1
    3d90:	1b c0       	rjmp	.+54     	; 0x3dc8 <fputc+0x48>
    3d92:	82 ff       	sbrs	r24, 2
    3d94:	0d c0       	rjmp	.+26     	; 0x3db0 <fputc+0x30>
    3d96:	2e 81       	ldd	r18, Y+6	; 0x06
    3d98:	3f 81       	ldd	r19, Y+7	; 0x07
    3d9a:	8c 81       	ldd	r24, Y+4	; 0x04
    3d9c:	9d 81       	ldd	r25, Y+5	; 0x05
    3d9e:	28 17       	cp	r18, r24
    3da0:	39 07       	cpc	r19, r25
    3da2:	64 f4       	brge	.+24     	; 0x3dbc <fputc+0x3c>
    3da4:	e8 81       	ld	r30, Y
    3da6:	f9 81       	ldd	r31, Y+1	; 0x01
    3da8:	01 93       	st	Z+, r16
    3daa:	f9 83       	std	Y+1, r31	; 0x01
    3dac:	e8 83       	st	Y, r30
    3dae:	06 c0       	rjmp	.+12     	; 0x3dbc <fputc+0x3c>
    3db0:	e8 85       	ldd	r30, Y+8	; 0x08
    3db2:	f9 85       	ldd	r31, Y+9	; 0x09
    3db4:	80 2f       	mov	r24, r16
    3db6:	09 95       	icall
    3db8:	89 2b       	or	r24, r25
    3dba:	31 f4       	brne	.+12     	; 0x3dc8 <fputc+0x48>
    3dbc:	8e 81       	ldd	r24, Y+6	; 0x06
    3dbe:	9f 81       	ldd	r25, Y+7	; 0x07
    3dc0:	01 96       	adiw	r24, 0x01	; 1
    3dc2:	9f 83       	std	Y+7, r25	; 0x07
    3dc4:	8e 83       	std	Y+6, r24	; 0x06
    3dc6:	02 c0       	rjmp	.+4      	; 0x3dcc <fputc+0x4c>
    3dc8:	0f ef       	ldi	r16, 0xFF	; 255
    3dca:	1f ef       	ldi	r17, 0xFF	; 255
    3dcc:	c8 01       	movw	r24, r16
    3dce:	df 91       	pop	r29
    3dd0:	cf 91       	pop	r28
    3dd2:	1f 91       	pop	r17
    3dd4:	0f 91       	pop	r16
    3dd6:	08 95       	ret

00003dd8 <__ultoa_invert>:
    3dd8:	fa 01       	movw	r30, r20
    3dda:	aa 27       	eor	r26, r26
    3ddc:	28 30       	cpi	r18, 0x08	; 8
    3dde:	51 f1       	breq	.+84     	; 0x3e34 <__ultoa_invert+0x5c>
    3de0:	20 31       	cpi	r18, 0x10	; 16
    3de2:	81 f1       	breq	.+96     	; 0x3e44 <__ultoa_invert+0x6c>
    3de4:	e8 94       	clt
    3de6:	6f 93       	push	r22
    3de8:	6e 7f       	andi	r22, 0xFE	; 254
    3dea:	6e 5f       	subi	r22, 0xFE	; 254
    3dec:	7f 4f       	sbci	r23, 0xFF	; 255
    3dee:	8f 4f       	sbci	r24, 0xFF	; 255
    3df0:	9f 4f       	sbci	r25, 0xFF	; 255
    3df2:	af 4f       	sbci	r26, 0xFF	; 255
    3df4:	b1 e0       	ldi	r27, 0x01	; 1
    3df6:	3e d0       	rcall	.+124    	; 0x3e74 <__ultoa_invert+0x9c>
    3df8:	b4 e0       	ldi	r27, 0x04	; 4
    3dfa:	3c d0       	rcall	.+120    	; 0x3e74 <__ultoa_invert+0x9c>
    3dfc:	67 0f       	add	r22, r23
    3dfe:	78 1f       	adc	r23, r24
    3e00:	89 1f       	adc	r24, r25
    3e02:	9a 1f       	adc	r25, r26
    3e04:	a1 1d       	adc	r26, r1
    3e06:	68 0f       	add	r22, r24
    3e08:	79 1f       	adc	r23, r25
    3e0a:	8a 1f       	adc	r24, r26
    3e0c:	91 1d       	adc	r25, r1
    3e0e:	a1 1d       	adc	r26, r1
    3e10:	6a 0f       	add	r22, r26
    3e12:	71 1d       	adc	r23, r1
    3e14:	81 1d       	adc	r24, r1
    3e16:	91 1d       	adc	r25, r1
    3e18:	a1 1d       	adc	r26, r1
    3e1a:	20 d0       	rcall	.+64     	; 0x3e5c <__ultoa_invert+0x84>
    3e1c:	09 f4       	brne	.+2      	; 0x3e20 <__ultoa_invert+0x48>
    3e1e:	68 94       	set
    3e20:	3f 91       	pop	r19
    3e22:	2a e0       	ldi	r18, 0x0A	; 10
    3e24:	26 9f       	mul	r18, r22
    3e26:	11 24       	eor	r1, r1
    3e28:	30 19       	sub	r19, r0
    3e2a:	30 5d       	subi	r19, 0xD0	; 208
    3e2c:	31 93       	st	Z+, r19
    3e2e:	de f6       	brtc	.-74     	; 0x3de6 <__ultoa_invert+0xe>
    3e30:	cf 01       	movw	r24, r30
    3e32:	08 95       	ret
    3e34:	46 2f       	mov	r20, r22
    3e36:	47 70       	andi	r20, 0x07	; 7
    3e38:	40 5d       	subi	r20, 0xD0	; 208
    3e3a:	41 93       	st	Z+, r20
    3e3c:	b3 e0       	ldi	r27, 0x03	; 3
    3e3e:	0f d0       	rcall	.+30     	; 0x3e5e <__ultoa_invert+0x86>
    3e40:	c9 f7       	brne	.-14     	; 0x3e34 <__ultoa_invert+0x5c>
    3e42:	f6 cf       	rjmp	.-20     	; 0x3e30 <__ultoa_invert+0x58>
    3e44:	46 2f       	mov	r20, r22
    3e46:	4f 70       	andi	r20, 0x0F	; 15
    3e48:	40 5d       	subi	r20, 0xD0	; 208
    3e4a:	4a 33       	cpi	r20, 0x3A	; 58
    3e4c:	18 f0       	brcs	.+6      	; 0x3e54 <__ultoa_invert+0x7c>
    3e4e:	49 5d       	subi	r20, 0xD9	; 217
    3e50:	31 fd       	sbrc	r19, 1
    3e52:	40 52       	subi	r20, 0x20	; 32
    3e54:	41 93       	st	Z+, r20
    3e56:	02 d0       	rcall	.+4      	; 0x3e5c <__ultoa_invert+0x84>
    3e58:	a9 f7       	brne	.-22     	; 0x3e44 <__ultoa_invert+0x6c>
    3e5a:	ea cf       	rjmp	.-44     	; 0x3e30 <__ultoa_invert+0x58>
    3e5c:	b4 e0       	ldi	r27, 0x04	; 4
    3e5e:	a6 95       	lsr	r26
    3e60:	97 95       	ror	r25
    3e62:	87 95       	ror	r24
    3e64:	77 95       	ror	r23
    3e66:	67 95       	ror	r22
    3e68:	ba 95       	dec	r27
    3e6a:	c9 f7       	brne	.-14     	; 0x3e5e <__ultoa_invert+0x86>
    3e6c:	00 97       	sbiw	r24, 0x00	; 0
    3e6e:	61 05       	cpc	r22, r1
    3e70:	71 05       	cpc	r23, r1
    3e72:	08 95       	ret
    3e74:	9b 01       	movw	r18, r22
    3e76:	ac 01       	movw	r20, r24
    3e78:	0a 2e       	mov	r0, r26
    3e7a:	06 94       	lsr	r0
    3e7c:	57 95       	ror	r21
    3e7e:	47 95       	ror	r20
    3e80:	37 95       	ror	r19
    3e82:	27 95       	ror	r18
    3e84:	ba 95       	dec	r27
    3e86:	c9 f7       	brne	.-14     	; 0x3e7a <__ultoa_invert+0xa2>
    3e88:	62 0f       	add	r22, r18
    3e8a:	73 1f       	adc	r23, r19
    3e8c:	84 1f       	adc	r24, r20
    3e8e:	95 1f       	adc	r25, r21
    3e90:	a0 1d       	adc	r26, r0
    3e92:	08 95       	ret

00003e94 <dtoa_prf>:
    3e94:	a9 e0       	ldi	r26, 0x09	; 9
    3e96:	b0 e0       	ldi	r27, 0x00	; 0
    3e98:	e0 e5       	ldi	r30, 0x50	; 80
    3e9a:	ff e1       	ldi	r31, 0x1F	; 31
    3e9c:	0c 94 08 22 	jmp	0x4410	; 0x4410 <__prologue_saves__+0x8>
    3ea0:	6a 01       	movw	r12, r20
    3ea2:	12 2f       	mov	r17, r18
    3ea4:	a0 2e       	mov	r10, r16
    3ea6:	be 2c       	mov	r11, r14
    3ea8:	2b e3       	ldi	r18, 0x3B	; 59
    3eaa:	20 17       	cp	r18, r16
    3eac:	18 f4       	brcc	.+6      	; 0x3eb4 <dtoa_prf+0x20>
    3eae:	2c e3       	ldi	r18, 0x3C	; 60
    3eb0:	92 2e       	mov	r9, r18
    3eb2:	02 c0       	rjmp	.+4      	; 0x3eb8 <dtoa_prf+0x24>
    3eb4:	90 2e       	mov	r9, r16
    3eb6:	93 94       	inc	r9
    3eb8:	ae 01       	movw	r20, r28
    3eba:	4f 5f       	subi	r20, 0xFF	; 255
    3ebc:	5f 4f       	sbci	r21, 0xFF	; 255
    3ebe:	27 e0       	ldi	r18, 0x07	; 7
    3ec0:	09 2d       	mov	r16, r9
    3ec2:	0e 94 ac 20 	call	0x4158	; 0x4158 <__ftoa_engine>
    3ec6:	bc 01       	movw	r22, r24
    3ec8:	89 81       	ldd	r24, Y+1	; 0x01
    3eca:	e8 2e       	mov	r14, r24
    3ecc:	ff 24       	eor	r15, r15
    3ece:	c7 01       	movw	r24, r14
    3ed0:	89 70       	andi	r24, 0x09	; 9
    3ed2:	90 70       	andi	r25, 0x00	; 0
    3ed4:	01 97       	sbiw	r24, 0x01	; 1
    3ed6:	11 f4       	brne	.+4      	; 0x3edc <dtoa_prf+0x48>
    3ed8:	ad e2       	ldi	r26, 0x2D	; 45
    3eda:	09 c0       	rjmp	.+18     	; 0x3eee <dtoa_prf+0x5a>
    3edc:	b1 fe       	sbrs	r11, 1
    3ede:	02 c0       	rjmp	.+4      	; 0x3ee4 <dtoa_prf+0x50>
    3ee0:	ab e2       	ldi	r26, 0x2B	; 43
    3ee2:	05 c0       	rjmp	.+10     	; 0x3eee <dtoa_prf+0x5a>
    3ee4:	b0 fc       	sbrc	r11, 0
    3ee6:	02 c0       	rjmp	.+4      	; 0x3eec <dtoa_prf+0x58>
    3ee8:	a0 e0       	ldi	r26, 0x00	; 0
    3eea:	01 c0       	rjmp	.+2      	; 0x3eee <dtoa_prf+0x5a>
    3eec:	a0 e2       	ldi	r26, 0x20	; 32
    3eee:	e3 fe       	sbrs	r14, 3
    3ef0:	3b c0       	rjmp	.+118    	; 0x3f68 <dtoa_prf+0xd4>
    3ef2:	aa 23       	and	r26, r26
    3ef4:	11 f4       	brne	.+4      	; 0x3efa <dtoa_prf+0x66>
    3ef6:	23 e0       	ldi	r18, 0x03	; 3
    3ef8:	01 c0       	rjmp	.+2      	; 0x3efc <dtoa_prf+0x68>
    3efa:	24 e0       	ldi	r18, 0x04	; 4
    3efc:	21 17       	cp	r18, r17
    3efe:	10 f0       	brcs	.+4      	; 0x3f04 <dtoa_prf+0x70>
    3f00:	20 e0       	ldi	r18, 0x00	; 0
    3f02:	02 c0       	rjmp	.+4      	; 0x3f08 <dtoa_prf+0x74>
    3f04:	12 1b       	sub	r17, r18
    3f06:	21 2f       	mov	r18, r17
    3f08:	eb 2c       	mov	r14, r11
    3f0a:	b4 fe       	sbrs	r11, 4
    3f0c:	02 c0       	rjmp	.+4      	; 0x3f12 <dtoa_prf+0x7e>
    3f0e:	32 2f       	mov	r19, r18
    3f10:	0a c0       	rjmp	.+20     	; 0x3f26 <dtoa_prf+0x92>
    3f12:	f6 01       	movw	r30, r12
    3f14:	32 2f       	mov	r19, r18
    3f16:	80 e2       	ldi	r24, 0x20	; 32
    3f18:	02 c0       	rjmp	.+4      	; 0x3f1e <dtoa_prf+0x8a>
    3f1a:	81 93       	st	Z+, r24
    3f1c:	31 50       	subi	r19, 0x01	; 1
    3f1e:	33 23       	and	r19, r19
    3f20:	e1 f7       	brne	.-8      	; 0x3f1a <dtoa_prf+0x86>
    3f22:	c2 0e       	add	r12, r18
    3f24:	d1 1c       	adc	r13, r1
    3f26:	aa 23       	and	r26, r26
    3f28:	19 f0       	breq	.+6      	; 0x3f30 <dtoa_prf+0x9c>
    3f2a:	f6 01       	movw	r30, r12
    3f2c:	a1 93       	st	Z+, r26
    3f2e:	6f 01       	movw	r12, r30
    3f30:	f6 01       	movw	r30, r12
    3f32:	31 96       	adiw	r30, 0x01	; 1
    3f34:	e2 fe       	sbrs	r14, 2
    3f36:	05 c0       	rjmp	.+10     	; 0x3f42 <dtoa_prf+0xae>
    3f38:	9e e4       	ldi	r25, 0x4E	; 78
    3f3a:	d6 01       	movw	r26, r12
    3f3c:	9c 93       	st	X, r25
    3f3e:	81 e4       	ldi	r24, 0x41	; 65
    3f40:	04 c0       	rjmp	.+8      	; 0x3f4a <dtoa_prf+0xb6>
    3f42:	9e e6       	ldi	r25, 0x6E	; 110
    3f44:	d6 01       	movw	r26, r12
    3f46:	9c 93       	st	X, r25
    3f48:	81 e6       	ldi	r24, 0x61	; 97
    3f4a:	11 96       	adiw	r26, 0x01	; 1
    3f4c:	8c 93       	st	X, r24
    3f4e:	91 83       	std	Z+1, r25	; 0x01
    3f50:	32 96       	adiw	r30, 0x02	; 2
    3f52:	df 01       	movw	r26, r30
    3f54:	83 2f       	mov	r24, r19
    3f56:	90 e2       	ldi	r25, 0x20	; 32
    3f58:	02 c0       	rjmp	.+4      	; 0x3f5e <dtoa_prf+0xca>
    3f5a:	9d 93       	st	X+, r25
    3f5c:	81 50       	subi	r24, 0x01	; 1
    3f5e:	88 23       	and	r24, r24
    3f60:	e1 f7       	brne	.-8      	; 0x3f5a <dtoa_prf+0xc6>
    3f62:	e3 0f       	add	r30, r19
    3f64:	f1 1d       	adc	r31, r1
    3f66:	40 c0       	rjmp	.+128    	; 0x3fe8 <dtoa_prf+0x154>
    3f68:	e2 fe       	sbrs	r14, 2
    3f6a:	42 c0       	rjmp	.+132    	; 0x3ff0 <dtoa_prf+0x15c>
    3f6c:	aa 23       	and	r26, r26
    3f6e:	11 f4       	brne	.+4      	; 0x3f74 <dtoa_prf+0xe0>
    3f70:	23 e0       	ldi	r18, 0x03	; 3
    3f72:	01 c0       	rjmp	.+2      	; 0x3f76 <dtoa_prf+0xe2>
    3f74:	24 e0       	ldi	r18, 0x04	; 4
    3f76:	21 17       	cp	r18, r17
    3f78:	10 f0       	brcs	.+4      	; 0x3f7e <dtoa_prf+0xea>
    3f7a:	20 e0       	ldi	r18, 0x00	; 0
    3f7c:	02 c0       	rjmp	.+4      	; 0x3f82 <dtoa_prf+0xee>
    3f7e:	12 1b       	sub	r17, r18
    3f80:	21 2f       	mov	r18, r17
    3f82:	eb 2c       	mov	r14, r11
    3f84:	b4 fe       	sbrs	r11, 4
    3f86:	02 c0       	rjmp	.+4      	; 0x3f8c <dtoa_prf+0xf8>
    3f88:	92 2f       	mov	r25, r18
    3f8a:	0a c0       	rjmp	.+20     	; 0x3fa0 <dtoa_prf+0x10c>
    3f8c:	f6 01       	movw	r30, r12
    3f8e:	92 2f       	mov	r25, r18
    3f90:	80 e2       	ldi	r24, 0x20	; 32
    3f92:	02 c0       	rjmp	.+4      	; 0x3f98 <dtoa_prf+0x104>
    3f94:	81 93       	st	Z+, r24
    3f96:	91 50       	subi	r25, 0x01	; 1
    3f98:	99 23       	and	r25, r25
    3f9a:	e1 f7       	brne	.-8      	; 0x3f94 <dtoa_prf+0x100>
    3f9c:	c2 0e       	add	r12, r18
    3f9e:	d1 1c       	adc	r13, r1
    3fa0:	aa 23       	and	r26, r26
    3fa2:	19 f0       	breq	.+6      	; 0x3faa <dtoa_prf+0x116>
    3fa4:	f6 01       	movw	r30, r12
    3fa6:	a1 93       	st	Z+, r26
    3fa8:	6f 01       	movw	r12, r30
    3faa:	f6 01       	movw	r30, r12
    3fac:	31 96       	adiw	r30, 0x01	; 1
    3fae:	e2 fe       	sbrs	r14, 2
    3fb0:	08 c0       	rjmp	.+16     	; 0x3fc2 <dtoa_prf+0x12e>
    3fb2:	89 e4       	ldi	r24, 0x49	; 73
    3fb4:	d6 01       	movw	r26, r12
    3fb6:	8c 93       	st	X, r24
    3fb8:	8e e4       	ldi	r24, 0x4E	; 78
    3fba:	11 96       	adiw	r26, 0x01	; 1
    3fbc:	8c 93       	st	X, r24
    3fbe:	86 e4       	ldi	r24, 0x46	; 70
    3fc0:	07 c0       	rjmp	.+14     	; 0x3fd0 <dtoa_prf+0x13c>
    3fc2:	89 e6       	ldi	r24, 0x69	; 105
    3fc4:	d6 01       	movw	r26, r12
    3fc6:	8c 93       	st	X, r24
    3fc8:	8e e6       	ldi	r24, 0x6E	; 110
    3fca:	11 96       	adiw	r26, 0x01	; 1
    3fcc:	8c 93       	st	X, r24
    3fce:	86 e6       	ldi	r24, 0x66	; 102
    3fd0:	81 83       	std	Z+1, r24	; 0x01
    3fd2:	32 96       	adiw	r30, 0x02	; 2
    3fd4:	df 01       	movw	r26, r30
    3fd6:	89 2f       	mov	r24, r25
    3fd8:	20 e2       	ldi	r18, 0x20	; 32
    3fda:	02 c0       	rjmp	.+4      	; 0x3fe0 <dtoa_prf+0x14c>
    3fdc:	2d 93       	st	X+, r18
    3fde:	81 50       	subi	r24, 0x01	; 1
    3fe0:	88 23       	and	r24, r24
    3fe2:	e1 f7       	brne	.-8      	; 0x3fdc <dtoa_prf+0x148>
    3fe4:	e9 0f       	add	r30, r25
    3fe6:	f1 1d       	adc	r31, r1
    3fe8:	10 82       	st	Z, r1
    3fea:	2e ef       	ldi	r18, 0xFE	; 254
    3fec:	3f ef       	ldi	r19, 0xFF	; 255
    3fee:	af c0       	rjmp	.+350    	; 0x414e <dtoa_prf+0x2ba>
    3ff0:	16 16       	cp	r1, r22
    3ff2:	17 06       	cpc	r1, r23
    3ff4:	1c f0       	brlt	.+6      	; 0x3ffc <dtoa_prf+0x168>
    3ff6:	41 e0       	ldi	r20, 0x01	; 1
    3ff8:	50 e0       	ldi	r21, 0x00	; 0
    3ffa:	03 c0       	rjmp	.+6      	; 0x4002 <dtoa_prf+0x16e>
    3ffc:	ab 01       	movw	r20, r22
    3ffe:	4f 5f       	subi	r20, 0xFF	; 255
    4000:	5f 4f       	sbci	r21, 0xFF	; 255
    4002:	aa 20       	and	r10, r10
    4004:	19 f4       	brne	.+6      	; 0x400c <dtoa_prf+0x178>
    4006:	80 e0       	ldi	r24, 0x00	; 0
    4008:	90 e0       	ldi	r25, 0x00	; 0
    400a:	03 c0       	rjmp	.+6      	; 0x4012 <dtoa_prf+0x17e>
    400c:	8a 2d       	mov	r24, r10
    400e:	90 e0       	ldi	r25, 0x00	; 0
    4010:	01 96       	adiw	r24, 0x01	; 1
    4012:	20 e0       	ldi	r18, 0x00	; 0
    4014:	30 e0       	ldi	r19, 0x00	; 0
    4016:	aa 23       	and	r26, r26
    4018:	11 f0       	breq	.+4      	; 0x401e <dtoa_prf+0x18a>
    401a:	21 e0       	ldi	r18, 0x01	; 1
    401c:	30 e0       	ldi	r19, 0x00	; 0
    401e:	24 0f       	add	r18, r20
    4020:	35 1f       	adc	r19, r21
    4022:	28 0f       	add	r18, r24
    4024:	39 1f       	adc	r19, r25
    4026:	81 2f       	mov	r24, r17
    4028:	90 e0       	ldi	r25, 0x00	; 0
    402a:	28 17       	cp	r18, r24
    402c:	39 07       	cpc	r19, r25
    402e:	14 f0       	brlt	.+4      	; 0x4034 <dtoa_prf+0x1a0>
    4030:	20 e0       	ldi	r18, 0x00	; 0
    4032:	02 c0       	rjmp	.+4      	; 0x4038 <dtoa_prf+0x1a4>
    4034:	12 1b       	sub	r17, r18
    4036:	21 2f       	mov	r18, r17
    4038:	4b 2d       	mov	r20, r11
    403a:	50 e0       	ldi	r21, 0x00	; 0
    403c:	ca 01       	movw	r24, r20
    403e:	80 71       	andi	r24, 0x10	; 16
    4040:	90 70       	andi	r25, 0x00	; 0
    4042:	b4 fc       	sbrc	r11, 4
    4044:	0d c0       	rjmp	.+26     	; 0x4060 <dtoa_prf+0x1cc>
    4046:	b3 fc       	sbrc	r11, 3
    4048:	0b c0       	rjmp	.+22     	; 0x4060 <dtoa_prf+0x1cc>
    404a:	f6 01       	movw	r30, r12
    404c:	32 2f       	mov	r19, r18
    404e:	40 e2       	ldi	r20, 0x20	; 32
    4050:	02 c0       	rjmp	.+4      	; 0x4056 <dtoa_prf+0x1c2>
    4052:	41 93       	st	Z+, r20
    4054:	31 50       	subi	r19, 0x01	; 1
    4056:	33 23       	and	r19, r19
    4058:	e1 f7       	brne	.-8      	; 0x4052 <dtoa_prf+0x1be>
    405a:	c2 0e       	add	r12, r18
    405c:	d1 1c       	adc	r13, r1
    405e:	01 c0       	rjmp	.+2      	; 0x4062 <dtoa_prf+0x1ce>
    4060:	32 2f       	mov	r19, r18
    4062:	aa 23       	and	r26, r26
    4064:	19 f0       	breq	.+6      	; 0x406c <dtoa_prf+0x1d8>
    4066:	f6 01       	movw	r30, r12
    4068:	a1 93       	st	Z+, r26
    406a:	6f 01       	movw	r12, r30
    406c:	89 2b       	or	r24, r25
    406e:	11 f0       	breq	.+4      	; 0x4074 <dtoa_prf+0x1e0>
    4070:	13 2f       	mov	r17, r19
    4072:	0a c0       	rjmp	.+20     	; 0x4088 <dtoa_prf+0x1f4>
    4074:	f6 01       	movw	r30, r12
    4076:	13 2f       	mov	r17, r19
    4078:	80 e3       	ldi	r24, 0x30	; 48
    407a:	02 c0       	rjmp	.+4      	; 0x4080 <dtoa_prf+0x1ec>
    407c:	81 93       	st	Z+, r24
    407e:	11 50       	subi	r17, 0x01	; 1
    4080:	11 23       	and	r17, r17
    4082:	e1 f7       	brne	.-8      	; 0x407c <dtoa_prf+0x1e8>
    4084:	c3 0e       	add	r12, r19
    4086:	d1 1c       	adc	r13, r1
    4088:	09 2d       	mov	r16, r9
    408a:	06 0f       	add	r16, r22
    408c:	ba 80       	ldd	r11, Y+2	; 0x02
    408e:	90 e1       	ldi	r25, 0x10	; 16
    4090:	89 2e       	mov	r8, r25
    4092:	91 2c       	mov	r9, r1
    4094:	8e 20       	and	r8, r14
    4096:	9f 20       	and	r9, r15
    4098:	e4 fe       	sbrs	r14, 4
    409a:	04 c0       	rjmp	.+8      	; 0x40a4 <dtoa_prf+0x210>
    409c:	f1 e3       	ldi	r31, 0x31	; 49
    409e:	bf 16       	cp	r11, r31
    40a0:	09 f4       	brne	.+2      	; 0x40a4 <dtoa_prf+0x210>
    40a2:	01 50       	subi	r16, 0x01	; 1
    40a4:	10 16       	cp	r1, r16
    40a6:	14 f0       	brlt	.+4      	; 0x40ac <dtoa_prf+0x218>
    40a8:	01 e0       	ldi	r16, 0x01	; 1
    40aa:	03 c0       	rjmp	.+6      	; 0x40b2 <dtoa_prf+0x21e>
    40ac:	09 30       	cpi	r16, 0x09	; 9
    40ae:	08 f0       	brcs	.+2      	; 0x40b2 <dtoa_prf+0x21e>
    40b0:	08 e0       	ldi	r16, 0x08	; 8
    40b2:	9b 01       	movw	r18, r22
    40b4:	77 ff       	sbrs	r23, 7
    40b6:	02 c0       	rjmp	.+4      	; 0x40bc <dtoa_prf+0x228>
    40b8:	20 e0       	ldi	r18, 0x00	; 0
    40ba:	30 e0       	ldi	r19, 0x00	; 0
    40bc:	cb 01       	movw	r24, r22
    40be:	01 96       	adiw	r24, 0x01	; 1
    40c0:	82 1b       	sub	r24, r18
    40c2:	93 0b       	sbc	r25, r19
    40c4:	fe 01       	movw	r30, r28
    40c6:	31 96       	adiw	r30, 0x01	; 1
    40c8:	e8 0f       	add	r30, r24
    40ca:	f9 1f       	adc	r31, r25
    40cc:	8e e2       	ldi	r24, 0x2E	; 46
    40ce:	f8 2e       	mov	r15, r24
    40d0:	3b 01       	movw	r6, r22
    40d2:	60 1a       	sub	r6, r16
    40d4:	71 08       	sbc	r7, r1
    40d6:	8a 2d       	mov	r24, r10
    40d8:	90 e0       	ldi	r25, 0x00	; 0
    40da:	44 27       	eor	r20, r20
    40dc:	55 27       	eor	r21, r21
    40de:	48 1b       	sub	r20, r24
    40e0:	59 0b       	sbc	r21, r25
    40e2:	8f ef       	ldi	r24, 0xFF	; 255
    40e4:	2f 3f       	cpi	r18, 0xFF	; 255
    40e6:	38 07       	cpc	r19, r24
    40e8:	19 f4       	brne	.+6      	; 0x40f0 <dtoa_prf+0x25c>
    40ea:	d6 01       	movw	r26, r12
    40ec:	fd 92       	st	X+, r15
    40ee:	6d 01       	movw	r12, r26
    40f0:	62 17       	cp	r22, r18
    40f2:	73 07       	cpc	r23, r19
    40f4:	2c f0       	brlt	.+10     	; 0x4100 <dtoa_prf+0x26c>
    40f6:	62 16       	cp	r6, r18
    40f8:	73 06       	cpc	r7, r19
    40fa:	14 f4       	brge	.+4      	; 0x4100 <dtoa_prf+0x26c>
    40fc:	80 81       	ld	r24, Z
    40fe:	01 c0       	rjmp	.+2      	; 0x4102 <dtoa_prf+0x26e>
    4100:	80 e3       	ldi	r24, 0x30	; 48
    4102:	21 50       	subi	r18, 0x01	; 1
    4104:	30 40       	sbci	r19, 0x00	; 0
    4106:	31 96       	adiw	r30, 0x01	; 1
    4108:	24 17       	cp	r18, r20
    410a:	35 07       	cpc	r19, r21
    410c:	24 f0       	brlt	.+8      	; 0x4116 <dtoa_prf+0x282>
    410e:	d6 01       	movw	r26, r12
    4110:	8d 93       	st	X+, r24
    4112:	6d 01       	movw	r12, r26
    4114:	e6 cf       	rjmp	.-52     	; 0x40e2 <dtoa_prf+0x24e>
    4116:	26 17       	cp	r18, r22
    4118:	37 07       	cpc	r19, r23
    411a:	49 f4       	brne	.+18     	; 0x412e <dtoa_prf+0x29a>
    411c:	b5 e3       	ldi	r27, 0x35	; 53
    411e:	bb 15       	cp	r27, r11
    4120:	28 f0       	brcs	.+10     	; 0x412c <dtoa_prf+0x298>
    4122:	bb 16       	cp	r11, r27
    4124:	21 f4       	brne	.+8      	; 0x412e <dtoa_prf+0x29a>
    4126:	81 14       	cp	r8, r1
    4128:	91 04       	cpc	r9, r1
    412a:	09 f4       	brne	.+2      	; 0x412e <dtoa_prf+0x29a>
    412c:	81 e3       	ldi	r24, 0x31	; 49
    412e:	f6 01       	movw	r30, r12
    4130:	81 93       	st	Z+, r24
    4132:	d6 01       	movw	r26, r12
    4134:	81 2f       	mov	r24, r17
    4136:	90 e2       	ldi	r25, 0x20	; 32
    4138:	02 c0       	rjmp	.+4      	; 0x413e <dtoa_prf+0x2aa>
    413a:	9c 93       	st	X, r25
    413c:	81 50       	subi	r24, 0x01	; 1
    413e:	11 96       	adiw	r26, 0x01	; 1
    4140:	88 23       	and	r24, r24
    4142:	d9 f7       	brne	.-10     	; 0x413a <dtoa_prf+0x2a6>
    4144:	e1 0f       	add	r30, r17
    4146:	f1 1d       	adc	r31, r1
    4148:	10 82       	st	Z, r1
    414a:	20 e0       	ldi	r18, 0x00	; 0
    414c:	30 e0       	ldi	r19, 0x00	; 0
    414e:	c9 01       	movw	r24, r18
    4150:	29 96       	adiw	r28, 0x09	; 9
    4152:	ee e0       	ldi	r30, 0x0E	; 14
    4154:	0c 94 24 22 	jmp	0x4448	; 0x4448 <__epilogue_restores__+0x8>

00004158 <__ftoa_engine>:
    4158:	28 30       	cpi	r18, 0x08	; 8
    415a:	08 f0       	brcs	.+2      	; 0x415e <__ftoa_engine+0x6>
    415c:	27 e0       	ldi	r18, 0x07	; 7
    415e:	33 27       	eor	r19, r19
    4160:	da 01       	movw	r26, r20
    4162:	99 0f       	add	r25, r25
    4164:	31 1d       	adc	r19, r1
    4166:	87 fd       	sbrc	r24, 7
    4168:	91 60       	ori	r25, 0x01	; 1
    416a:	00 96       	adiw	r24, 0x00	; 0
    416c:	61 05       	cpc	r22, r1
    416e:	71 05       	cpc	r23, r1
    4170:	39 f4       	brne	.+14     	; 0x4180 <__ftoa_engine+0x28>
    4172:	32 60       	ori	r19, 0x02	; 2
    4174:	2e 5f       	subi	r18, 0xFE	; 254
    4176:	3d 93       	st	X+, r19
    4178:	30 e3       	ldi	r19, 0x30	; 48
    417a:	2a 95       	dec	r18
    417c:	e1 f7       	brne	.-8      	; 0x4176 <__ftoa_engine+0x1e>
    417e:	08 95       	ret
    4180:	9f 3f       	cpi	r25, 0xFF	; 255
    4182:	30 f0       	brcs	.+12     	; 0x4190 <__ftoa_engine+0x38>
    4184:	80 38       	cpi	r24, 0x80	; 128
    4186:	71 05       	cpc	r23, r1
    4188:	61 05       	cpc	r22, r1
    418a:	09 f0       	breq	.+2      	; 0x418e <__ftoa_engine+0x36>
    418c:	3c 5f       	subi	r19, 0xFC	; 252
    418e:	3c 5f       	subi	r19, 0xFC	; 252
    4190:	3d 93       	st	X+, r19
    4192:	91 30       	cpi	r25, 0x01	; 1
    4194:	08 f0       	brcs	.+2      	; 0x4198 <__ftoa_engine+0x40>
    4196:	80 68       	ori	r24, 0x80	; 128
    4198:	91 1d       	adc	r25, r1
    419a:	df 93       	push	r29
    419c:	cf 93       	push	r28
    419e:	1f 93       	push	r17
    41a0:	0f 93       	push	r16
    41a2:	ff 92       	push	r15
    41a4:	ef 92       	push	r14
    41a6:	19 2f       	mov	r17, r25
    41a8:	98 7f       	andi	r25, 0xF8	; 248
    41aa:	96 95       	lsr	r25
    41ac:	e9 2f       	mov	r30, r25
    41ae:	96 95       	lsr	r25
    41b0:	96 95       	lsr	r25
    41b2:	e9 0f       	add	r30, r25
    41b4:	ff 27       	eor	r31, r31
    41b6:	e5 56       	subi	r30, 0x65	; 101
    41b8:	fb 4f       	sbci	r31, 0xFB	; 251
    41ba:	99 27       	eor	r25, r25
    41bc:	33 27       	eor	r19, r19
    41be:	ee 24       	eor	r14, r14
    41c0:	ff 24       	eor	r15, r15
    41c2:	a7 01       	movw	r20, r14
    41c4:	e7 01       	movw	r28, r14
    41c6:	05 90       	lpm	r0, Z+
    41c8:	08 94       	sec
    41ca:	07 94       	ror	r0
    41cc:	28 f4       	brcc	.+10     	; 0x41d8 <__ftoa_engine+0x80>
    41ce:	36 0f       	add	r19, r22
    41d0:	e7 1e       	adc	r14, r23
    41d2:	f8 1e       	adc	r15, r24
    41d4:	49 1f       	adc	r20, r25
    41d6:	51 1d       	adc	r21, r1
    41d8:	66 0f       	add	r22, r22
    41da:	77 1f       	adc	r23, r23
    41dc:	88 1f       	adc	r24, r24
    41de:	99 1f       	adc	r25, r25
    41e0:	06 94       	lsr	r0
    41e2:	a1 f7       	brne	.-24     	; 0x41cc <__ftoa_engine+0x74>
    41e4:	05 90       	lpm	r0, Z+
    41e6:	07 94       	ror	r0
    41e8:	28 f4       	brcc	.+10     	; 0x41f4 <__ftoa_engine+0x9c>
    41ea:	e7 0e       	add	r14, r23
    41ec:	f8 1e       	adc	r15, r24
    41ee:	49 1f       	adc	r20, r25
    41f0:	56 1f       	adc	r21, r22
    41f2:	c1 1d       	adc	r28, r1
    41f4:	77 0f       	add	r23, r23
    41f6:	88 1f       	adc	r24, r24
    41f8:	99 1f       	adc	r25, r25
    41fa:	66 1f       	adc	r22, r22
    41fc:	06 94       	lsr	r0
    41fe:	a1 f7       	brne	.-24     	; 0x41e8 <__ftoa_engine+0x90>
    4200:	05 90       	lpm	r0, Z+
    4202:	07 94       	ror	r0
    4204:	28 f4       	brcc	.+10     	; 0x4210 <__ftoa_engine+0xb8>
    4206:	f8 0e       	add	r15, r24
    4208:	49 1f       	adc	r20, r25
    420a:	56 1f       	adc	r21, r22
    420c:	c7 1f       	adc	r28, r23
    420e:	d1 1d       	adc	r29, r1
    4210:	88 0f       	add	r24, r24
    4212:	99 1f       	adc	r25, r25
    4214:	66 1f       	adc	r22, r22
    4216:	77 1f       	adc	r23, r23
    4218:	06 94       	lsr	r0
    421a:	a1 f7       	brne	.-24     	; 0x4204 <__ftoa_engine+0xac>
    421c:	05 90       	lpm	r0, Z+
    421e:	07 94       	ror	r0
    4220:	20 f4       	brcc	.+8      	; 0x422a <__ftoa_engine+0xd2>
    4222:	49 0f       	add	r20, r25
    4224:	56 1f       	adc	r21, r22
    4226:	c7 1f       	adc	r28, r23
    4228:	d8 1f       	adc	r29, r24
    422a:	99 0f       	add	r25, r25
    422c:	66 1f       	adc	r22, r22
    422e:	77 1f       	adc	r23, r23
    4230:	88 1f       	adc	r24, r24
    4232:	06 94       	lsr	r0
    4234:	a9 f7       	brne	.-22     	; 0x4220 <__ftoa_engine+0xc8>
    4236:	84 91       	lpm	r24, Z+
    4238:	10 95       	com	r17
    423a:	17 70       	andi	r17, 0x07	; 7
    423c:	41 f0       	breq	.+16     	; 0x424e <__ftoa_engine+0xf6>
    423e:	d6 95       	lsr	r29
    4240:	c7 95       	ror	r28
    4242:	57 95       	ror	r21
    4244:	47 95       	ror	r20
    4246:	f7 94       	ror	r15
    4248:	e7 94       	ror	r14
    424a:	1a 95       	dec	r17
    424c:	c1 f7       	brne	.-16     	; 0x423e <__ftoa_engine+0xe6>
    424e:	e1 e4       	ldi	r30, 0x41	; 65
    4250:	f4 e0       	ldi	r31, 0x04	; 4
    4252:	68 94       	set
    4254:	15 90       	lpm	r1, Z+
    4256:	15 91       	lpm	r17, Z+
    4258:	35 91       	lpm	r19, Z+
    425a:	65 91       	lpm	r22, Z+
    425c:	95 91       	lpm	r25, Z+
    425e:	05 90       	lpm	r0, Z+
    4260:	7f e2       	ldi	r23, 0x2F	; 47
    4262:	73 95       	inc	r23
    4264:	e1 18       	sub	r14, r1
    4266:	f1 0a       	sbc	r15, r17
    4268:	43 0b       	sbc	r20, r19
    426a:	56 0b       	sbc	r21, r22
    426c:	c9 0b       	sbc	r28, r25
    426e:	d0 09       	sbc	r29, r0
    4270:	c0 f7       	brcc	.-16     	; 0x4262 <__ftoa_engine+0x10a>
    4272:	e1 0c       	add	r14, r1
    4274:	f1 1e       	adc	r15, r17
    4276:	43 1f       	adc	r20, r19
    4278:	56 1f       	adc	r21, r22
    427a:	c9 1f       	adc	r28, r25
    427c:	d0 1d       	adc	r29, r0
    427e:	7e f4       	brtc	.+30     	; 0x429e <__ftoa_engine+0x146>
    4280:	70 33       	cpi	r23, 0x30	; 48
    4282:	11 f4       	brne	.+4      	; 0x4288 <__ftoa_engine+0x130>
    4284:	8a 95       	dec	r24
    4286:	e6 cf       	rjmp	.-52     	; 0x4254 <__ftoa_engine+0xfc>
    4288:	e8 94       	clt
    428a:	01 50       	subi	r16, 0x01	; 1
    428c:	30 f0       	brcs	.+12     	; 0x429a <__ftoa_engine+0x142>
    428e:	08 0f       	add	r16, r24
    4290:	0a f4       	brpl	.+2      	; 0x4294 <__ftoa_engine+0x13c>
    4292:	00 27       	eor	r16, r16
    4294:	02 17       	cp	r16, r18
    4296:	08 f4       	brcc	.+2      	; 0x429a <__ftoa_engine+0x142>
    4298:	20 2f       	mov	r18, r16
    429a:	23 95       	inc	r18
    429c:	02 2f       	mov	r16, r18
    429e:	7a 33       	cpi	r23, 0x3A	; 58
    42a0:	28 f0       	brcs	.+10     	; 0x42ac <__ftoa_engine+0x154>
    42a2:	79 e3       	ldi	r23, 0x39	; 57
    42a4:	7d 93       	st	X+, r23
    42a6:	2a 95       	dec	r18
    42a8:	e9 f7       	brne	.-6      	; 0x42a4 <__ftoa_engine+0x14c>
    42aa:	10 c0       	rjmp	.+32     	; 0x42cc <__ftoa_engine+0x174>
    42ac:	7d 93       	st	X+, r23
    42ae:	2a 95       	dec	r18
    42b0:	89 f6       	brne	.-94     	; 0x4254 <__ftoa_engine+0xfc>
    42b2:	06 94       	lsr	r0
    42b4:	97 95       	ror	r25
    42b6:	67 95       	ror	r22
    42b8:	37 95       	ror	r19
    42ba:	17 95       	ror	r17
    42bc:	17 94       	ror	r1
    42be:	e1 18       	sub	r14, r1
    42c0:	f1 0a       	sbc	r15, r17
    42c2:	43 0b       	sbc	r20, r19
    42c4:	56 0b       	sbc	r21, r22
    42c6:	c9 0b       	sbc	r28, r25
    42c8:	d0 09       	sbc	r29, r0
    42ca:	98 f0       	brcs	.+38     	; 0x42f2 <__ftoa_engine+0x19a>
    42cc:	23 95       	inc	r18
    42ce:	7e 91       	ld	r23, -X
    42d0:	73 95       	inc	r23
    42d2:	7a 33       	cpi	r23, 0x3A	; 58
    42d4:	08 f0       	brcs	.+2      	; 0x42d8 <__ftoa_engine+0x180>
    42d6:	70 e3       	ldi	r23, 0x30	; 48
    42d8:	7c 93       	st	X, r23
    42da:	20 13       	cpse	r18, r16
    42dc:	b8 f7       	brcc	.-18     	; 0x42cc <__ftoa_engine+0x174>
    42de:	7e 91       	ld	r23, -X
    42e0:	70 61       	ori	r23, 0x10	; 16
    42e2:	7d 93       	st	X+, r23
    42e4:	30 f0       	brcs	.+12     	; 0x42f2 <__ftoa_engine+0x19a>
    42e6:	83 95       	inc	r24
    42e8:	71 e3       	ldi	r23, 0x31	; 49
    42ea:	7d 93       	st	X+, r23
    42ec:	70 e3       	ldi	r23, 0x30	; 48
    42ee:	2a 95       	dec	r18
    42f0:	e1 f7       	brne	.-8      	; 0x42ea <__ftoa_engine+0x192>
    42f2:	11 24       	eor	r1, r1
    42f4:	ef 90       	pop	r14
    42f6:	ff 90       	pop	r15
    42f8:	0f 91       	pop	r16
    42fa:	1f 91       	pop	r17
    42fc:	cf 91       	pop	r28
    42fe:	df 91       	pop	r29
    4300:	99 27       	eor	r25, r25
    4302:	87 fd       	sbrc	r24, 7
    4304:	90 95       	com	r25
    4306:	08 95       	ret

00004308 <strrev>:
    4308:	dc 01       	movw	r26, r24
    430a:	fc 01       	movw	r30, r24
    430c:	67 2f       	mov	r22, r23
    430e:	71 91       	ld	r23, Z+
    4310:	77 23       	and	r23, r23
    4312:	e1 f7       	brne	.-8      	; 0x430c <strrev+0x4>
    4314:	32 97       	sbiw	r30, 0x02	; 2
    4316:	04 c0       	rjmp	.+8      	; 0x4320 <strrev+0x18>
    4318:	7c 91       	ld	r23, X
    431a:	6d 93       	st	X+, r22
    431c:	70 83       	st	Z, r23
    431e:	62 91       	ld	r22, -Z
    4320:	ae 17       	cp	r26, r30
    4322:	bf 07       	cpc	r27, r31
    4324:	c8 f3       	brcs	.-14     	; 0x4318 <strrev+0x10>
    4326:	08 95       	ret

00004328 <__mulsi3>:
    4328:	62 9f       	mul	r22, r18
    432a:	d0 01       	movw	r26, r0
    432c:	73 9f       	mul	r23, r19
    432e:	f0 01       	movw	r30, r0
    4330:	82 9f       	mul	r24, r18
    4332:	e0 0d       	add	r30, r0
    4334:	f1 1d       	adc	r31, r1
    4336:	64 9f       	mul	r22, r20
    4338:	e0 0d       	add	r30, r0
    433a:	f1 1d       	adc	r31, r1
    433c:	92 9f       	mul	r25, r18
    433e:	f0 0d       	add	r31, r0
    4340:	83 9f       	mul	r24, r19
    4342:	f0 0d       	add	r31, r0
    4344:	74 9f       	mul	r23, r20
    4346:	f0 0d       	add	r31, r0
    4348:	65 9f       	mul	r22, r21
    434a:	f0 0d       	add	r31, r0
    434c:	99 27       	eor	r25, r25
    434e:	72 9f       	mul	r23, r18
    4350:	b0 0d       	add	r27, r0
    4352:	e1 1d       	adc	r30, r1
    4354:	f9 1f       	adc	r31, r25
    4356:	63 9f       	mul	r22, r19
    4358:	b0 0d       	add	r27, r0
    435a:	e1 1d       	adc	r30, r1
    435c:	f9 1f       	adc	r31, r25
    435e:	bd 01       	movw	r22, r26
    4360:	cf 01       	movw	r24, r30
    4362:	11 24       	eor	r1, r1
    4364:	08 95       	ret

00004366 <__udivmodhi4>:
    4366:	aa 1b       	sub	r26, r26
    4368:	bb 1b       	sub	r27, r27
    436a:	51 e1       	ldi	r21, 0x11	; 17
    436c:	07 c0       	rjmp	.+14     	; 0x437c <__udivmodhi4_ep>

0000436e <__udivmodhi4_loop>:
    436e:	aa 1f       	adc	r26, r26
    4370:	bb 1f       	adc	r27, r27
    4372:	a6 17       	cp	r26, r22
    4374:	b7 07       	cpc	r27, r23
    4376:	10 f0       	brcs	.+4      	; 0x437c <__udivmodhi4_ep>
    4378:	a6 1b       	sub	r26, r22
    437a:	b7 0b       	sbc	r27, r23

0000437c <__udivmodhi4_ep>:
    437c:	88 1f       	adc	r24, r24
    437e:	99 1f       	adc	r25, r25
    4380:	5a 95       	dec	r21
    4382:	a9 f7       	brne	.-22     	; 0x436e <__udivmodhi4_loop>
    4384:	80 95       	com	r24
    4386:	90 95       	com	r25
    4388:	bc 01       	movw	r22, r24
    438a:	cd 01       	movw	r24, r26
    438c:	08 95       	ret

0000438e <__udivmodsi4>:
    438e:	a1 e2       	ldi	r26, 0x21	; 33
    4390:	1a 2e       	mov	r1, r26
    4392:	aa 1b       	sub	r26, r26
    4394:	bb 1b       	sub	r27, r27
    4396:	fd 01       	movw	r30, r26
    4398:	0d c0       	rjmp	.+26     	; 0x43b4 <__udivmodsi4_ep>

0000439a <__udivmodsi4_loop>:
    439a:	aa 1f       	adc	r26, r26
    439c:	bb 1f       	adc	r27, r27
    439e:	ee 1f       	adc	r30, r30
    43a0:	ff 1f       	adc	r31, r31
    43a2:	a2 17       	cp	r26, r18
    43a4:	b3 07       	cpc	r27, r19
    43a6:	e4 07       	cpc	r30, r20
    43a8:	f5 07       	cpc	r31, r21
    43aa:	20 f0       	brcs	.+8      	; 0x43b4 <__udivmodsi4_ep>
    43ac:	a2 1b       	sub	r26, r18
    43ae:	b3 0b       	sbc	r27, r19
    43b0:	e4 0b       	sbc	r30, r20
    43b2:	f5 0b       	sbc	r31, r21

000043b4 <__udivmodsi4_ep>:
    43b4:	66 1f       	adc	r22, r22
    43b6:	77 1f       	adc	r23, r23
    43b8:	88 1f       	adc	r24, r24
    43ba:	99 1f       	adc	r25, r25
    43bc:	1a 94       	dec	r1
    43be:	69 f7       	brne	.-38     	; 0x439a <__udivmodsi4_loop>
    43c0:	60 95       	com	r22
    43c2:	70 95       	com	r23
    43c4:	80 95       	com	r24
    43c6:	90 95       	com	r25
    43c8:	9b 01       	movw	r18, r22
    43ca:	ac 01       	movw	r20, r24
    43cc:	bd 01       	movw	r22, r26
    43ce:	cf 01       	movw	r24, r30
    43d0:	08 95       	ret

000043d2 <__divmodsi4>:
    43d2:	97 fb       	bst	r25, 7
    43d4:	09 2e       	mov	r0, r25
    43d6:	05 26       	eor	r0, r21
    43d8:	0e d0       	rcall	.+28     	; 0x43f6 <__divmodsi4_neg1>
    43da:	57 fd       	sbrc	r21, 7
    43dc:	04 d0       	rcall	.+8      	; 0x43e6 <__divmodsi4_neg2>
    43de:	d7 df       	rcall	.-82     	; 0x438e <__udivmodsi4>
    43e0:	0a d0       	rcall	.+20     	; 0x43f6 <__divmodsi4_neg1>
    43e2:	00 1c       	adc	r0, r0
    43e4:	38 f4       	brcc	.+14     	; 0x43f4 <__divmodsi4_exit>

000043e6 <__divmodsi4_neg2>:
    43e6:	50 95       	com	r21
    43e8:	40 95       	com	r20
    43ea:	30 95       	com	r19
    43ec:	21 95       	neg	r18
    43ee:	3f 4f       	sbci	r19, 0xFF	; 255
    43f0:	4f 4f       	sbci	r20, 0xFF	; 255
    43f2:	5f 4f       	sbci	r21, 0xFF	; 255

000043f4 <__divmodsi4_exit>:
    43f4:	08 95       	ret

000043f6 <__divmodsi4_neg1>:
    43f6:	f6 f7       	brtc	.-4      	; 0x43f4 <__divmodsi4_exit>
    43f8:	90 95       	com	r25
    43fa:	80 95       	com	r24
    43fc:	70 95       	com	r23
    43fe:	61 95       	neg	r22
    4400:	7f 4f       	sbci	r23, 0xFF	; 255
    4402:	8f 4f       	sbci	r24, 0xFF	; 255
    4404:	9f 4f       	sbci	r25, 0xFF	; 255
    4406:	08 95       	ret

00004408 <__prologue_saves__>:
    4408:	2f 92       	push	r2
    440a:	3f 92       	push	r3
    440c:	4f 92       	push	r4
    440e:	5f 92       	push	r5
    4410:	6f 92       	push	r6
    4412:	7f 92       	push	r7
    4414:	8f 92       	push	r8
    4416:	9f 92       	push	r9
    4418:	af 92       	push	r10
    441a:	bf 92       	push	r11
    441c:	cf 92       	push	r12
    441e:	df 92       	push	r13
    4420:	ef 92       	push	r14
    4422:	ff 92       	push	r15
    4424:	0f 93       	push	r16
    4426:	1f 93       	push	r17
    4428:	cf 93       	push	r28
    442a:	df 93       	push	r29
    442c:	cd b7       	in	r28, 0x3d	; 61
    442e:	de b7       	in	r29, 0x3e	; 62
    4430:	ca 1b       	sub	r28, r26
    4432:	db 0b       	sbc	r29, r27
    4434:	0f b6       	in	r0, 0x3f	; 63
    4436:	f8 94       	cli
    4438:	de bf       	out	0x3e, r29	; 62
    443a:	0f be       	out	0x3f, r0	; 63
    443c:	cd bf       	out	0x3d, r28	; 61
    443e:	09 94       	ijmp

00004440 <__epilogue_restores__>:
    4440:	2a 88       	ldd	r2, Y+18	; 0x12
    4442:	39 88       	ldd	r3, Y+17	; 0x11
    4444:	48 88       	ldd	r4, Y+16	; 0x10
    4446:	5f 84       	ldd	r5, Y+15	; 0x0f
    4448:	6e 84       	ldd	r6, Y+14	; 0x0e
    444a:	7d 84       	ldd	r7, Y+13	; 0x0d
    444c:	8c 84       	ldd	r8, Y+12	; 0x0c
    444e:	9b 84       	ldd	r9, Y+11	; 0x0b
    4450:	aa 84       	ldd	r10, Y+10	; 0x0a
    4452:	b9 84       	ldd	r11, Y+9	; 0x09
    4454:	c8 84       	ldd	r12, Y+8	; 0x08
    4456:	df 80       	ldd	r13, Y+7	; 0x07
    4458:	ee 80       	ldd	r14, Y+6	; 0x06
    445a:	fd 80       	ldd	r15, Y+5	; 0x05
    445c:	0c 81       	ldd	r16, Y+4	; 0x04
    445e:	1b 81       	ldd	r17, Y+3	; 0x03
    4460:	aa 81       	ldd	r26, Y+2	; 0x02
    4462:	b9 81       	ldd	r27, Y+1	; 0x01
    4464:	ce 0f       	add	r28, r30
    4466:	d1 1d       	adc	r29, r1
    4468:	0f b6       	in	r0, 0x3f	; 63
    446a:	f8 94       	cli
    446c:	de bf       	out	0x3e, r29	; 62
    446e:	0f be       	out	0x3f, r0	; 63
    4470:	cd bf       	out	0x3d, r28	; 61
    4472:	ed 01       	movw	r28, r26
    4474:	08 95       	ret

00004476 <__tablejump2__>:
    4476:	ee 0f       	add	r30, r30
    4478:	ff 1f       	adc	r31, r31

0000447a <__tablejump__>:
    447a:	05 90       	lpm	r0, Z+
    447c:	f4 91       	lpm	r31, Z+
    447e:	e0 2d       	mov	r30, r0
    4480:	09 94       	ijmp

00004482 <_exit>:
    4482:	f8 94       	cli

00004484 <__stop_program>:
    4484:	ff cf       	rjmp	.-2      	; 0x4484 <__stop_program>
